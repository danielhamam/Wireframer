{"version":3,"sources":["components/edit_screen/WireframeBox.js","components/edit_screen/WireframeItem.js","config/firebaseConfig.js","redux/actions/actionCreators.js","redux/reducers/authReducer/authReducer.js","redux/reducers/rootReducer.js","redux/reducers/authReducer/authReducerHelpers.js","components/navbar/LoggedInLinks.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/WireFrameCards.js","components/home_screen/HomeScreen.js","components/edit_screen/EditScreen.js","test/DatabaseTester.js","App.js","redux/ReactReduxFirebaseApp.js","index.js","config/constants.js"],"names":["WireframeBox","props","state","goHome","scale","wireframe","staging_changes_items","global","structuredClone","items","name","height","width","isCurrSelection","isWidthEnabled","isHeightEnabled","pending_width","pending_height","prompt_save","z_index_high","bringToFrontVal","z_index_low","sendToBackVal","isModalOpen","setSave","setState","setCurrSelection","toggleVal","itemId","getSelectedItem","find","item","id","zoomIn","e","forEach","console","log","control_width","parseInt","toString","constants","MAX_ITEM_WIDTH_ZOOM","control_height","MAX_ITEM_HEIGHT_ZOOM","control_font_size","MAX_FONT_SIZE_ZOOM","zoomOut","MIN_ITEM_WIDTH_ZOOM","MIN_ITEM_HEIGHT_ZOOM","MIN_FONT_SIZE_ZOOM","saveWork","wireframes","length","temp","wireframeIndex","getFirestore","collection","doc","accountId","update","closeWork","handleChange_textColor","handleChange_itemProperty","target","value","handleChange_borderColor","handleChange_backgroundColor","handleChange_text","handleChange_font_size","handleChange_border_thickness","handleChange_border_radius","propertyId","propertyName","newValue","document","getElementById","handleChange_name","handleChange_diagram_width","handleChange_diagram_height","checkWidth_diagram","checkHeight_diagram","height_status","closeWork_check","toggleModal","myModal","modalOverlay","style","display","animation","visibility","deleteItem","index","indexOf","splice","rerender","sendItemToBack","selectedItem","z_index","prevState","bringItemToFront","updatePropertyLabels","control_text","control_text_color","control_background","control_border_color","control_border_thickness","control_border_radius","componentDidUpdate","control","setAttribute","backgroundColor","itemType","new_item","Math","floor","random","newItemProps","control_x_position","control_y_position","this","push","to","className","onClick","addNewItem","type","placeholder","parseFloat","toFixed","map","key","duplicateItem","textFieldInputRef","fontSizeTextfieldRef","textColorFieldRef","backgroundFieldRef","borderColorFieldRef","borderThicknessFieldRef","borderRadiusFieldRef","onChange","prevent","defaultValue","marginRight","disabled","Component","compose","connect","auth","firebase","accounts","firestore","ordered","profile","firestoreConnect","WireframeItem","setSelected","isSelected","checkKeyPress","preventDefault","keyCode","deselectItem","ctrlKey","metaKey","duplicateSelectedItem","item_duplicate","is_duplicate","checkDraggable","checkResizable","bottom","bottomLeft","bottomRight","left","right","top","topLeft","topRight","classList","contains","inner1","remove","inner2","inner3","inner4","selectItem","add","changeButton","checkControl","numScale","onClickOut","onKeyDown","enableResizing","ref","el","rndRef","size","zIndex","position","onDragStart","data","onDragStop","d","x","y","onResize","ignore1","ignore2","ignore3","offsetWidth","offsetHeight","default","fontSize","borderColor","color","borderWidth","borderRadius","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","logoutSucceeded","initState","creating","authError","loggedOutLink","authReducer","action","error","rootReducer","combineReducers","account","accountReducer","firestoreReducer","firebaseReducer","loginHandler","credentials","loginSucceeded","loginErrored","a","signInWithEmailAndPassword","email","password","catch","message","registerHandler","newUser","startedDispatchCall","succeededDispatchCall","erroredDispatchCall","createUserWithEmailAndPassword","userResp","user","uid","set","firstName","lastName","created_time","Date","account_key","administrator","LoggedInLinks","handleLogout","signOut","React","firebaseConnect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","toggleLink","window","location","pathname","Navbar","links","RegisterScreen","failedMsg","handleChange","handleSubmit","passwordValidationErrMsg","registerStarted","registerSucceeded","registerErrored","registrationFailedErrMsg","onSubmit","htmlFor","LoginScreen","WireFrameCards","deleteWireframe","wireframeKey","fireStore","userId","on","HomeScreen","isNewWireframe","list_index","adminRedirect","goAdmin","handleNewWireframe","answer","FieldValue","arrayUnion","updateList","isAdministrator","EditScreen","wireframer","Number","match","params","wireframe_key","DatabaseTester","administator","handleClear","get","querySnapshot","delete","handleReset","accountJson","account_id","checkAdministrator","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d208775.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport WireframeItem from './WireframeItem';\nimport constants from '../../config/constants';\nclass WireframeBox extends Component {\n    constructor(props) {\n        super(props);\n        // this.textFieldInputRef = React.createRef();\n        // this.fontSizeTextfieldRef = React.createRef();\n        // this.textColorFieldRef = React.createRef();\n        // this.backgroundFieldRef = React.createRef();\n        // this.borderColorFieldRef = React.createRef();\n        // this.borderThicknessFieldRef = React.createRef();\n        // this.borderRadiusFieldRef = React.createRef();\n    }\n    state = {\n        goHome : false,\n        scale: this.props.wireframe ? this.props.wireframe.scale : 1, \n        staging_changes_items: this.props.wireframe ? global.structuredClone(this.props.wireframe.items) : [], // DEEP COPY - keeping track of original, unupdated items in case of 'Close Work'\n        name: this.props.wireframe ? this.props.wireframe.name : '',\n        height : this.props.wireframe ? this.props.wireframe.height : 460,\n        width : this.props.wireframe ? this.props.wireframe.width : 500,\n        isCurrSelection : [false,null], // returns true if an item is currently selected\n        isWidthEnabled : true,\n        isHeightEnabled : true,\n        pending_width : 0,\n        pending_height : 0,\n        prompt_save : false, // modal save pop-up\n        z_index_high : this.props.wireframe.bringToFrontVal ? this.props.wireframe.bringToFrontVal : 1073741823,\n        z_index_low : this.props.wireframe.sendToBackVal ? this.props.wireframe.sendToBackVal : 1073741823,\n        isModalOpen : false\n    }\n\n    setSave = () => {this.setState({prompt_save : true})} // If prompt_save is true, will prompt user if he/she would like to save when closing work.\n    setCurrSelection = (toggleVal, itemId) => {\n        this.setState({isCurrSelection : [toggleVal, itemId]})\n    }\n\n    getSelectedItem = () => {\n        if (this.state.isCurrSelection[1] != null)\n            return this.state.staging_changes_items.find((item) => item.id === this.state.isCurrSelection[1]);\n    }\n\n    zoomIn = (e) => {\n        // let calculatedScale = this.state.scale * 1.5;\n        this.state.staging_changes_items.forEach((item) => {\n            console.log(\"before item: \", item);\n            item.control_width = (parseInt(item.control_width, 10) * 1.2).toString() < constants.MAX_ITEM_WIDTH_ZOOM ? (parseInt(item.control_width, 10) * 1.2).toString() : \"450\";\n            item.control_height = (parseInt(item.control_height, 10) * 1.2).toString() < constants.MAX_ITEM_HEIGHT_ZOOM ? (parseInt(item.control_height, 10) * 1.2).toString() : \"450\";\n            item.control_font_size = (parseInt(item.control_font_size) + 1).toString() < constants.MAX_FONT_SIZE_ZOOM ? (parseInt(item.control_font_size) + 1).toString() : \"50\";\n            // console.log(\"after item: \", item);\n        });\n        // this.setState({ scale : calculatedScale});\n        this.setSave();\n    }\n        \n    zoomOut = (e) => {\n        // console.log(\"before item: \", item);\n        this.state.staging_changes_items.forEach((item) => {\n            console.log(\"before item: \", item);\n            item.control_width = (parseInt(item.control_width, 10) / 1.2).toString() > constants.MIN_ITEM_WIDTH_ZOOM ? (parseInt(item.control_width, 10) / 1.2).toString() : constants.MIN_ITEM_WIDTH_ZOOM.toString();\n            item.control_height = (parseInt(item.control_height, 10) / 1.2).toString() > constants.MIN_ITEM_HEIGHT_ZOOM  ? (parseInt(item.control_height, 10) / 1.2).toString() : constants.MIN_ITEM_HEIGHT_ZOOM.toString();;\n            item.control_font_size = (parseInt(item.control_font_size) - 1).toString() > constants.MIN_FONT_SIZE_ZOOM ? (parseInt(item.control_font_size) - 1).toString() : constants.MIN_FONT_SIZE_ZOOM.toString();;\n            console.log(\"after item: \", item);\n        });\n        // console.log(\"after item: \", item);\n        this.setSave();\n    }\n        \n    saveWork = () => {\n\n        console.log('stage: ', this.state.staging_changes_items);\n        // Set wireframes' items data\n        this.props.wireframe.items = this.state.staging_changes_items; // set to staging wireframe\n\n        // Set wireframes' data\n        this.props.wireframe.name = this.state.name;\n        this.props.wireframe.width = this.state.width;\n        this.props.wireframe.height = this.state.height;\n        this.props.wireframe.scale = this.state.scale;\n        this.props.wireframe.bringToFrontVal = this.state.z_index_high;\n        this.props.wireframe.sendToBackVal = this.state.z_index_low;\n        // this.props.wireframe.created_time = new Date(); // so it can be on top\n\n        // Move it to be first on the list \n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframe;\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n        }\n\n        console.log('this.props.wireframes: ', this.props.wireframes);\n\n        // Update wireframe\n        getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes});\n\n        // Go back to home screen\n        this.setState({goHome : true});\n    }\n    closeWork = () => {\n        \n        console.log('saving.....')\n        console.log('this.props.wireframe: ', this.props.wireframe);\n        \n        // console.log('BEFORE this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n        // console.log('AFTER this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n\n        // Move it to top of list if there are multiple\n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframes[this.props.wireframeIndex];\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n            getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes}); \n        }\n        // Reset items staging changes to original wireframe\n        this.setState({staging_changes_items : this.props.wireframe.items});\n        this.setState({goHome : true});\n    }\n\n    addNewItem(itemType) {\n\n        if (itemType !== 'container' && itemType !== 'button' && itemType !== 'label' && itemType !== 'textfield') {\n            console.log(\"WireframeBox.addNewItem: cannot add new item as it is incorrect type...\");\n            return;\n        }\n\n        const new_item = {\n            id : Math.floor(100000 + Math.random() * 900000),\n            control : itemType,\n            z_index : 1073741823,\n            control_width : constants.newItemProps[itemType]['control_width'],\n            control_height: constants.newItemProps[itemType]['control_height'],\n            control_text : constants.newItemProps[itemType]['control_text'],\n            control_font_size : constants.newItemProps[itemType]['control_font_size'],\n            control_background : constants.newItemProps[itemType]['control_background'],\n            control_border_color : constants.newItemProps[itemType]['control_border_color'],\n            control_text_color :constants.newItemProps[itemType]['control_text_color'],\n            control_border_thickness : constants.newItemProps[itemType]['control_border_thickness'],\n            control_border_radius : constants.newItemProps[itemType]['control_border_radius'],\n            control_x_position : constants.newItemProps[itemType]['control_x_position'],\n            control_y_position : constants.newItemProps[itemType]['control_y_position']\n        }\n        this.state.staging_changes_items.push(new_item);\n        this.setState({prompt_save : true});\n    }\n\n    handleChange_textColor = (e) => { this.handleChange_itemProperty('text_color_field', 'control_text_color', e.target.value) }\n    handleChange_borderColor = (e) => { this.handleChange_itemProperty('border_color_field', 'control_border_color' ,e.target.value) }\n    handleChange_backgroundColor = (e) => { this.handleChange_itemProperty('background_field', 'control_background' ,e.target.value) }\n    handleChange_text = (e) => { this.handleChange_itemProperty('textfield_input', 'control_text', e.target.value) }\n    handleChange_font_size = (e) => { this.handleChange_itemProperty('font_size_textfield', 'control_font_size', e.target.value)}\n    handleChange_border_thickness = (e) => { this.handleChange_itemProperty('border_thickness_field', 'control_border_thickness' ,e.target.value) }\n    handleChange_border_radius = (e) => { this.handleChange_itemProperty('border_radius_field', 'control_border_radius' ,e.target.value) }\n    handleChange_itemProperty = (propertyId, propertyName, newValue) => {\n        if (this.state.isCurrSelection[1] !== null) \n        {\n            let selectedItem = this.state.staging_changes_items.find((item => item.id === this.state.isCurrSelection[1])); // should return the reference since type is object\n            selectedItem[propertyName] = newValue;\n            document.getElementById(propertyId).value = newValue;\n            this.setState({staging_changes_items : this.state.staging_changes_items}); // force a rerender since this state var changed\n            this.setSave();\n        }\n    }\n\n    handleChange_name = (e) => { this.setState({ name: e.target.value}); this.setSave(); }\n    handleChange_diagram_width = (e) => { this.setState({ width: this.state.pending_width}); this.setSave(); }\n    handleChange_diagram_height = (e) => { this.setState({ height: this.state.pending_height}); this.setSave(); }\n    checkWidth_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({isWidthEnabled : false});\n            this.setState({pending_width : e.target.value})\n        }\n        else {\n            this.setState({isWidthEnabled : true});\n        }\n    }\n\n    checkHeight_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({height_status : false});\n            this.setState({pending_height : e.target.value})\n        }\n        else {\n            this.setState({height_status : true});\n        }\n    }\n\n    closeWork_check = () => {\n\n        if (this.state.prompt_save) {\n            this.toggleModal();\n        }\n        else {\n            this.closeWork();\n        }\n    }\n\n    toggleModal = () => {\n        let myModal = document.getElementById(\"my_modal\");\n        let modalOverlay = document.getElementById(\"modal_screen_overlay\");\n        if (myModal.style.display === \"block\") {\n            myModal.style.animation = \"fadeout .6s\";\n            myModal.style.visibility = \"hidden\";\n            modalOverlay.style.display = \"hidden\";\n            this.setState({isModalOpen : false});\n        } else {\n            myModal.style.visibility = \"visible\";\n            myModal.style.animation = \"fadein .6s\";\n            myModal.style.display = \"block\";\n            modalOverlay.style.display = \"block\";\n            this.setState({isModalOpen : true});\n        }\n    }\n\n    deleteItem = (item) => {\n        let index = this.state.staging_changes_items.indexOf(item);\n        this.state.staging_changes_items.splice( index, 1 ); // removed item\n        this.setState({ rerender : true}); // rerender\n        // console.log('deleted item');\n      }\n\n    sendItemToBack = () => {\n        // Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            let selectedItem = this.getSelectedItem();\n            if (selectedItem != null) {\n                console.log(\"Moving z index of \", selectedItem, \" back to \", this.state.z_index_low - 1);\n                selectedItem.z_index = this.state.z_index_low - 1;\n                this.setState((prevState) => ({z_index_low : prevState.z_index_low - 1}));\n                this.setSave();\n            }\n        }\n    }\n    bringItemToFront = () => {\n        let selectedItem = this.getSelectedItem();\n        // Check if selected item exists\n        if (selectedItem != null && this.state.isCurrSelection[0] && this.state.isCurrSelection[1] != null) {\n            selectedItem.z_index = this.state.z_index_high + 1;\n            this.setState((prevState) => ({z_index_high : prevState.z_index_high + 1})); // call back function\n            console.log(\"Moving z index of \", selectedItem, \" in front to \", this.state.z_index_high + 1);\n            this.setSave();\n        }\n    }\n    updatePropertyLabels = () => {\n        // Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            let item = this.state.isCurrSelection[1];\n            // debugger;\n            document.getElementById(\"font_size_textfield\").value = item.control_font_size;\n            document.getElementById(\"textfield_input\").value = item.control_text;\n            document.getElementById(\"text_color_field\").value = item.control_text_color;\n            document.getElementById(\"background_field\").value = item.control_background; // background color\n            document.getElementById(\"border_color_field\").value = item.control_border_color; // background color\n            document.getElementById(\"border_thickness_field\").value = item.control_border_thickness;\n            document.getElementById(\"border_radius_field\").value = item.control_border_radius ;\n        }\n    }\n\n    componentDidUpdate = () => {\n        // Here, we are going to update the properties panel on the right side with the props of the item.\n\n        // 1. Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null && !this.state.goHome) {\n            let item = this.getSelectedItem();\n            // console.log(\"Item: \", item);\n            // if item is container\n            if (item != null) {\n                if (item.control === 'container') {\n                    document.getElementById(\"font_size_textfield\").setAttribute('disabled', '');\n                    document.getElementById(\"textfield_input\").setAttribute('disabled', '');\n                    document.getElementById(\"text_color_field\").setAttribute('disabled', '');\n                    document.getElementById(\"font_size_textfield\").style.backgroundColor = 'lightgray';\n                    document.getElementById(\"textfield_input\").style.backgroundColor = 'lightgray';\n                    document.getElementById(\"text_color_field\").style.backgroundColor = 'lightgray';\n                }\n                // not a container\n                else {\n                    document.getElementById(\"font_size_textfield\").value = item.control_font_size;\n                    document.getElementById(\"textfield_input\").value = item.control_text;\n                    document.getElementById(\"text_color_field\").value = item.control_text_color;\n                }\n                // do for all items\n                    document.getElementById(\"background_field\").value = item.control_background; // background color\n                    document.getElementById(\"border_color_field\").value = item.control_border_color; // background color\n                    document.getElementById(\"border_thickness_field\").value = item.control_border_thickness;\n                    document.getElementById(\"border_radius_field\").value = item.control_border_radius ;\n                }\n            }\n        }\n \n    render() {\n\n        if (this.state.goHome === true) {\n            return <Redirect to={\"/\"} />\n        }\n\n        const wireframe = this.props.wireframe;\n        const items = this.state.staging_changes_items;\n\n        return (\n                <div className = \"inner_edit_box\">\n                    <div className = \"left_screen\">\n                        <div className = \"top_left\">\n                            <div id=\"zoom_buttons\" > \n                                <i className=\"material-icons medium\" onClick={this.zoomIn}> zoom_in</i>\n                                <i className=\"material-icons medium\" onClick={this.zoomOut}> zoom_out</i>\n                            </div>\n                            <div id=\"save_work\" onClick={this.saveWork}> Save </div>\n                            <div id=\"close_work\" onClick={this.closeWork_check}> Close </div>\n                        </div>\n                        <div id=\"bottom_left\"> \n                            <div className=\"container_example\">\n                                <div className=\"container_box example_item_select\" onClick={() => this.addNewItem('container')} > </div>\n                                <div id=\"container_text\" className='example_item' > Container </div>\n                            </div>\n                            < br />\n                            <div id=\"prompt_for_input\">\n                                <div className=\"prompt_text example_item_select\" onClick={() => this.addNewItem('label')} > Prompt for input:</div>\n                                <div id=\"label_text\" className='example_item'>Label</div>\n                            </div>\n                            <div className=\"button_example\">\n                                <button className=\"button_submit example_item_select\" onClick={() => this.addNewItem('button')}> Submit</button>\n                                <div id=\"button_text\" className='example_item'> Button</div>\n                            </div>\n                            < br />\n                            <div className=\"textfield_example\">\n                                <input type=\"input\" className=\"textfield_input example_item_select\" placeholder=\"Input\" onClick={() => this.addNewItem('textfield')} />\n                                <p id=\"textfield_label\" className='example_item'>Textfield</p>\n                            </div>\n                        </div>\n                    </div> \n                    <div id=\"middle_screen\" className=\"middle_screen\"> \n                        <div id=\"dimension\" className=\"dimension\" style={{width: this.state.width + \"px\", height: this.state.height + \"px\", scale: parseFloat(this.state.scale).toFixed(1)}}>\n                            {wireframe && items && items.map(item => (\n                                <WireframeItem items={items} item={item} key={item.id} isCurrSelection={this.state.isCurrSelection} \n                                deleteItem = {this.deleteItem} duplicateItem={this.duplicateItem} zoomIn={this.zoomIn} zoomOut={this.zoomOut} \n                                width={this.state.width} height={this.state.height} setSave={this.setSave} setCurrSelection={this.setCurrSelection}\n                                // Refs for property elements\n                                textFieldInputRef={this.textFieldInputRef} fontSizeTextfieldRef={this.fontSizeTextfieldRef} textColorFieldRef={this.textColorFieldRef}\n                                backgroundFieldRef={this.backgroundFieldRef} borderColorFieldRef={this.borderColorFieldRef} borderThicknessFieldRef={this.borderThicknessFieldRef}\n                                borderRadiusFieldRef={this.borderRadiusFieldRef} scale={this.state.scale}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                    <div className = \"right_screen\">\n                            <div className=\"labels_list\"> \n                            { this.state.isCurrSelection[0] ? \n                                // Case where item is selected\n                                <div className='right_screen_item_selected'>\n                                    <div className=\"properties_example\">\n                                        <p id=\"properties_label\" >Properties</p>\n                                        <input type=\"input\" id=\"textfield_input\" onChange={(e) => this.handleChange_text(e)}/>\n                                    </div>\n                                    <div id=\"font_size_label\"> Font Size: \n                                        <input type=\"input\" id=\"font_size_textfield\" onChange={(e) => this.handleChange_font_size(e)}/>\n                                    </div>\n                                    <div id=\"text_color_label\"> Text Color: \n                                        <input type=\"color\" id=\"text_color_field\" onChange = {(e) => this.handleChange_textColor(e)} />\n                                    </div>\n                                    <div id=\"background_label\"> Background: \n                                        <input type=\"color\" id=\"background_field\" onChange={(e) => this.handleChange_backgroundColor(e)}/>\n                                    </div>\n                                    <div id=\"border_color_label\"> Border Color: \n                                        <input type=\"color\" id=\"border_color_field\" onChange = {(e) => this.handleChange_borderColor(e)} />\n                                    </div>\n                                    <div id=\"border_thickness_label\"> Border Thickness:\n                                        <input type=\"input\" id=\"border_thickness_field\" onChange = {(e) => this.handleChange_border_thickness(e)} />\n                                    </div>\n                                    <div id= \"border_radius_label\"> Border Radius:\n                                        <input type=\"input\" id=\"border_radius_field\" onChange = {(e) => this.handleChange_border_radius(e)} />\n                                    </div> \n                                    <div id= \"zIndexItem\">\n                                        <input type=\"button\" id=\"bring_to_front\" value=\"Bring to Front\" onClick={() => this.bringItemToFront()}/>\n                                        <input type=\"button\" id=\"send_to_back\" value=\"Send to Back\" onClick={() => this.sendItemToBack()}/>\n                                    </div> \n                                    <div id= \"name_of_wireframe\" className=\"name_of_wireframe\"> Name:\n                                        <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                                    </div>\n                                </div>\n                                : \n                                // Case where item isn't selected\n                                <>\n                                    <div className='right_screen_no_item'> No item is selected </div>\n                                    <div id= \"name_of_wireframe\" className=\"name_of_wireframe_no_item\"> Name:\n                                        <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                                    </div>\n                                </>\n                                }\n                            </div>\n                    </div> \n                    <div id=\"modal_screen_overlay\"> </div>\n                    <div id=\"my_modal\" className=\"modal\">\n                        <div className=\"modal-content \">\n                            <h4>Save Wireframe?</h4>\n                            <span> Would you like to save your progress? </span>\n                        </div>\n                        <button id=\"yes\" onClick={this.saveWork} className=\"modal-close\" style={{marginRight: '12px'}}>Yes</button>\n                        <button id=\"no\" onClick={this.closeWork} className=\"modal-close\">No</button>\n                        <div id=\"last_line\"> Without saving, all progress will be lost.</div>\n                    </div>\n                    <div id=\"wireframe_dimensions\">\n                        <div id=\"wireframe_dimension_left\" className=\"font_dimension\"> \n                            <button id=\"dimension_width_button\" disabled={this.state.isWidthEnabled} onClick={this.handleChange_diagram_width} >Update Width </button>\n                            <input type=\"input\" id=\"dimension_width\" name=\"width\" onChange ={(e) => this.checkWidth_diagram(e)}/>\n                        </div>\n                        <div id=\"wireframe_dimension_right\" className=\"font_dimension\"> \n                            <button id=\"dimension_height_button\" disabled={this.state.isHeightEnabled} onClick = {this.handleChange_diagram_height}>Update Height </button>\n                            <input type=\"input\" id=\"dimension_height\" name=\"height\" onChange ={(e) => this.checkHeight_diagram(e)}/>\n                        </div>\n                    </div> \n                </div>\n            );\n        }\n    }\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      accounts : state.firestore.ordered.accounts,\n      wireframes: state.firebase.profile.wireframes\n     }\n  };\n\n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'accounts' },\n    ]),\n  )(WireframeBox);","import React, { Component } from 'react';\nimport ClickOutHandler from 'react-onclickout'; \nimport {Rnd} from 'react-rnd'; // resizable and draggable component for React.\n\nclass WireframeItem extends Component {\n  constructor() {\n    super();\n    // this.rndRef = React.createRef();\n    this.state = {\n      // State variables initialized to props value as start value\n      // control_x_position : this.props.item.control_x_position,\n      // control_y_position : this.props.item.control_y_position,\n  \n      rerender : false,\n      isSelected : false,\n  \n      inner1 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      inner2 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      inner3 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      inner4 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      \n      // drag bounds\n      // top: 40, \n      // left: 40\n  \n    }\n  }\n  \n  setSelected = (toggleVal) => {\n    this.setState({isSelected: toggleVal});\n    if (toggleVal) this.props.setCurrSelection(toggleVal, this.props.item.id); // send the item to parent\n    else this.props.setCurrSelection(toggleVal, null); // no item to send to parent\n  }\n\ncheckKeyPress = (e) => {\n  e.preventDefault();\n  if (this.state.isSelected) {\n    if (e.keyCode === 8 || e.key === \"Delete\") {\n      document.getElementById(\"font_size_textfield\").value = \"\";\n      document.getElementById(\"textfield_input\").value = \"\";\n      document.getElementById(\"text_color_field\").value = \"#000000\";\n      document.getElementById(\"background_field\").value = \"#000000\";\n      document.getElementById(\"border_color_field\").value = \"#000000\";\n      document.getElementById(\"border_thickness_field\").value = \"\";\n      document.getElementById(\"border_radius_field\").value = \"\";\n      this.deselectItem('delete');\n      this.props.deleteItem(this.props.item);\n    }\n    else if (e.keyCode === 68 && (e.ctrlKey || e.metaKey)) { // Ctrl + d to duplicate\n      e.preventDefault();\n      this.duplicateSelectedItem();\n      this.deselectItem('duplicate');\n      // this.postDuplicate();\n      // this.saveProps();\n    }\n  }\n}\n\n// deleteItem = (item) => {\n//   let index = this.props.items.indexOf(item);\n//   this.props.items.splice( index, 1 ); // removed item\n//   this.setState({ rerender : true}); // rerender\n//   console.log('deleted item');\n// }\n\nduplicateSelectedItem = () => {\n  let item = this.props.item;\n  const item_duplicate = {\n      id : Math.floor(100000 + Math.random() * 900000),\n      control : item.control,\n      control_width : item.control_width,\n      control_height: item.control_height,\n      control_text: item.control_text,\n      control_font_size : item.control_font_size,\n      control_background : item.control_background,\n      control_border_color : item.control_border_color,\n      control_text_color : item.control_text_color,\n      control_border_thickness : item.control_border_thickness,\n      control_border_radius : item.control_border_radius,\n      control_x_position : item.control_x_position,\n      control_y_position : item.control_y_position,\n      is_duplicate : true\n  }\n  this.props.items.push( item_duplicate ); // add duplicated item \n  return item_duplicate;\n}\n\ncheckDraggable = () => {\n  // return true;\n  // if (this.state.isSelected) { return false; }\n  // else { return true; }\n}\n\ncheckResizable = () => {\n\nif (!this.state.isSelected) {\n  const returnable = {\n    bottom: false,\n    bottomLeft: false,\n    bottomRight: false,\n    left: false,\n    right: false,\n    top: false,\n    topLeft: false,\n    topRight: false\n    } \n  return returnable;\n  }\nelse {\n    const returnable2 = {\n      bottom: false,\n      bottomLeft: true,\n      bottomRight: true,\n      left: false,\n      right: false,\n      top: false,\n      topLeft: true,\n      topRight: true\n      } \n  return returnable2;\n  }\n}\n\ndeselectItem = (e) => {\n  console.log(\"EVENT: \", e)\n  if (this.state.isSelected && this.props.isCurrSelection[0] \n    && (e === 'delete' || e === 'duplicate' || e.target && (e.target.classList.contains('dimension') || // can only deselect when clicking within dimension \n    e.target.classList.contains('control_move')))) // check if it's another item\n  {\n    // console.log(\"WireframeItem.deselectItem - Event object: \", e);\n    console.log(\"WireframeItem.deselectItem - Deselecting Item With ID: \", this.props.item.id);\n\n    // Reset corner boxes CSS\n    document.getElementById(this.state.inner1).classList.remove(\"rectangle_topleft\");\n    document.getElementById(this.state.inner2).classList.remove(\"rectangle_topright\");\n    document.getElementById(this.state.inner3).classList.remove(\"rectangle_bottomleft\");\n    document.getElementById(this.state.inner4).classList.remove(\"rectangle_bottomright\");\n    document.getElementById(this.props.item.id).classList.remove(\"select_border\");\n\n    if (e.target && !e.target.classList.contains('control_move')) {\n      console.log('Selection was not another item - proceeding...');\n      // Reset inputs on the right hand side\n      document.getElementById(\"font_size_textfield\").value = \"\";\n      document.getElementById(\"textfield_input\").value = \"\";\n      document.getElementById(\"text_color_field\").value = \"#000000\";\n      document.getElementById(\"background_field\").value = \"#000000\";\n      document.getElementById(\"border_color_field\").value = \"#000000\";\n      document.getElementById(\"border_thickness_field\").value = \"\";\n      document.getElementById(\"border_radius_field\").value = \"\";\n      // Reset item selection CSS design\n      this.setSelected(false);\n    }\n    else {\n      this.setState({isSelected : false}); // tell itself that it isn't selected\n    } // In this use case, we are selecting another item\n  }\n}\n\nselectItem = (itemId, topLeft, topRight, bottomLeft, bottomRight) => {\n    // Case 1: Item is not currently selected\n    // if (this.state.isSelected === false && !this.props.isCurrSelection[0]) \n    // {\n      // this.props.setSave();\n      console.log(\"WireframeItem.selectItem - Selecting Item With ID: \", itemId);\n      document.getElementById(itemId).classList.add(\"select_border\");\n      // debugger;\n      // Select (add borders)\n      document.getElementById(topLeft).classList.add(\"rectangle_topleft\");\n      document.getElementById(topRight).classList.add(\"rectangle_topright\");\n      document.getElementById(bottomLeft).classList.add(\"rectangle_bottomleft\");\n      document.getElementById(bottomRight).classList.add(\"rectangle_bottomright\");\n\n      this.setSelected(true);\n  // }\n}\n\nchangeButton = (e) => {\n  this.setState({ control_text : e.target.value});\n}\n\n// componentDidUpdate = () => {\n//   // Here, we are going to update the scale property of an item's RND container.\n//   let itemRnd = document.getElementById(\"item-rnd-\"+this.props.item.id);\n//   // 1. Check if selected item exists\n//   if (itemRnd != null && this.props.scale != null) {\n//     let currTransformStyle = itemRnd.style.transform;\n//     if (currTransformStyle != null) \n//     {\n//       // Case 1: Translate/Scale already exists, modify the scale (remove then re-add)\n//       if (currTransformStyle.indexOf(\"scale\") !== -1) {\n//         itemRnd.style.transform = currTransformStyle.replace(/scale.*$/i, \"scale(\" + this.props.scale + \")\");\n//       }\n//       // Case 2: Translate exists but Scale doesn't exist, add scale to it\n//       else if (currTransformStyle.indexOf(\"scale\") === -1) {\n//         itemRnd.style.transform  = currTransformStyle + \"scale(\" + this.props.scale + \")\";\n//       }\n//     }\n//   }\n// }\n\n\ncheckControl = () => {\n  // Check control, make it container_box (container), prompt_text (label), buttom_submit (button), textfield_input (textfield)\n\n  let name = this.props.item.control;\n  let key = this.props.item.id;\n  let numScale =  parseFloat(this.props.scale).toFixed(1);\n\n  console.log(\"x: \", this.props.item.control_x_position);\n  let adjustedX = this.props.item.control_x_position/numScale;\n  let adjustedY = this.props.item.control_y_position/numScale;\n  console.log(\"x/numscale: \", this.props.item.control_x_position/numScale);\n  \n    return (\n      <ClickOutHandler onClickOut={(e) => this.deselectItem(e)}>\n        {/* <div id=\"rnd_canvas\" style={{scale: \"scale(\" + this.props.scale + \")\"}}> */}\n          <Rnd id={\"item-rnd-\"+key} onKeyDown={(e) => this.checkKeyPress(e)} enableResizing={this.checkResizable()} \n            ref={(el) => this.rndRef = el}\n            size={{width: this.props.item.control_width, height: this.props.item.control_height}}\n            // style={{transform: \"scale(\" + this.props.scale + \")\" + \"translate(\"+parseInt(this.props.item.control_x_position, 10)+\"px,\"+parseInt(this.props.item.control_y_position, 10)+\"px) !important;\"}}\n            style={{zIndex: this.props.item.z_index, position: 'absolute'}} \n            onDragStart={(e,data) => {console.log('dragging started'); this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)}}\n            onDragStop={(e,d) => { this.props.item.control_x_position = (d.x); this.props.item.control_y_position = (d.y); this.props.setSave()}}\n            onResize={(e, ignore1, ref, ignore2, ignore3) => {this.props.item.control_width = ref.offsetWidth; this.props.item.control_height = ref.offsetHeight; this.props.item.control_x_position = this.props.item.control_x_position; this.setState({rerender : true});}}\n            default={{x: (this.props.item.control_x_position), y: (this.props.item.control_y_position)}}> \n            { name === 'button' ? \n              // Case 1: Button\n              <button className={\"button_submit2 control_move\"}\n              style={{width: \"100%\", height: \"100%\",fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, //transform: \"scale(\" + this.props.scale + \")\",\n              color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n              id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > \n                {this.props.item.control_text} \n                <span id={this.state.inner1} />\n                <span id={this.state.inner2} />\n                <span id={this.state.inner3} />\n                <span id={this.state.inner4} />\n              </button> : \n              // Case 2: Container\n              name === 'container' ? \n                <div className={\"container_box2 control_move\"}\n                  style={{width: \"100%\", height: \"100%\", fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, //transform: \"scale(\" + this.props.scale + \")\",\n                  color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                  id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)}> {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> :\n              // Case 3: Textfield\n              name === 'textfield' ? \n                <div>\n                  <input type=\"input\" id={key} className={\"textfield_input2 control_move\"} placeholder=\"Input\" \n                  style={{width: this.props.item.control_width, height: this.props.item.control_height, fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, //transform: \"scale(\" + this.props.scale + \")\",\n                  borderColor: this.props.item.control_border_color, color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\",\n                  borderRadius: this.props.item.control_border_radius + \"px\"}} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} defaultValue={this.props.item.control_text} /> \n                  <div>\n                    <span id={this.state.inner1} />\n                    <span id={this.state.inner2} />\n                    <span id={this.state.inner3} />\n                    <span id={this.state.inner4} />\n                  </div>\n                </div> :\n              // Case 4: Label\n              name === 'label' ? \n                <div className={\"prompt_text2 control_move\"} \n                style={{width: this.props.item.control_width, height: this.props.item.control_height, fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, //transform: \"scale(\" + this.props.scale + \")\",\n                color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> : null\n            }\n          </Rnd>\n        {/* </div>  */}\n      </ClickOutHandler>\n    )\n  }\n\nrender() {\n  // console.log('this.props: ', this.props)\n  // console.log('width', this.props.item.control_width);\n  return (\n    // <div id=\"resize_element\"> \n    <>\n      {this.checkControl()}\n    </> \n    // </div>\n        );\n    }\n}\n\nexport default WireframeItem;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\n// (ADDED)\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyCZcHpbnk8IbCdYQExAkweaPvusji6qaIM\",\n//     authDomain: \"project316-7097b.firebaseapp.com\",\n//     databaseURL: \"https://project316-7097b.firebaseio.com\",\n//     projectId: \"project316-7097b\",\n//     storageBucket: \"project316-7097b.appspot.com\",\n//     messagingSenderId: \"37182883154\",\n//     appId: \"1:37182883154:web:9e6c0d8fe39031392fa68b\",\n//     measurementId: \"G-SGKG7GR5XT\"\n// };\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBvf3l8mJ6YxMZ12mkiRJOnc9yJ7Htw4_U\",\n    authDomain: \"hamam-48642.firebaseapp.com\",\n    projectId: \"hamam-48642\",\n    storageBucket: \"hamam-48642.appspot.com\",\n    messagingSenderId: \"161099268923\",\n    appId: \"1:161099268923:web:5c92edce48f02fe8586d1e\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_STARTED = 'REGISTER_STARTED';\nexport const REGISTER_SUCCEEDED = 'REGISTER_SUCCEEDED';\nexport const REGISTER_ERRORED = 'REGISTER_ERRORED';\nexport const LOGIN_SUCCEEDED = 'LOGIN_SUCCESS';\nexport const LOGIN_ERRORED = 'LOGIN_ERROR';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\n/*********************************************************************\n* PURPOSE: When called, returns object with required information\n* WHERE IS IT USED?: Used in userActions functions / mapDispatchtoProps\n************************************************************************/\n\nexport const registerStarted = () => {\n    return { \n        type: REGISTER_STARTED\n    }\n};\n\nexport const registerSucceeded = (newUser) => {\n    return { \n        type: REGISTER_SUCCEEDED,\n        user: newUser\n    }\n};\nexport function registerErrored(error) { \n    console.log(\"Registering register errored function, attaching error: \", error);\n    return { \n        type: REGISTER_ERRORED, \n        error : error\n    }\n};\nexport function loginSucceeded() {\n    return { \n        type: LOGIN_SUCCEEDED \n    }\n};\nexport function loginErrored(error) {\n    return { \n        type: LOGIN_ERRORED, \n        error : error\n    }\n};\nexport function logoutSucceeded() {\n    return { type: LOGIN_SUCCEEDED }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS WIREFRAME UPDATES\nexport function createWireFrame(wireframe) {\n    return {\n        type: 'CREATE_WIREFRAME',\n        wireframe\n    }\n}\nexport function createWireFrameError(error) {\n    return {\n        type: 'CREATE_WIREFRAME_ERROR',\n        error\n    }\n}","import * as actionCreators from '../../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\n\n// Setting initial state for a reducer is typically done using default parameters as in the simple addition function below\n// function add(a = 0, b = 0) { return a + b }\nconst initState = {\n  creating : false,\n  authError: '',\n  loggedOutLink : 'register'\n};\n\n// Using ...state spread operator in the sense of \"if you can't change it, replace it\"\n\n// MANPULATES REDUX STATE\nconst authReducer = (state = initState, action) => {\n  // console.log(\"authReducer: Beginning mapping of type \" + action.type + \" to corresponding handler\");\n  switch (action.type) {\n    case actionCreators.LOGIN_ERRORED:\n      return {\n        ...state,\n        authError: action.error\n      };\n    case actionCreators.LOGIN_SUCCEEDED:\n      return {\n        ...state,\n        authError: '',\n      };\n    case actionCreators.REGISTER_STARTED:\n      return {\n        ...state\n      }\n    case actionCreators.REGISTER_SUCCEEDED:\n      return {\n        ...state,\n        // user : action.user, // commented out - user object is available via firebase.auth\n        authError: ''   \n      };\n    case actionCreators.REGISTER_ERRORED:\n      // console.log(\"Mapped to Register Errored with message: \", action.error)\n      return {\n        ...state,\n        authError: action.error     \n      };\n    default:\n      return {\n      ...state,\n      authError: '',\n      }\n  }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // pre-made reducer that handles syncing firestore data to our STORE state\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer/authReducer';\nimport accountReducer from './accountReducer/accountReducer';\n\n// Dispatches (built from actionCreators) get routed to here\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  account: accountReducer,\n  firestore: firestoreReducer, // reducer will know about our firebase proj online becasue we passed in firebase config in ReactReduxFirebaseApp.js\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import * as actionCreators from '../../actions/actionCreators.js'\n\nexport const loginHandler = async ( credentials, firebase, loginSucceeded, loginErrored ) => {\n  console.log(\"userActions.loginHandler: Beginning loginHandler with user: \", credentials);\n  firebase.auth().signInWithEmailAndPassword(\n    credentials.email,\n    credentials.password,\n  ).catch((error) => {\n    console.log(\"authReducerHelpers.loginHandler error: \", error.message);\n    loginErrored(error.message);\n  });\n    console.log(\"LOGIN_SUCCESS\");\n    loginSucceeded(); // dispatch call\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSucceeded);\n    });\n};\n\nexport const registerHandler = async (newUser, firebase, firestore, startedDispatchCall, \n                                      succeededDispatchCall, erroredDispatchCall) => {\n  console.log(\"authReducerHelpers.registerHandler: Beginning registerHandler with user: \", newUser);\n  startedDispatchCall();\n  const credentials = {\n    'email' : newUser.email,\n    'password' : newUser.password\n  }\n  const userResp = await firebase.auth().createUserWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n  ).catch((error) => {\n    console.log('authReducerHelpers.registerHandler error code when adding user: ', error.message);\n    erroredDispatchCall(error.message);\n    return;\n  })\n  if (userResp != null) {\n    firestore.collection('accounts').doc(userResp.user.uid).set({\n      name: newUser.firstName + \" \" + newUser.lastName,\n      created_time: new Date(),\n      account_key: Math.floor(Math.random() * 1000) + 100,\n      administrator: false,\n      wireframes: []\n    }).catch((error) => {\n      console.log('authReducerHelpers.registerHandler: Error when adding new user-associated account: ', error);\n    });\n    succeededDispatchCall(userResp);\n    // FIREBASE DOCS: If the new account was created, the user is signed in automatically!\n  }\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>\n          <span id=\"navbar_links\">Log Out </span> </NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { showRegisterLink, showLoginLink } from '../../redux/actions/actionCreators';\n\nclass LoggedOutLinks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedOutLink : window.location.pathname, // when rerenders, extracts from url\n    }\n  }\n\n  toggleLink = () => {\n    if (this.state.loggedOutLink === '/login') this.setState({loggedOutLink : '/register'});\n    else this.setState({loggedOutLink : '/login'});\n  }\n\n  render() {\n    return (\n      <ul className = \"right\" >\n        <li >\n          {this.state.loggedOutLink === '/login' ? \n          <NavLink to=\"/register\" onClick={() => this.toggleLink()}>\n            <span id=\"navbar_links\">Register</span>\n          </NavLink>\n          :\n          <NavLink to=\"/login\" onClick={() => this.toggleLink()}>\n            <span id=\"navbar_links\">Login</span>\n          </NavLink>\n        }\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"banner\">\n            {links}\n        <div className=\"wireframer_text\" >\n          Wireframer!\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler} from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { registerStarted, registerSucceeded, registerErrored } from '../../redux/actions/actionCreators';\nimport { getFirestore } from 'redux-firestore';\nimport constants from '../../config/constants';\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    failedMsg: ''\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.firstName !== '' && this.state.lastName !== '' && \n    this.state.email !== '' && this.state.password !== '') {\n\n      if (this.state.password.length < 6) {\n        this.setState({failedMsg : constants.passwordValidationErrMsg});\n        return;\n      }\n\n      const credentials = {\n        firstName : this.state.firstName,\n        lastName : this.state.lastName,\n        email : this.state.email,\n        password: this.state.password\n      }\n      registerHandler(credentials, this.props.firebase, getFirestore(), this.props.registerStarted, this.props.registerSucceeded, this.props.registerErrored); // create the user with firebase\n    }\n    else {\n      this.setState({failedMsg : constants.registrationFailedErrMsg});\n    }\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n\n      <div className=\"register_box\">\n        <div className=\"register-content\">\n            <form id=\"register_form\" className=\"form-format\" onSubmit={this.handleSubmit}>\n              <h5 id=\"register_text\">Register</h5>\n              <br/>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <br/>\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text center\"><p>{authError ? authError : this.state.failedMsg}</p></div>\n              </div>\n            </form>\n            <div className=\"register-wireframer-text-box\">\n              <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\n// mapDispatchToProps = Component to Redux (calling an action, writing to the store)\n// Will map a function, \"register\", to a dispatcher\nconst mapDispatchToProps = dispatch => ({\n  // registerUser: (user, firebase) => dispatch(registerHandler(user, firebase, getFirestore))\n  registerStarted: () => dispatch(registerStarted()),\n  registerSucceeded: (user) => dispatch(registerSucceeded(user)),\n  registerErrored: (error) => dispatch(registerErrored(error))\n});\n\nexport default compose(\n  firebaseConnect(), // (Higher Order Component) props.firebase set on RegisterScreen component as firebase object with helpers\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { loginHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { loginErrored, loginSucceeded } from '../../redux/actions/actionCreators';\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebase.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n    loginHandler(credentials, firebase, props.loginSucceeded, props.loginErrored);\n  }\n\n  render() {\n\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"login_box\">\n        <div className=\"login-content\">\n          {/* Flexbox Starts */}\n          <div className=\"form_format\"> \n            <form onSubmit={this.handleSubmit} id=\"login-form\">\n              <h5 id=\"login_text\">Login</h5>\n              < br /> \n              <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n              </div>\n            </form>\n          </div>\n          <div className=\"wireframer_text_box\">\n            <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n            </div>\n          </div>\n          {/* Flexbox Ends */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // login: authData => loginHandler(authData)(dispatch),\n  loginSucceeded : () => dispatch(loginSucceeded()),\n  loginErrored : (error) => dispatch(loginErrored(error)),\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { getFirestore } from 'redux-firestore';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nclass WireFrameCards extends React.Component {\n\n\ndeleteWireframe = (wireframeKey) => {\n\n    const fireStore = getFirestore();\n    let index = this.props.wireframes.map(function (wireframe) {return wireframe.key;}).indexOf(wireframeKey);\n    this.props.wireframes.splice(index, 1);\n    fireStore.collection(\"accounts\").doc(this.props.userId).update({ wireframes: this.props.wireframes});\n}\n    render() {\n\n        // if (account.id !== this.props.id) {\n        //     return null;\n        // }\n        // else {\n        //     const wireframes = account.wireframes;\n        return (\n            <div>\n                <div className=\"card-content black-text text-darken-3\">\n                    <span className=\"card-title\"> \n                        {this.props.wireframes && this.props.wireframes.map(wireframe => (\n                            <div className=\"wireframe_card\" key={wireframe.key}>\n                                <div id=\"delete_icon\" className=\"material-icons small\" onClick={ () => {this.deleteWireframe(wireframe.key)}} > delete</div>\n                                <Link to={'/wireframe/' + wireframe.key} on >\n                                    <div id = \"wireframe_name\">\n                                        {wireframe.name}\n                                    </div>\n                                </Link>\n                            </div>\n                        ))}\n                     </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accounts: state.firestore.data.accounts,\n        userId : state.firebase.auth.uid // same as account id \n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n//   firestoreConnect([\n//       { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n//     ])\n)(WireFrameCards);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase'; // use this as a higher order component to connect cmp with firestore data\nimport { getFirestore } from 'redux-firestore';\nimport WireFrameCards from './WireFrameCards';\n\nclass HomeScreen extends Component {\n\n  state = {\n    isNewWireframe : false,\n    wireframeKey : null,\n    list_index : 0,\n    adminRedirect: false,\n    goAdmin : false,\n  }\n\nhandleNewWireframe = () => {\n  const fireStore = getFirestore();\n  let answer = Math.floor(Math.random() * 1000) + 100;\n  fireStore.collection('accounts').doc(this.props.auth.uid).update({\n      'wireframes': fireStore.FieldValue.arrayUnion({\n        name: \"Unknown\",\n        created_time: new Date(), // to later sort, the ones in json dont need a date. that order doesnt matter. \n        width : 490, // default\n        height : 480, // default\n        items: [],\n        scale : 1,\n        key : answer,\n        bringToFrontVal : 1073741823,\n        sendToBackVal : 1073741823\n      })\n    }).then(() => {\n      this.setState({wireframeKey : answer});\n      this.setState({isNewWireframe : true});\n    }).catch((error) => {\n      console.log(error);\n  }); \n}\n\ncomponentDidMount() {\n  // Check if user is an administrator\n  // this.checkAdministrator()\n}\n\n    render() {\n    \n      if (!this.props.auth.uid) {\n        return <Redirect to=\"/login\" />;\n      }\n      if (this.state.adminRedirect) {\n        return <Redirect to=\"/databaseTester\" />;\n      }\n\n      if (this.state.isNewWireframe) {\n        return <Redirect to={'/wireframe/' + this.state.wireframeKey} />;\n     }\n\n        return (\n          \n          <div className=\"home_wrapper\">\n            {/* Flexbox Starts */}\n            <div className=\"home-content\">\n              <div className=\"form_format\"> \n                <form onSubmit={this.handleSubmit} className=\"\">\n                  <h5 id=\"login_text\">Recent Work</h5>\n                  <div onClick={this.updateList} >\n                    <div className=\"wireframes section\">\n                        <WireFrameCards wireframes={this.props.wireframes}/>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"wireframer_text_box\">\n                <div id=\"wireframe_text_box_text\"> \n                  Wireframer™\n                </div>\n                {/* Display admin button only if user is an administrator */}\n                {this.props.isAdministrator === true ? \n                <div id=\"is_administrator\"> \n                  <button id=\"admin_button\" onClick={() => this.setState({adminRedirect: true})}> Go to Admin Page 🔐</button>\n                </div> : ''}\n              </div>\n            </div>\n            {/* Flexbox Ends */}\n            <div id=\"create_wireframe\">\n              <button id=\"create_wireframe_button\" onClick={this.handleNewWireframe}>\n              Create New Wireframe\n              </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"HomeScreen.js State: \", state);\n    return {\n        isAdministrator : state.firebase.profile.administrator,\n        auth: state.firebase.auth,\n        wireframes : state.firebase.profile.wireframes\n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n  firestoreConnect([\n      { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n    ])\n)(HomeScreen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport WireframeBox from './WireframeBox';\n\nclass EditScreen extends Component {\n  render() {\n    return (\n      <div className=\"edit_box\">\n        {this.props.wireframes && this.props.auth ? \n        (\n          <WireframeBox accounts={this.props.accounts} wireframe={this.props.wireframes ? this.props.wireframes[this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))] : null}\n          wireframe_key={Number(this.props.match.params.key)} accountId={this.props.auth.uid}\n          wireframeIndex = {this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))} />\n        ) \n        : null\n        }\n      </div>\n      );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => { // arg of state is the entire redux store \n  // console.log(\"editscreen, state: \", state);\n  // debugger;\n  return {\n    auth: state.firebase.auth,\n    accounts : state.firestore.ordered.accounts,\n    wireframes: state.firebase.profile.wireframes\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'accounts' },\n  ]),\n)(EditScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport accountJson from './TestWireframesData.json'\nimport { getFirestore } from 'redux-firestore';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n// import { registerHandler } from '../redux/reducers/authReducer/authReducerHelpers';\nimport { Redirect } from 'react-router-dom';\n\nclass DatabaseTester extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        goHome : false,\n        administator : false\n      }\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    \n    goHome = () => {\n        this.setState({goHome : true});\n      }\n\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('accounts').get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let reference = fireStore.collection('accounts').doc(doc.id).get();\n                reference.then(\n                    doc => {\n                      let info = doc.data();\n                      if (info.administrator !== true) {\n                        fireStore.collection('accounts').doc(doc.id).delete();\n                      }\n            })\n        });\n    })\n}\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n\n        accountJson.accounts.forEach(accountJson => {\n        fireStore.collection('accounts').doc(accountJson.account_id).set({\n            created_time: new Date(),\n            name: accountJson.name,\n            email: accountJson.email,\n            account_key: accountJson.account_key,\n            administrator: accountJson.administrator,\n            wireframes: accountJson.wireframes,\n            })\n        });\n    }\n\n    checkAdministrator = () => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('accounts').doc(this.props.auth.uid).get();\n      \n        reference.then(\n        doc => {\n          let info = doc.data();\n          if (info.administrator === true) {\n            this.setState({ administrator : true});\n            // this.setState({administrator : true});\n          }\n          else {\n            this.setState({ administrator : false});\n          }\n          }\n        )\n      }\n\n    render() {\n\n        if (this.state.goHome) {\n            return <Redirect to=\"/\" />;\n          }\n\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        this.checkAdministrator()\n        if (this.state.administrator === false) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return ( \n            <div id=\"admin_wrapper\">\n                <div id=\"admin_options\">\n                  <button id=\"return_home\" className=\"handle_button\" onClick={this.goHome}> Return Home </button>\n                  <button id=\"clear_database\" className=\"handle_button\" onClick={this.handleClear}>Clear Database</button>\n                  <button id=\"reset_database\" className=\"handle_button\" onClick={this.handleReset}>Reset Database</button>\n                </div>\n                <div id=\"admin_notes\"> \n                    THIS PAGE IS FOR ADMINISTRATORS ONLY!\n                    <br/>\n                    <br/>\n                    Please be cautious when clearing the database. It will wipe the data of NON-ADMINS as dictated in the firestore. \n                    <br/>\n                    <br/>\n                    As for the Reset button, default users will be loaded into the database for testing purposes. \n                    <br/>\n                    <br/>\n                    For any questions, please contact danielhamam@outlook.com. Enjoy the\n                    use of your controls as an administrative designer!\n                </div>\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  });\n\nconst mapDispatchToProps = dispatch => ({\n    // register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n  });\n  \n\n  export default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n  )(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport EditScreen from './components/edit_screen/EditScreen.js';\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/wireframe/:key\" component={EditScreen} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\n\n// Configs out Firebase/Firestore credentials with React/Redux\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'accounts',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase, // config\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/project_layout.css'\nimport './css/project_style.css'\n\nimport ReactReduxFirebaseApp from './redux/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();","/* \n    Purpose: ADD ALL CONSTANTS HERE FOR EASY CONFIGURATION\n    Date: September 7 2022\n*/\n\nconst constants = {\n\n    // Register Screen\n    passwordValidationErrMsg : 'Your password must be at least 6 characters long',\n    registrationFailedErrMsg : 'Registration failed. Please check the field(s) again!',\n    MIN_FONT_SIZE_ZOOM: 4,\n    MIN_ITEM_WIDTH_ZOOM: 10,\n    MIN_ITEM_HEIGHT_ZOOM: 10,\n    MAX_ITEM_WIDTH_ZOOM: 450,\n    MAX_ITEM_HEIGHT_ZOOM: 450,\n    MAX_FONT_SIZE_ZOOM: 50,\n\n    // New Item Properties\n    newItemProps : {\n        'textfield' : {\n            control : \"textfield\",\n            control_width : \"200\",\n            control_height: \"25\",\n            control_text : \"\",\n            control_font_size : \"12\",\n            control_background : \"#ffffff\",\n            control_border_color : \"#000000\",\n            control_text_color : \"\",\n            control_border_thickness : \"0.5\",\n            control_border_radius : \"2\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'label' : {\n            control : \"label\",\n            control_width : \"200\",\n            control_height: \"\",\n            control_text : \"Prompt for input\",\n            control_font_size : \"12\",\n            control_background : \"\",\n            control_border_color : \"\",\n            control_text_color : \"\",\n            control_border_thickness : \"0\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'button' : {\n            control : \"button\",\n            control_width : \"180\",\n            control_height: \"32\",\n            control_text : \"Submit\",\n            control_font_size : \"16\",\n            control_background : \"#DCDCDC\",\n            control_border_color : \"#000000\",\n            control_text_color : \"#000000\",\n            control_border_thickness : \"0.5\",\n            control_border_radius : \"4\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'container' : {\n            control : \"container\",\n            control_width : \"140\",\n            control_height: \"80\",\n            control_text : \"\",\n            control_font_size : \"N/A\",\n            control_background : \"#FFFFFF\",\n            control_border_color : \"#000000\",\n            control_text_color : \"N/A\",\n            control_border_thickness : \"1\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        }\n    }\n}\n\nexport default constants;"],"sourceRoot":""}