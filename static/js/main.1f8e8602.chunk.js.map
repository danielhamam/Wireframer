{"version":3,"sources":["config/constants.js","components/edit_screen/WireframeBox.js","components/edit_screen/WireframeItem.js","config/firebaseConfig.js","redux/actions/actionCreators.js","redux/reducers/authReducer/authReducerHelpers.js","redux/reducers/authReducer/authReducer.js","redux/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/WireFrameCards.js","components/home_screen/HomeScreen.js","components/edit_screen/EditScreen.js","test/DatabaseTester.js","App.js","redux/ReactReduxFirebaseApp.js","index.js"],"names":["constants","passwordValidationErrMsg","registrationFailedErrMsg","newItemProps","control","control_width","control_height","control_text","control_font_size","control_background","control_border_color","control_text_color","control_border_thickness","control_border_radius","control_x_position","control_y_position","WireframeBox","state","goHome","scale","staging_changes_items","props","wireframe","global","structuredClone","items","name","height","width","isCurrSelection","isWidthEnabled","isHeightEnabled","pending_width","pending_height","prompt_save","setSave","setState","setCurrSelection","toggleVal","itemId","zoomIn","e","calculatedScale","string","document","getElementById","style","transform","zoomOut","saveWork","wireframes","length","temp","wireframeIndex","console","log","getFirestore","collection","doc","accountId","update","closeWork","handleChange_textColor","handleChange_itemProperty","target","value","handleChange_borderColor","handleChange_backgroundColor","handleChange_text","handleChange_font_size","handleChange_border_thickness","handleChange_border_radius","propertyId","propertyName","newValue","find","item","id","handleChange_name","handleChange_diagram_width","handleChange_diagram_height","checkWidth_diagram","checkHeight_diagram","height_status","closeWork_check","toggleModal","result","display","animation","visibility","itemType","new_item","Math","floor","random","this","push","to","className","onClick","addNewItem","type","placeholder","map","key","deleteItem","duplicateItem","onChange","prevent","defaultValue","disabled","Component","compose","connect","auth","firebase","accounts","firestore","ordered","profile","firestoreConnect","WireframeItem","rerender","isSelected","inner1","inner2","inner3","inner4","top","left","setSelected","checkKeyPress","preventDefault","keyCode","deselectItem","ctrlKey","metaKey","duplicateSelectedItem","index","indexOf","splice","item_duplicate","is_duplicate","checkDraggable","checkResizable","bottom","bottomLeft","bottomRight","right","topLeft","topRight","classList","contains","remove","selectItem","add","changeButton","checkControl","onClickOut","tabIndex","onKeyDown","enableResizing","disableDragging","size","onDragStop","d","x","y","onResize","ignore1","ref","ignore2","ignore3","offsetWidth","offsetHeight","default","parseInt","fontSize","backgroundColor","borderColor","color","borderWidth","borderRadius","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","logoutSucceeded","loginHandler","credentials","loginSucceeded","loginErrored","a","signInWithEmailAndPassword","email","password","catch","error","message","registerHandler","newUser","startedDispatchCall","succeededDispatchCall","erroredDispatchCall","createUserWithEmailAndPassword","userResp","user","uid","set","firstName","lastName","created_time","Date","account_key","administrator","initState","creating","authError","authReducer","action","rootReducer","combineReducers","account","accountReducer","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","signOut","React","firebaseConnect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","RegisterScreen","failedMsg","handleChange","handleSubmit","registerStarted","registerSucceeded","registerErrored","onSubmit","htmlFor","LoginScreen","WireFrameCards","deleteWireframe","wireframeKey","fireStore","userId","on","data","HomeScreen","isNewWireframe","list_index","adminRedirect","goAdmin","handleNewWireframe","answer","FieldValue","arrayUnion","updateList","isAdministrator","EditScreen","wireframer","Number","match","params","wireframe_key","DatabaseTester","administator","handleClear","get","querySnapshot","forEach","delete","handleReset","accountJson","account_id","checkAdministrator","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f8e8602.chunk.js","sourcesContent":["/* \n    Purpose: ADD ALL CONSTANTS HERE FOR EASY CONFIGURATION\n    Date: September 7 2022\n*/\n\nconst constants = {\n\n    // Register Screen\n    passwordValidationErrMsg : 'Your password must be at least 6 characters long',\n    registrationFailedErrMsg : 'Registration failed. Please check the field(s) again!',\n\n    // New Item Properties\n    newItemProps : {\n        'textfield' : {\n            control : \"textfield\",\n            control_width : \"\",\n            control_height: \"\",\n            control_text : \"\",\n            control_font_size : \"\",\n            control_background : \"#ffffff\",\n            control_border_color : \"\",\n            control_text_color : \"\",\n            control_border_thickness : \"\",\n            control_border_radius : \"\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'label' : {\n            control : \"label\",\n            control_width : \"\",\n            control_height: \"\",\n            control_text : \"Prompt for input\",\n            control_font_size : \"\",\n            control_background : \"#ffffff\",\n            control_border_color : \"\",\n            control_text_color : \"\",\n            control_border_thickness : \"\",\n            control_border_radius : \"\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'button' : {\n            control : \"button\",\n            control_width : \"\",\n            control_height: \"\",\n            control_text : \"Submit\",\n            control_font_size : \"16\",\n            control_background : \"#DCDCDC\",\n            control_border_color : \"#000000\",\n            control_text_color : \"#000000\",\n            control_border_thickness : \"\",\n            control_border_radius : \"\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'container' : {\n            control : \"container\",\n            control_width : \"140\",\n            control_height: \"80\",\n            control_text : \"\",\n            control_font_size : \"\",\n            control_background : \"#FFFFFF\",\n            control_border_color : \"#000000\",\n            control_text_color : \"\",\n            control_border_thickness : \"1\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        }\n    }\n}\n\nexport default constants;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport WireframeItem from './WireframeItem';\nimport constants from '../../config/constants';\nclass WireframeBox extends Component {\n    state = {\n        goHome : false,\n        scale: 1, \n        staging_changes_items: this.props.wireframe ? global.structuredClone(this.props.wireframe.items) : [], // DEEP COPY - keeping track of original, unupdated items in case of 'Close Work'\n        name: this.props.wireframe ? this.props.wireframe.name : '',\n        height : this.props.wireframe ? this.props.wireframe.height : 460,\n        width : this.props.wireframe ? this.props.wireframe.width : 500,\n        isCurrSelection : [false,null], // returns true if an item is currently selected\n        isWidthEnabled : true,\n        isHeightEnabled : true,\n        pending_width : 0,\n        pending_height : 0,\n        prompt_save : false // modal save pop-up\n    }\n\n    setSave = () => {this.setState({prompt_save : true})} // If prompt_save is true, will prompt user if he/she would like to save when closing work.\n    setCurrSelection = (toggleVal, itemId) => {this.setState({isCurrSelection : [toggleVal, itemId]})}\n\n    zoomIn = (e) => {\n        let calculatedScale = this.state.scale * 1.5;\n        let string = \"scale(\" + calculatedScale + \")\";\n        document.getElementById(\"dimension\").style.transform = string\n        this.setState({ scale : calculatedScale});\n    }\n        \n    zoomOut = (e) => {\n        let calculatedScale = this.state.scale / 1.5;\n        let string = \"scale(\" + calculatedScale + \")\";\n        document.getElementById(\"dimension\").style.transform = string\n        this.setState({ scale : calculatedScale});\n    }\n        \n    saveWork = () => {\n\n        // Set wireframes' items data\n        this.props.wireframe.items = this.state.staging_changes_items; // set to staging wireframe\n\n        // Set wireframes' data\n        this.props.wireframe.name = this.state.name;\n        this.props.wireframe.width = this.state.width;\n        this.props.wireframe.height = this.state.height;\n        // this.props.wireframe.created_time = new Date(); // so it can be on top\n\n        // Move it to be first on the list \n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframe;\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n        }\n\n        console.log('this.props.wireframes: ', this.props.wireframes);\n\n        // Update wireframe\n        getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes});\n\n        // Go back to home screen\n        this.setState({goHome : true});\n    }\n    closeWork = () => {\n        \n        console.log('saving.....')\n        console.log('this.props.wireframe: ', this.props.wireframe);\n        \n        // console.log('BEFORE this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n        // console.log('AFTER this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n\n        // Move it to top of list if there are multiple\n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframes[this.props.wireframeIndex];\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n            getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes}); \n        }\n        // Reset items staging changes to original wireframe\n        this.setState({staging_changes_items : this.props.wireframe.items});\n        this.setState({goHome : true});\n    }\n\n    addNewItem(itemType) {\n\n        if (itemType !== 'container' && itemType !== 'button' && itemType !== 'label' && itemType !== 'textfield') {\n            console.log(\"WireframeBox.addNewItem: cannot add new item as it is incorrect type...\");\n            return;\n        }\n\n        const new_item = {\n            id : Math.floor(100000 + Math.random() * 900000),\n            control : itemType,\n            control_width : constants.newItemProps[itemType]['control_width'],\n            control_height: constants.newItemProps[itemType]['control_height'],\n            control_text : constants.newItemProps[itemType]['control_text'],\n            control_font_size : constants.newItemProps[itemType]['control_font_size'],\n            control_background : constants.newItemProps[itemType]['control_background'],\n            control_border_color : constants.newItemProps[itemType]['control_border_color'],\n            control_text_color :constants.newItemProps[itemType]['control_text_color'],\n            control_border_thickness : constants.newItemProps[itemType]['control_border_thickness'],\n            control_border_radius : constants.newItemProps[itemType]['control_border_radius'],\n            control_x_position : constants.newItemProps[itemType]['control_x_position'],\n            control_y_position : constants.newItemProps[itemType]['control_y_position']\n        }\n        this.state.staging_changes_items.push(new_item);\n        this.setState({prompt_save : true});\n    }\n\n    handleChange_textColor = (e) => { this.handleChange_itemProperty('text_color_field', 'control_text_color', e.target.value) }\n    handleChange_borderColor = (e) => { this.handleChange_itemProperty('border_color_field', 'control_border_color' ,e.target.value) }\n    handleChange_backgroundColor = (e) => { this.handleChange_itemProperty('background_field', 'control_background' ,e.target.value) }\n    handleChange_text = (e) => { this.handleChange_itemProperty('textfield_input', 'control_text', e.target.value) }\n    handleChange_font_size = (e) => { this.handleChange_itemProperty('font_size_textfield', 'control_font_size', e.target.value)}\n    handleChange_border_thickness = (e) => { this.handleChange_itemProperty('border_thickness_field', 'control_border_thickness' ,e.target.value) }\n    handleChange_border_radius = (e) => { this.handleChange_itemProperty('border_radius_field', 'control_border_radius' ,e.target.value) }\n    handleChange_itemProperty = (propertyId, propertyName, newValue) => {\n        if (this.state.isCurrSelection[1] !== null) \n        {\n            let selectedItem = this.state.staging_changes_items.find((item => item.id === this.state.isCurrSelection[1])); // should return the reference since type is object\n            selectedItem[propertyName] = newValue;\n            document.getElementById(propertyId).value = newValue;\n            this.setState({staging_changes_items : this.state.staging_changes_items}); // force a rerender since this state var changed\n        }\n    }\n\n    handleChange_name = (e) => { this.setState({ name: e.target.value}) }\n    handleChange_diagram_width = (e) => { this.setState({ width: this.state.pending_width}) }\n    handleChange_diagram_height = (e) => { this.setState({ height: this.state.pending_height}) }\n    checkWidth_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({isWidthEnabled : false});\n            this.setState({pending_width : e.target.value})\n        }\n        else {\n            this.setState({isWidthEnabled : true});\n        }\n    }\n\n    checkHeight_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({height_status : false});\n            this.setState({pending_height : e.target.value})\n        }\n        else {\n            this.setState({height_status : true});\n        }\n    }\n\n    closeWork_check = () => {\n\n        if (this.state.prompt_save) {\n            this.toggleModal();\n        }\n        else {\n            this.closeWork();\n        }\n    }\n\n    toggleModal = () => {\n        let result = document.getElementById(\"my_modal\");\n        if (result.style.display === \"block\") {\n            document.getElementById(\"my_modal\").style.animation = \"fadeout .6s\";\n            result.style.visibility = \"hidden\";\n        } else {\n            result.style.visibility = \"visible\";\n            document.getElementById(\"my_modal\").style.animation = \"fadein .6s\";\n            result.style.display = \"block\";\n        }\n    }\n\n    render() {\n\n        if (this.state.goHome === true) {\n            return <Redirect to={\"/\"} />\n        }\n\n        const wireframe = this.props.wireframe;\n        const items = this.state.staging_changes_items;\n\n        return (\n                <div className = \"inner_edit_box\">\n                    <div className = \"left_screen\">\n                        <div className = \"top_left\">\n                            <div id=\"zoom_buttons\" > \n                                <i className=\"material-icons medium\" onClick={this.zoomIn}> zoom_in</i>\n                                <i className=\"material-icons medium\" onClick={this.zoomOut}> zoom_out</i>\n                            </div>\n                            <div id=\"save_work\" onClick={this.saveWork}> Save </div>\n                            <div id=\"close_work\" onClick={this.closeWork_check}> Close </div>\n                        </div>\n                        <div id=\"bottom_left\"> \n                            <div className=\"container_example\">\n                                <div className=\"container_box\" onClick={() => this.addNewItem('container')} > </div>\n                                <div id=\"container_text\" > Container </div>\n                            </div>\n                            < br />\n                            <div id=\"prompt_for_input\">\n                                <div className=\"prompt_text\" onClick={() => this.addNewItem('label')} > Prompt for input:</div>\n                                <div id=\"label_text\">Label</div>\n                            </div>\n                            <div className=\"button_example\">\n                                <button className=\"button_submit\" onClick={() => this.addNewItem('button')}> Submit</button>\n                                <div id=\"button_text\"> Button</div>\n                            </div>\n                            < br />\n                            <div className=\"textfield_example\">\n                                <input type=\"input\" className=\"textfield_input\" placeholder=\"Input\" onClick={() => this.addNewItem('textfield')} />\n                                <p id=\"textfield_label\" >Textfield</p>\n                            </div>\n                        </div>\n                    </div> \n                    <div id=\"middle_screen\" className=\"middle_screen\"> \n                        <div id=\"dimension\" className=\"dimension\" style={{transform: 'scale(1)', width: this.state.width + \"px\", height: this.state.height + \"px\"}}>\n                            <div id=\"zoomable\"> \n                                {wireframe && items && items.map(item => (\n                                    <WireframeItem items={items} item={item} key={item.id} isCurrSelection={this.state.isCurrSelection} \n                                    deleteItem = {this.deleteItem} duplicateItem={this.duplicateItem} zoomIn={this.zoomIn} zoomOut={this.zoomOut} \n                                    width={this.state.width} height={this.state.height} setSave={this.setSave} setCurrSelection={this.setCurrSelection}/>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"right_screen\">\n                        <div className=\"labels_list\"> \n                            <div className=\"properties_example\">\n                                <p id=\"properties_label\" >Properties</p>\n                                <input type=\"input\" id=\"textfield_input\" onChange={(e) => this.handleChange_text(e)}/>\n                            </div>\n                            <div id=\"font_size_label\"> Font Size: \n                                <input type=\"input\" id=\"font_size_textfield\" onChange={(e) => this.handleChange_font_size(e)}/>\n                            </div>\n                            <div id=\"text_color_label\"> Text Color: \n                                <input type=\"color\" id=\"text_color_field\" onChange = {(e) => this.handleChange_textColor(e)} />\n                            </div>\n                            <div id=\"background_label\"> Background: \n                                <input type=\"color\" id=\"background_field\" onChange={(e) => this.handleChange_backgroundColor(e)}/>\n                            </div>\n                            <div id=\"border_color_label\"> Border Color: \n                                <input type=\"color\" id=\"border_color_field\" onChange = {(e) => this.handleChange_borderColor(e)} />\n                            </div>\n                            <div id=\"border_thickness_label\"> Border Thickness:\n                                <input type=\"input\" id=\"border_thickness_field\" onChange = {(e) => this.handleChange_border_thickness(e)} />\n                            </div>\n                            <div id= \"border_radius_label\"> Border Radius:\n                                <input type=\"input\" id=\"border_radius_field\" onChange = {(e) => this.handleChange_border_radius(e)} />\n                            </div>\n                            <div id= \"name_of_wireframe\"> Name:\n                                <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"my_modal\" className=\"modal\">\n                        <div className=\"modal-content \">\n                            <h4>Save Wireframe?</h4>\n                            <br />\n                            <p> Would you like to save your progress? </p>\n                        </div>\n                        <button id=\"yes\" onClick={this.saveWork} className=\"modal-close waves-effect waves-white btn-flat\">Yes</button>\n                        <button id=\"no\" onClick={this.closeWork} className=\"modal-close waves-effect waves-white btn-flat\">No</button>\n                        <div id=\"last_line\"> Without saving, all progress will be lost.</div>\n                    </div>\n                    <div id=\"wireframe_dimensions\">\n                        <div id=\"wireframe_dimension_left\" className=\"font_dimension\"> \n                            <button id=\"dimension_width_button\" disabled={this.state.isWidthEnabled} onClick={this.handleChange_diagram_width} >Update Width </button>\n                            <input type=\"input\" id=\"dimension_width\" name=\"width\" onChange ={(e) => this.checkWidth_diagram(e)}/>\n                        </div>\n                        <div id=\"wireframe_dimension_right\" className=\"font_dimension\"> \n                            <button id=\"dimension_height_button\" disabled={this.state.isHeightEnabled} onClick = {this.handleChange_diagram_height}>Update Height </button>\n                            <input type=\"input\" id=\"dimension_height\" name=\"height\" onChange ={(e) => this.checkHeight_diagram(e)}/>\n                        </div>\n                    </div> \n                </div>\n            );\n        }\n    }\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      accounts : state.firestore.ordered.accounts,\n      wireframes: state.firebase.profile.wireframes\n     }\n  };\n\n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'accounts' },\n    ]),\n  )(WireframeBox);","import React, { Component } from 'react';\nimport ClickOutHandler from 'react-onclickout'; \nimport {Rnd} from 'react-rnd'; // resizable and draggable component for React.\n\nclass WireframeItem extends Component {\n  state = {\n    // State variables initialized to props value as start value\n    // control_x_position : this.props.item.control_x_position,\n    // control_y_position : this.props.item.control_y_position,\n\n    rerender : false,\n    isSelected : false,\n\n    inner1 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    inner2 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    inner3 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    inner4 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    \n    // drag bounds\n    top: 40, \n    left: 40\n\n  }\n  \n  setSelected = (toggleVal) => {\n    this.setState({isSelected: toggleVal});\n    if (toggleVal) this.props.setCurrSelection(toggleVal, this.props.item.id); // send the item to parent\n    else this.props.setCurrSelection(toggleVal, null); // no item to send to parent\n  }\n\ncheckKeyPress = (e) => {\n  e.preventDefault();\n  if (this.state.isSelected) {\n    if (e.keyCode === 8 || e.key === \"Delete\") {\n      document.getElementById(\"font_size_textfield\").value = \"\";\n      document.getElementById(\"textfield_input\").value = \"\";\n      document.getElementById(\"text_color_field\").value = \"#000000\";\n      document.getElementById(\"background_field\").value = \"#000000\";\n      document.getElementById(\"border_color_field\").value = \"#000000\";\n      document.getElementById(\"border_thickness_field\").value = \"\";\n      document.getElementById(\"border_radius_field\").value = \"\";\n      this.deselectItem(this.props.item.id, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4, 'delete');\n      this.deleteItem(this.props.item);\n    }\n    else if (e.keyCode === 68 && (e.ctrlKey || e.metaKey)) { // Ctrl + d to duplicate\n      e.preventDefault();\n      this.duplicateSelectedItem();\n      this.deselectItem(this.props.item.id, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4, 'duplicate');\n      // this.postDuplicate();\n      // this.saveProps();\n    }\n  }\n}\n\ndeleteItem = (item) => {\n  let index = this.props.items.indexOf(item);\n  this.props.items.splice( index, 1 ); // removed item\n  this.setState({ rerender : true}); // rerender\n}\n\nduplicateSelectedItem = () => {\n  let item = this.props.item;\n  const item_duplicate = {\n      id : Math.floor(100000 + Math.random() * 900000),\n      control : item.control,\n      control_width : item.control_width,\n      control_height: item.control_height,\n      control_text: item.control_text,\n      control_font_size : item.control_font_size,\n      control_background : item.control_background,\n      control_border_color : item.control_border_color,\n      control_text_color : item.control_text_color,\n      control_border_thickness : item.control_border_thickness,\n      control_border_radius : item.control_border_radius,\n      control_x_position : item.control_x_position,\n      control_y_position : item.control_y_position,\n      is_duplicate : true\n  }\n  this.props.items.push( item_duplicate ); // add duplicated item \n  return item_duplicate;\n}\n\ncheckDraggable = () => {\n  if (this.state.isSelected) { return false; }\n  else { return true; }\n}\n\ncheckResizable = () => {\n\nif (!this.state.isSelected) {\n  const returnable = {\n    bottom: false,\n    bottomLeft: false,\n    bottomRight: false,\n    left: false,\n    right: false,\n    top: false,\n    topLeft: false,\n    topRight: false\n    } \n  return returnable;\n  }\nelse {\n    const returnable2 = {\n      bottom: false,\n      bottomLeft: true,\n      bottomRight: true,\n      left: false,\n      right: false,\n      top: false,\n      topLeft: true,\n      topRight: true\n      } \n  return returnable2;\n  }\n}\n\ndeselectItem = (itemId, topLeft, topRight, bottomLeft, bottomRight, e) => {\n  if (this.state.isSelected && this.props.isCurrSelection[0] \n    && (e === 'delete' || e === 'duplicate' || e.target.classList.contains('dimension'))) // can only deselect when clicking within dimension \n  {\n    // console.log(\"WireframeItem.deselectItem - Event object: \", e);\n    console.log(\"WireframeItem.deselectItem - Deselecting Item With ID: \", itemId);\n\n    // Reset corner boxes CSS\n    document.getElementById(topLeft).classList.remove(\"rectangle_topleft\");\n    document.getElementById(topRight).classList.remove(\"rectangle_topright\");\n    document.getElementById(bottomLeft).classList.remove(\"rectangle_bottomleft\");\n    document.getElementById(bottomRight).classList.remove(\"rectangle_bottomright\");\n\n    // Reset inputs on the right hand side\n    document.getElementById(\"font_size_textfield\").value = \"\";\n    document.getElementById(\"textfield_input\").value = \"\";\n    document.getElementById(\"text_color_field\").value = \"#000000\";\n    document.getElementById(\"background_field\").value = \"#000000\";\n    document.getElementById(\"border_color_field\").value = \"#000000\";\n    document.getElementById(\"border_thickness_field\").value = \"\";\n    document.getElementById(\"border_radius_field\").value = \"\";\n\n    // Reset item selection CSS design\n    document.getElementById(itemId).classList.remove(\"select_border\");\n    this.setSelected(false);\n  }\n}\n\nselectItem = (itemId, topLeft, topRight, bottomLeft, bottomRight) => {\n    // Case 1: Item is not currently selected\n    if (this.state.isSelected === false && !this.props.isCurrSelection[0]) \n    {\n      console.log(\"WireframeItem.selectItem - Selecting Item With ID: \", itemId);\n      document.getElementById(itemId).classList.add(\"select_border\");\n      // debugger;\n      // Select (add borders)\n      document.getElementById(topLeft).classList.add(\"rectangle_topleft\");\n      document.getElementById(topRight).classList.add(\"rectangle_topright\");\n      document.getElementById(bottomLeft).classList.add(\"rectangle_bottomleft\");\n      document.getElementById(bottomRight).classList.add(\"rectangle_bottomright\");\n\n      // Add properties\n      document.getElementById(\"font_size_textfield\").value = this.props.item.control_font_size;\n      document.getElementById(\"textfield_input\").value = this.props.item.control_text;\n      document.getElementById(\"text_color_field\").value = this.props.item.control_text_color;\n      document.getElementById(\"background_field\").value = this.props.item.control_background; // background color\n      document.getElementById(\"border_color_field\").value = this.props.item.control_border_color; // background color\n      document.getElementById(\"border_thickness_field\").value = this.props.item.control_border_thickness;\n      document.getElementById(\"border_radius_field\").value = this.props.item.control_border_radius;\n      this.setSelected(true);\n  }\n}\n\nchangeButton = (e) => {\n  this.setState({ control_text : e.target.value});\n}\n\ncheckControl = () => {\n  // Check control, make it container_box (container), prompt_text (label), buttom_submit (button), textfield_input (textfield)\n\n  let name = this.props.item.control;\n  let key = this.props.item.id;\n\n    return (\n      <ClickOutHandler onClickOut={(e) => this.deselectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4, e)}>\n        <div className=\"position movable\" tabIndex=\"0\" onKeyDown={(e) => this.checkKeyPress(e)}>  \n          <Rnd enableResizing={this.checkResizable()} disableDragging={this.checkDraggable()} size={{width: this.props.item.control_width, height:this.props.item.control_height}} \n          onDragStop={(e,d) => {this.props.item.control_x_position = d.x; this.props.item.control_y_position = d.y}}\n          onResize={(e, ignore1, ref, ignore2, ignore3) => {this.props.item.control_width = ref.offsetWidth; this.props.item.control_height = ref.offsetHeight; this.setState({rerender : true})}}\n          default={{x: parseInt(this.props.item.control_x_position, 10), y: parseInt(this.props.item.control_y_position, 10)}}> \n            { name === 'button' ? \n              // Case 1: Button\n              <button className={\"button_submit2 control_move\"} style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", \n              fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, \n              color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n              id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > \n                {this.props.item.control_text} \n                <span id={this.state.inner1} />\n                <span id={this.state.inner2} />\n                <span id={this.state.inner3} />\n                <span id={this.state.inner4} />\n              </button> : \n              // Case 2: Container\n              name === 'container' ? \n                <div className={\"container_box2 control_move\"} style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", \n                  fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, \n                  color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                  id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)}> {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> :\n              // Case 3: Textfield\n              name === 'textfield' ? \n                <div>\n                  <input type=\"input\" id={key} className={\"textfield_input2 control_move\"} placeholder=\"Input\" \n                  style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", \n                  fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, \n                  borderColor: this.props.item.control_border_color, color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\",\n                  borderRadius: this.props.item.control_border_radius + \"px\"}} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} defaultValue={this.props.item.control_text} /> \n                  <div>\n                    <span id={this.state.inner1} />\n                    <span id={this.state.inner2} />\n                    <span id={this.state.inner3} />\n                    <span id={this.state.inner4} />\n                  </div>\n                </div> :\n              // Case 4: Label\n              name === 'label' ? \n                <div className={\"prompt_text2 control_move\"} style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", \n                fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, \n                color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> : null\n            }\n          </Rnd>\n      </div>  \n      </ClickOutHandler>\n    )\n  }\n\nrender() {\n  // console.log('this.props: ', this.props)\n  // console.log('width', this.props.item.control_width);\n  return (\n    <div id=\"control_spawn\">\n      <div id=\"resize_element\"> \n        {this.checkControl()} \n      </div>\n    </div>\n        );\n    }\n}\n\nexport default WireframeItem;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\n// (ADDED)\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyCZcHpbnk8IbCdYQExAkweaPvusji6qaIM\",\n//     authDomain: \"project316-7097b.firebaseapp.com\",\n//     databaseURL: \"https://project316-7097b.firebaseio.com\",\n//     projectId: \"project316-7097b\",\n//     storageBucket: \"project316-7097b.appspot.com\",\n//     messagingSenderId: \"37182883154\",\n//     appId: \"1:37182883154:web:9e6c0d8fe39031392fa68b\",\n//     measurementId: \"G-SGKG7GR5XT\"\n// };\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBvf3l8mJ6YxMZ12mkiRJOnc9yJ7Htw4_U\",\n    authDomain: \"hamam-48642.firebaseapp.com\",\n    projectId: \"hamam-48642\",\n    storageBucket: \"hamam-48642.appspot.com\",\n    messagingSenderId: \"161099268923\",\n    appId: \"1:161099268923:web:5c92edce48f02fe8586d1e\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_STARTED = 'REGISTER_STARTED';\nexport const REGISTER_SUCCEEDED = 'REGISTER_SUCCEEDED';\nexport const REGISTER_ERRORED = 'REGISTER_ERRORED';\nexport const LOGIN_SUCCEEDED = 'LOGIN_SUCCESS';\nexport const LOGIN_ERRORED = 'LOGIN_ERROR';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\n/*********************************************************************\n* PURPOSE: When called, returns object with required information\n* WHERE IS IT USED?: Used in userActions functions / mapDispatchtoProps\n************************************************************************/\n\nexport const registerStarted = () => {\n    return { \n        type: REGISTER_STARTED\n    }\n};\n\nexport const registerSucceeded = (newUser) => {\n    return { \n        type: REGISTER_SUCCEEDED,\n        user: newUser\n    }\n};\nexport function registerErrored(error) { \n    console.log(\"Registering register errored function, attaching error: \", error);\n    return { \n        type: REGISTER_ERRORED, \n        error : error\n    }\n};\nexport function loginSucceeded() {\n    return { \n        type: LOGIN_SUCCEEDED \n    }\n};\nexport function loginErrored(error) {\n    return { \n        type: LOGIN_ERRORED, \n        error : error\n    }\n};\nexport function logoutSucceeded() {\n    return { type: LOGIN_SUCCEEDED }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS WIREFRAME UPDATES\nexport function createWireFrame(wireframe) {\n    return {\n        type: 'CREATE_WIREFRAME',\n        wireframe\n    }\n}\nexport function createWireFrameError(error) {\n    return {\n        type: 'CREATE_WIREFRAME_ERROR',\n        error\n    }\n}","import * as actionCreators from '../../actions/actionCreators.js'\n\nexport const loginHandler = async ( credentials, firebase, loginSucceeded, loginErrored ) => {\n  console.log(\"userActions.loginHandler: Beginning loginHandler with user: \", credentials);\n  firebase.auth().signInWithEmailAndPassword(\n    credentials.email,\n    credentials.password,\n  ).catch((error) => {\n    console.log(\"authReducerHelpers.loginHandler error: \", error.message);\n    loginErrored(error.message);\n  });\n    console.log(\"LOGIN_SUCCESS\");\n    loginSucceeded(); // dispatch call\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSucceeded);\n    });\n};\n\nexport const registerHandler = async (newUser, firebase, firestore, startedDispatchCall, \n                                      succeededDispatchCall, erroredDispatchCall) => {\n  console.log(\"authReducerHelpers.registerHandler: Beginning registerHandler with user: \", newUser);\n  startedDispatchCall();\n  const credentials = {\n    'email' : newUser.email,\n    'password' : newUser.password\n  }\n  const userResp = await firebase.auth().createUserWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n  ).catch((error) => {\n    console.log('authReducerHelpers.registerHandler error code when adding user: ', error.message);\n    erroredDispatchCall(error.message);\n    return;\n  })\n  if (userResp != null) {\n    firestore.collection('accounts').doc(userResp.user.uid).set({\n      name: newUser.firstName + \" \" + newUser.lastName,\n      created_time: new Date(),\n      account_key: Math.floor(Math.random() * 1000) + 100,\n      administrator: false,\n      wireframes: []\n    }).catch((error) => {\n      console.log('authReducerHelpers.registerHandler: Error when adding new user-associated account: ', error);\n    });\n    succeededDispatchCall(userResp);\n    // FIREBASE DOCS: If the new account was created, the user is signed in automatically!\n  }\n};","import * as actionCreators from '../../actions/actionCreators'\nimport { registerHandler } from './authReducerHelpers'\nimport { getFirestore } from 'redux-firestore';\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\n\n// Setting initial state for a reducer is typically done using default parameters as in the simple addition function below\n// function add(a = 0, b = 0) { return a + b }\nconst initState = {\n  creating : false,\n  authError: ''\n};\n\n// Using ...state spread operator in the sense of \"if you can't change it, replace it\"\n\n// MANPULATES REDUX STATE\nconst authReducer = (state = initState, action) => {\n  console.log(\"authReducer: Beginning mapping of type \" + action.type + \" to corresponding handler\");\n  switch (action.type) {\n    case actionCreators.LOGIN_ERRORED:\n      return {\n        ...state,\n        authError: action.error\n      };\n    case actionCreators.LOGIN_SUCCEEDED:\n      return {\n        ...state,\n        authError: '',\n      };\n    case actionCreators.REGISTER_STARTED:\n      return {\n        ...state\n      }\n    case actionCreators.REGISTER_SUCCEEDED:\n      return {\n        ...state,\n        // user : action.user, // commented out - user object is available via firebase.auth\n        authError: ''   \n      };\n    case actionCreators.REGISTER_ERRORED:\n      // console.log(\"Mapped to Register Errored with message: \", action.error)\n      return {\n        ...state,\n        authError: action.error     \n      };\n    default:\n      return {\n      ...state,\n      authError: '',\n      }\n  }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // pre-made reducer that handles syncing firestore data to our STORE state\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer/authReducer';\nimport accountReducer from './accountReducer/accountReducer';\n\n// Dispatches (built from actionCreators) get routed to here\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  account: accountReducer,\n  firestore: firestoreReducer, // reducer will know about our firebase proj online becasue we passed in firebase config in ReactReduxFirebaseApp.js\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>\n          <span id=\"navbar_links\">Log Out </span> </NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LoggedOutLinks extends React.Component {\n  render() {\n\n\n    return (\n      <ul className = \"right\" >\n        <li >\n          <NavLink to=\"/register\">\n            <span id=\"navbar_links\">Register </span>\n          </NavLink>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"banner\">\n            {links}\n        <div className=\"wireframer_text\" >\n          Wireframer!\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler} from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { registerStarted, registerSucceeded, registerErrored } from '../../redux/actions/actionCreators';\nimport { getFirestore } from 'redux-firestore';\nimport constants from '../../config/constants';\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    failedMsg: ''\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.firstName !== '' && this.state.lastName !== '' && \n    this.state.email !== '' && this.state.password !== '') {\n\n      if (this.state.password.length < 6) {\n        this.setState({failedMsg : constants.passwordValidationErrMsg});\n        return;\n      }\n\n      const credentials = {\n        firstName : this.state.firstName,\n        lastName : this.state.lastName,\n        email : this.state.email,\n        password: this.state.password\n      }\n      registerHandler(credentials, this.props.firebase, getFirestore(), this.props.registerStarted, this.props.registerSucceeded, this.props.registerErrored); // create the user with firebase\n    }\n    else {\n      this.setState({failedMsg : constants.registrationFailedErrMsg});\n    }\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n\n      <div className=\"register_box\">\n        <div className=\"register-content\">\n            <form id=\"register_form\" className=\"form-format\" onSubmit={this.handleSubmit}>\n              <h5 id=\"register_text\">Register</h5>\n              <br/>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <br/>\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text center\"><p>{authError ? authError : this.state.failedMsg}</p></div>\n              </div>\n            </form>\n            <div className=\"register-wireframer-text-box\">\n              <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\n// mapDispatchToProps = Component to Redux (calling an action, writing to the store)\n// Will map a function, \"register\", to a dispatcher\nconst mapDispatchToProps = dispatch => ({\n  // registerUser: (user, firebase) => dispatch(registerHandler(user, firebase, getFirestore))\n  registerStarted: () => dispatch(registerStarted()),\n  registerSucceeded: (user) => dispatch(registerSucceeded(user)),\n  registerErrored: (error) => dispatch(registerErrored(error))\n});\n\nexport default compose(\n  firebaseConnect(), // (Higher Order Component) props.firebase set on RegisterScreen component as firebase object with helpers\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { loginHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { loginErrored, loginSucceeded } from '../../redux/actions/actionCreators';\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebase.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n    loginHandler(credentials, firebase, props.loginSucceeded, props.loginErrored);\n  }\n\n  render() {\n\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"login_box\">\n        <div className=\"login-content\">\n          {/* Flexbox Starts */}\n          <div className=\"form_format\"> \n            <form onSubmit={this.handleSubmit} id=\"login-form\">\n              <h5 id=\"login_text\">Login</h5>\n              < br /> \n              <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n              </div>\n            </form>\n          </div>\n          <div className=\"wireframer_text_box\">\n            <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n            </div>\n          </div>\n          {/* Flexbox Ends */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // login: authData => loginHandler(authData)(dispatch),\n  loginSucceeded : () => dispatch(loginSucceeded()),\n  loginErrored : (error) => dispatch(loginErrored(error))\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { getFirestore } from 'redux-firestore';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nclass WireFrameCards extends React.Component {\n\n\ndeleteWireframe = (wireframeKey) => {\n\n    const fireStore = getFirestore();\n    let index = this.props.wireframes.map(function (wireframe) {return wireframe.key;}).indexOf(wireframeKey);\n    this.props.wireframes.splice(index, 1);\n    fireStore.collection(\"accounts\").doc(this.props.userId).update({ wireframes: this.props.wireframes});\n}\n    render() {\n\n        // if (account.id !== this.props.id) {\n        //     return null;\n        // }\n        // else {\n        //     const wireframes = account.wireframes;\n        return (\n            <div>\n                <div className=\"card-content black-text text-darken-3\">\n                    <span className=\"card-title\"> \n                        {this.props.wireframes && this.props.wireframes.map(wireframe => (\n                            <div className=\"wireframe_card\" key={wireframe.key}>\n                                <div id=\"delete_icon\" className=\"material-icons small\" onClick={ () => {this.deleteWireframe(wireframe.key)}} > delete</div>\n                                <Link to={'/wireframe/' + wireframe.key} on >\n                                    <div id = \"wireframe_name\">\n                                        {wireframe.name}\n                                    </div>\n                                </Link>\n                            </div>\n                        ))}\n                     </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accounts: state.firestore.data.accounts,\n        userId : state.firebase.auth.uid // same as account id \n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n//   firestoreConnect([\n//       { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n//     ])\n)(WireFrameCards);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase'; // use this as a higher order component to connect cmp with firestore data\nimport { getFirestore } from 'redux-firestore';\nimport WireFrameCards from './WireFrameCards';\n\nclass HomeScreen extends Component {\n\n  state = {\n    isNewWireframe : false,\n    wireframeKey : null,\n    list_index : 0,\n    adminRedirect: false,\n    goAdmin : false,\n  }\n\nhandleNewWireframe = () => {\n  const fireStore = getFirestore();\n  let answer = Math.floor(Math.random() * 1000) + 100;\n  fireStore.collection('accounts').doc(this.props.auth.uid).update({\n      'wireframes': fireStore.FieldValue.arrayUnion({\n        name: \"Unknown\",\n        created_time: new Date(), // to later sort, the ones in json dont need a date. that order doesnt matter. \n        width : 490, // default\n        height : 480, // default\n        items: [],\n        key : answer\n      })\n    }).then(() => {\n      this.setState({wireframeKey : answer});\n      this.setState({isNewWireframe : true});\n    }).catch((error) => {\n      console.log(error);\n  });  \n}\n\ncomponentDidMount() {\n  // Check if user is an administrator\n  // this.checkAdministrator()\n}\n\n    render() {\n    \n      if (!this.props.auth.uid) {\n        return <Redirect to=\"/login\" />;\n      }\n      if (this.state.adminRedirect) {\n        return <Redirect to=\"/databaseTester\" />;\n      }\n\n      if (this.state.isNewWireframe) {\n        return <Redirect to={'/wireframe/' + this.state.wireframeKey} />;\n     }\n\n        return (\n          \n          <div className=\"home_wrapper\">\n            {/* Flexbox Starts */}\n            <div className=\"home-content\">\n              <div className=\"form_format\"> \n                <form onSubmit={this.handleSubmit} className=\"\">\n                  <h5 id=\"login_text\">Recent Work</h5>\n                  <div onClick={this.updateList} >\n                    <div className=\"wireframes section\">\n                        <WireFrameCards wireframes={this.props.wireframes}/>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"wireframer_text_box\">\n                <div id=\"wireframe_text_box_text\"> \n                  Wireframer™\n                </div>\n                {/* Display admin button only if user is an administrator */}\n                {this.props.isAdministrator === true ? \n                <div id=\"is_administrator\"> \n                  <button id=\"admin_button\" onClick={() => this.setState({adminRedirect: true})}> Go to Admin Page 🔐</button>\n                </div> : ''}\n              </div>\n            </div>\n            {/* Flexbox Ends */}\n            <div id=\"create_wireframe\">\n              <button id=\"create_wireframe_button\" onClick={this.handleNewWireframe}>\n              Create New Wireframe\n              </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"HomeScreen.js State: \", state);\n    return {\n        isAdministrator : state.firebase.profile.administrator,\n        auth: state.firebase.auth,\n        wireframes : state.firebase.profile.wireframes\n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n  firestoreConnect([\n      { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n    ])\n)(HomeScreen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport WireframeBox from './WireframeBox';\n\nclass EditScreen extends Component {\n  render() {\n    return (\n      <div className=\"edit_box\">\n        {this.props.wireframes && this.props.auth ? \n        (\n          <WireframeBox accounts={this.props.accounts} wireframe={this.props.wireframes ? this.props.wireframes[this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))] : null}\n          wireframe_key={Number(this.props.match.params.key)} accountId={this.props.auth.uid}\n          wireframeIndex = {this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))} />\n        ) \n        : null\n        }\n      </div>\n      );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => { // arg of state is the entire redux store \n  // console.log(\"editscreen, state: \", state);\n  // debugger;\n  return {\n    auth: state.firebase.auth,\n    accounts : state.firestore.ordered.accounts,\n    wireframes: state.firebase.profile.wireframes\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'accounts' },\n  ]),\n)(EditScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport accountJson from './TestWireframesData.json'\nimport { getFirestore } from 'redux-firestore';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n// import { registerHandler } from '../redux/reducers/authReducer/authReducerHelpers';\nimport { Redirect } from 'react-router-dom';\n\nclass DatabaseTester extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        goHome : false,\n        administator : false\n      }\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    \n    goHome = () => {\n        this.setState({goHome : true});\n      }\n\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('accounts').get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let reference = fireStore.collection('accounts').doc(doc.id).get();\n                reference.then(\n                    doc => {\n                      let info = doc.data();\n                      if (info.administrator !== true) {\n                        fireStore.collection('accounts').doc(doc.id).delete();\n                      }\n            })\n        });\n    })\n}\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n\n        accountJson.accounts.forEach(accountJson => {\n        fireStore.collection('accounts').doc(accountJson.account_id).set({\n            created_time: new Date(),\n            name: accountJson.name,\n            email: accountJson.email,\n            account_key: accountJson.account_key,\n            administrator: accountJson.administrator,\n            wireframes: accountJson.wireframes,\n            })\n        });\n    }\n\n    checkAdministrator = () => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('accounts').doc(this.props.auth.uid).get();\n      \n        reference.then(\n        doc => {\n          let info = doc.data();\n          if (info.administrator === true) {\n            this.setState({ administrator : true});\n            // this.setState({administrator : true});\n          }\n          else {\n            this.setState({ administrator : false});\n          }\n          }\n        )\n      }\n\n    render() {\n\n        if (this.state.goHome) {\n            return <Redirect to=\"/\" />;\n          }\n\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        this.checkAdministrator()\n        if (this.state.administrator === false) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return ( \n            <div id=\"admin_wrapper\">\n                <div id=\"admin_options\">\n                  <button id=\"return_home\" className=\"handle_button\" onClick={this.goHome}> Return Home </button>\n                  <button id=\"clear_database\" className=\"handle_button\" onClick={this.handleClear}>Clear Database</button>\n                  <button id=\"reset_database\" className=\"handle_button\" onClick={this.handleReset}>Reset Database</button>\n                </div>\n                <div id=\"admin_notes\"> \n                    THIS PAGE IS FOR ADMINISTRATORS ONLY!\n                    <br/>\n                    <br/>\n                    Please be cautious when clearing the database. It will wipe the data of NON-ADMINS as dictated in the firestore. \n                    <br/>\n                    <br/>\n                    As for the Reset button, default users will be loaded into the database for testing purposes. \n                    <br/>\n                    <br/>\n                    For any questions, please contact danielhamam@outlook.com. Enjoy the\n                    use of your controls as an administrative designer!\n                </div>\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  });\n\nconst mapDispatchToProps = dispatch => ({\n    // register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n  });\n  \n\n  export default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n  )(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport EditScreen from './components/edit_screen/EditScreen.js';\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/wireframe/:key\" component={EditScreen} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\n\n// Configs out Firebase/Firestore credentials with React/Redux\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'accounts',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase, // config\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/project_layout.css'\nimport './css/project_style.css'\n\nimport ReactReduxFirebaseApp from './redux/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}