{"version":3,"sources":["config/constants.js","components/edit_screen/WireframeBox.js","components/edit_screen/WireframeItem.js","config/firebaseConfig.js","redux/actions/actionCreators.js","redux/reducers/authReducer/authReducerHelpers.js","redux/reducers/authReducer/authReducer.js","redux/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/WireFrameCards.js","components/home_screen/HomeScreen.js","components/edit_screen/EditScreen.js","test/DatabaseTester.js","App.js","redux/ReactReduxFirebaseApp.js","index.js"],"names":["constants","passwordValidationErrMsg","registrationFailedErrMsg","newItemProps","control","control_width","control_height","control_text","control_font_size","control_background","control_border_color","control_text_color","control_border_thickness","control_border_radius","control_x_position","control_y_position","WireframeBox","props","state","goHome","scale","staging_changes_items","wireframe","global","structuredClone","items","name","height","width","isCurrSelection","isWidthEnabled","isHeightEnabled","pending_width","pending_height","prompt_save","z_index_high","z_index_low","setSave","setState","setCurrSelection","toggleVal","itemId","getSelectedItem","find","item","id","zoomIn","e","calculatedScale","zoomOut","saveWork","wireframes","length","temp","wireframeIndex","console","log","getFirestore","collection","doc","accountId","update","closeWork","handleChange_textColor","handleChange_itemProperty","target","value","handleChange_borderColor","handleChange_backgroundColor","handleChange_text","handleChange_font_size","handleChange_border_thickness","handleChange_border_radius","propertyId","propertyName","newValue","document","getElementById","handleChange_name","handleChange_diagram_width","handleChange_diagram_height","checkWidth_diagram","checkHeight_diagram","height_status","closeWork_check","toggleModal","result","style","display","animation","visibility","sendItemToBack","selectedItem","z_index","bringItemToFront","updatePropertyLabels","componentDidUpdate","setAttribute","backgroundColor","itemType","new_item","Math","floor","random","this","push","to","className","onClick","addNewItem","type","placeholder","map","key","deleteItem","duplicateItem","textFieldInputRef","fontSizeTextfieldRef","textColorFieldRef","backgroundFieldRef","borderColorFieldRef","borderThicknessFieldRef","borderRadiusFieldRef","onChange","prevent","defaultValue","disabled","Component","compose","connect","auth","firebase","accounts","firestore","ordered","profile","firestoreConnect","WireframeItem","rerender","isSelected","inner1","inner2","inner3","inner4","top","left","setSelected","checkKeyPress","preventDefault","keyCode","deselectItem","ctrlKey","metaKey","duplicateSelectedItem","index","indexOf","splice","item_duplicate","is_duplicate","checkDraggable","checkResizable","bottom","bottomLeft","bottomRight","right","topLeft","topRight","classList","contains","remove","selectItem","add","changeButton","checkControl","onClickOut","tabIndex","onKeyDown","zIndex","position","enableResizing","disableDragging","size","onDragStop","d","x","y","onResize","ignore1","ref","ignore2","ignore3","offsetWidth","offsetHeight","default","parseInt","transform","fontSize","borderColor","color","borderWidth","borderRadius","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","logoutSucceeded","loginHandler","credentials","loginSucceeded","loginErrored","a","signInWithEmailAndPassword","email","password","catch","error","message","registerHandler","newUser","startedDispatchCall","succeededDispatchCall","erroredDispatchCall","createUserWithEmailAndPassword","userResp","user","uid","set","firstName","lastName","created_time","Date","account_key","administrator","initState","creating","authError","authReducer","action","rootReducer","combineReducers","account","accountReducer","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","signOut","React","firebaseConnect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","RegisterScreen","failedMsg","handleChange","handleSubmit","registerStarted","registerSucceeded","registerErrored","onSubmit","htmlFor","LoginScreen","WireFrameCards","deleteWireframe","wireframeKey","fireStore","userId","on","data","HomeScreen","isNewWireframe","list_index","adminRedirect","goAdmin","handleNewWireframe","answer","FieldValue","arrayUnion","updateList","isAdministrator","EditScreen","wireframer","Number","match","params","wireframe_key","DatabaseTester","administator","handleClear","get","querySnapshot","forEach","delete","handleReset","accountJson","account_id","checkAdministrator","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.779d6d0c.chunk.js","sourcesContent":["/* \n    Purpose: ADD ALL CONSTANTS HERE FOR EASY CONFIGURATION\n    Date: September 7 2022\n*/\n\nconst constants = {\n\n    // Register Screen\n    passwordValidationErrMsg : 'Your password must be at least 6 characters long',\n    registrationFailedErrMsg : 'Registration failed. Please check the field(s) again!',\n\n    // New Item Properties\n    newItemProps : {\n        'textfield' : {\n            control : \"textfield\",\n            control_width : \"\",\n            control_height: \"\",\n            control_text : \"\",\n            control_font_size : \"12\",\n            control_background : \"#ffffff\",\n            control_border_color : \"#000000\",\n            control_text_color : \"\",\n            control_border_thickness : \"0.5\",\n            control_border_radius : \"2\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'label' : {\n            control : \"label\",\n            control_width : \"\",\n            control_height: \"\",\n            control_text : \"Prompt for input\",\n            control_font_size : \"12\",\n            control_background : \"#ffffff\",\n            control_border_color : \"\",\n            control_text_color : \"\",\n            control_border_thickness : \"0\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'button' : {\n            control : \"button\",\n            control_width : \"\",\n            control_height: \"\",\n            control_text : \"Submit\",\n            control_font_size : \"16\",\n            control_background : \"#DCDCDC\",\n            control_border_color : \"#000000\",\n            control_text_color : \"#000000\",\n            control_border_thickness : \"0.5\",\n            control_border_radius : \"2\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'container' : {\n            control : \"container\",\n            control_width : \"140\",\n            control_height: \"80\",\n            control_text : \"\",\n            control_font_size : \"N/A\",\n            control_background : \"#FFFFFF\",\n            control_border_color : \"#000000\",\n            control_text_color : \"N/A\",\n            control_border_thickness : \"1\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        }\n    }\n}\n\nexport default constants;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport WireframeItem from './WireframeItem';\nimport constants from '../../config/constants';\nclass WireframeBox extends Component {\n    constructor(props) {\n        super(props);\n        // this.textFieldInputRef = React.createRef();\n        // this.fontSizeTextfieldRef = React.createRef();\n        // this.textColorFieldRef = React.createRef();\n        // this.backgroundFieldRef = React.createRef();\n        // this.borderColorFieldRef = React.createRef();\n        // this.borderThicknessFieldRef = React.createRef();\n        // this.borderRadiusFieldRef = React.createRef();\n    }\n    state = {\n        goHome : false,\n        scale: 1, \n        staging_changes_items: this.props.wireframe ? global.structuredClone(this.props.wireframe.items) : [], // DEEP COPY - keeping track of original, unupdated items in case of 'Close Work'\n        name: this.props.wireframe ? this.props.wireframe.name : '',\n        height : this.props.wireframe ? this.props.wireframe.height : 460,\n        width : this.props.wireframe ? this.props.wireframe.width : 500,\n        isCurrSelection : [false,null], // returns true if an item is currently selected\n        isWidthEnabled : true,\n        isHeightEnabled : true,\n        pending_width : 0,\n        pending_height : 0,\n        prompt_save : false, // modal save pop-up\n        z_index_high : 1073741823,\n        z_index_low : 1073741823\n    }\n\n    setSave = () => {this.setState({prompt_save : true})} // If prompt_save is true, will prompt user if he/she would like to save when closing work.\n    setCurrSelection = (toggleVal, itemId) => {\n        this.setState({isCurrSelection : [toggleVal, itemId]})\n    }\n\n    getSelectedItem = () => {\n        if (this.state.isCurrSelection[1] != null)\n            return this.state.staging_changes_items.find((item) => item.id === this.state.isCurrSelection[1]);\n    }\n\n    zoomIn = (e) => {\n        let calculatedScale = this.state.scale * 1.5;\n        // let string = \"scale(\" + calculatedScale + \")\";\n        // document.getElementById(\"dimension\").style.transform = string\n        this.setState({ scale : calculatedScale});\n    }\n        \n    zoomOut = (e) => {\n        let calculatedScale = this.state.scale / 1.5;\n        // let string = \"scale(\" + calculatedScale + \")\";\n        // document.getElementById(\"dimension\").style.transform = string\n        this.setState({ scale : calculatedScale});\n    }\n        \n    saveWork = () => {\n\n        // Set wireframes' items data\n        this.props.wireframe.items = this.state.staging_changes_items; // set to staging wireframe\n\n        // Set wireframes' data\n        this.props.wireframe.name = this.state.name;\n        this.props.wireframe.width = this.state.width;\n        this.props.wireframe.height = this.state.height;\n        // this.props.wireframe.created_time = new Date(); // so it can be on top\n\n        // Move it to be first on the list \n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframe;\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n        }\n\n        console.log('this.props.wireframes: ', this.props.wireframes);\n\n        // Update wireframe\n        getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes});\n\n        // Go back to home screen\n        this.setState({goHome : true});\n    }\n    closeWork = () => {\n        \n        console.log('saving.....')\n        console.log('this.props.wireframe: ', this.props.wireframe);\n        \n        // console.log('BEFORE this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n        // console.log('AFTER this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n\n        // Move it to top of list if there are multiple\n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframes[this.props.wireframeIndex];\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n            getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes}); \n        }\n        // Reset items staging changes to original wireframe\n        this.setState({staging_changes_items : this.props.wireframe.items});\n        this.setState({goHome : true});\n    }\n\n    addNewItem(itemType) {\n\n        if (itemType !== 'container' && itemType !== 'button' && itemType !== 'label' && itemType !== 'textfield') {\n            console.log(\"WireframeBox.addNewItem: cannot add new item as it is incorrect type...\");\n            return;\n        }\n\n        const new_item = {\n            id : Math.floor(100000 + Math.random() * 900000),\n            control : itemType,\n            z_index : 1073741823,\n            control_width : constants.newItemProps[itemType]['control_width'],\n            control_height: constants.newItemProps[itemType]['control_height'],\n            control_text : constants.newItemProps[itemType]['control_text'],\n            control_font_size : constants.newItemProps[itemType]['control_font_size'],\n            control_background : constants.newItemProps[itemType]['control_background'],\n            control_border_color : constants.newItemProps[itemType]['control_border_color'],\n            control_text_color :constants.newItemProps[itemType]['control_text_color'],\n            control_border_thickness : constants.newItemProps[itemType]['control_border_thickness'],\n            control_border_radius : constants.newItemProps[itemType]['control_border_radius'],\n            control_x_position : constants.newItemProps[itemType]['control_x_position'],\n            control_y_position : constants.newItemProps[itemType]['control_y_position']\n        }\n        this.state.staging_changes_items.push(new_item);\n        this.setState({prompt_save : true});\n    }\n\n    handleChange_textColor = (e) => { this.handleChange_itemProperty('text_color_field', 'control_text_color', e.target.value) }\n    handleChange_borderColor = (e) => { this.handleChange_itemProperty('border_color_field', 'control_border_color' ,e.target.value) }\n    handleChange_backgroundColor = (e) => { this.handleChange_itemProperty('background_field', 'control_background' ,e.target.value) }\n    handleChange_text = (e) => { this.handleChange_itemProperty('textfield_input', 'control_text', e.target.value) }\n    handleChange_font_size = (e) => { this.handleChange_itemProperty('font_size_textfield', 'control_font_size', e.target.value)}\n    handleChange_border_thickness = (e) => { this.handleChange_itemProperty('border_thickness_field', 'control_border_thickness' ,e.target.value) }\n    handleChange_border_radius = (e) => { this.handleChange_itemProperty('border_radius_field', 'control_border_radius' ,e.target.value) }\n    handleChange_itemProperty = (propertyId, propertyName, newValue) => {\n        if (this.state.isCurrSelection[1] !== null) \n        {\n            let selectedItem = this.state.staging_changes_items.find((item => item.id === this.state.isCurrSelection[1])); // should return the reference since type is object\n            selectedItem[propertyName] = newValue;\n            document.getElementById(propertyId).value = newValue;\n            this.setState({staging_changes_items : this.state.staging_changes_items}); // force a rerender since this state var changed\n        }\n    }\n\n    handleChange_name = (e) => { this.setState({ name: e.target.value}) }\n    handleChange_diagram_width = (e) => { this.setState({ width: this.state.pending_width}) }\n    handleChange_diagram_height = (e) => { this.setState({ height: this.state.pending_height}) }\n    checkWidth_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({isWidthEnabled : false});\n            this.setState({pending_width : e.target.value})\n        }\n        else {\n            this.setState({isWidthEnabled : true});\n        }\n    }\n\n    checkHeight_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({height_status : false});\n            this.setState({pending_height : e.target.value})\n        }\n        else {\n            this.setState({height_status : true});\n        }\n    }\n\n    closeWork_check = () => {\n\n        if (this.state.prompt_save) {\n            this.toggleModal();\n        }\n        else {\n            this.closeWork();\n        }\n    }\n\n    toggleModal = () => {\n        let result = document.getElementById(\"my_modal\");\n        if (result.style.display === \"block\") {\n            document.getElementById(\"my_modal\").style.animation = \"fadeout .6s\";\n            result.style.visibility = \"hidden\";\n        } else {\n            result.style.visibility = \"visible\";\n            document.getElementById(\"my_modal\").style.animation = \"fadein .6s\";\n            result.style.display = \"block\";\n        }\n    }\n\n    sendItemToBack = () => {\n        let selectedItem = this.getSelectedItem();\n        // Check if selected item exists\n        if (selectedItem != null && this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            console.log(\"Moving z index of \", selectedItem, \" back to \", this.state.z_index_low - 1);\n            selectedItem.z_index = this.state.z_index_low - 1;\n            this.setState({z_index_low : this.state.z_index_low - 1});\n        }\n    }\n    bringItemToFront = () => {\n        let selectedItem = this.getSelectedItem();\n        // Check if selected item exists\n        if (selectedItem != null && this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            selectedItem.z_index = this.state.z_index_high + 1;\n            this.setState({z_index_high : this.state.z_index_high + 1});\n            console.log(\"Moving z index of \", selectedItem, \" in front to \", this.state.z_index_high + 1);\n        }\n    }\n\n    updatePropertyLabels = () => {\n        // Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            let item = this.state.isCurrSelection[1];\n            // debugger;\n            document.getElementById(\"font_size_textfield\").value = item.control_font_size;\n            document.getElementById(\"textfield_input\").value = item.control_text;\n            document.getElementById(\"text_color_field\").value = item.control_text_color;\n            document.getElementById(\"background_field\").value = item.control_background; // background color\n            document.getElementById(\"border_color_field\").value = item.control_border_color; // background color\n            document.getElementById(\"border_thickness_field\").value = item.control_border_thickness;\n            document.getElementById(\"border_radius_field\").value = item.control_border_radius ;\n        }\n    }\n\n    componentDidUpdate = () => {\n        // Here, we are going to update the properties panel on the right side with the props of the item.\n\n        // 1. Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            let item = this.getSelectedItem();\n            console.log(\"Item: \", item);\n            // if item is container\n            if (item.control === 'container') {\n                document.getElementById(\"font_size_textfield\").setAttribute('disabled', '');\n                document.getElementById(\"textfield_input\").setAttribute('disabled', '');\n                document.getElementById(\"text_color_field\").setAttribute('disabled', '');\n                document.getElementById(\"font_size_textfield\").style.backgroundColor = 'lightgray';\n                document.getElementById(\"textfield_input\").style.backgroundColor = 'lightgray';\n                document.getElementById(\"text_color_field\").style.backgroundColor = 'lightgray';\n            }\n            // not a container\n            else {\n                document.getElementById(\"font_size_textfield\").value = item.control_font_size;\n                document.getElementById(\"textfield_input\").value = item.control_text;\n                document.getElementById(\"text_color_field\").value = item.control_text_color;\n            }\n            // do for all items\n                document.getElementById(\"background_field\").value = item.control_background; // background color\n                document.getElementById(\"border_color_field\").value = item.control_border_color; // background color\n                document.getElementById(\"border_thickness_field\").value = item.control_border_thickness;\n                document.getElementById(\"border_radius_field\").value = item.control_border_radius ;\n            }\n        }\n \n    render() {\n\n        if (this.state.goHome === true) {\n            return <Redirect to={\"/\"} />\n        }\n\n        const wireframe = this.props.wireframe;\n        const items = this.state.staging_changes_items;\n\n        return (\n                <div className = \"inner_edit_box\">\n                    <div className = \"left_screen\">\n                        <div className = \"top_left\">\n                            <div id=\"zoom_buttons\" > \n                                <i className=\"material-icons medium\" onClick={this.zoomIn}> zoom_in</i>\n                                <i className=\"material-icons medium\" onClick={this.zoomOut}> zoom_out</i>\n                            </div>\n                            <div id=\"save_work\" onClick={this.saveWork}> Save </div>\n                            <div id=\"close_work\" onClick={this.closeWork_check}> Close </div>\n                        </div>\n                        <div id=\"bottom_left\"> \n                            <div className=\"container_example\">\n                                <div className=\"container_box example_item_select\" onClick={() => this.addNewItem('container')} > </div>\n                                <div id=\"container_text\" className='example_item' > Container </div>\n                            </div>\n                            < br />\n                            <div id=\"prompt_for_input\">\n                                <div className=\"prompt_text example_item_select\" onClick={() => this.addNewItem('label')} > Prompt for input:</div>\n                                <div id=\"label_text\" className='example_item'>Label</div>\n                            </div>\n                            <div className=\"button_example\">\n                                <button className=\"button_submit example_item_select\" onClick={() => this.addNewItem('button')}> Submit</button>\n                                <div id=\"button_text\" className='example_item'> Button</div>\n                            </div>\n                            < br />\n                            <div className=\"textfield_example\">\n                                <input type=\"input\" className=\"textfield_input example_item_select\" placeholder=\"Input\" onClick={() => this.addNewItem('textfield')} />\n                                <p id=\"textfield_label\" className='example_item'>Textfield</p>\n                            </div>\n                        </div>\n                    </div> \n                    <div id=\"middle_screen\" className=\"middle_screen\"> \n                        <div id=\"dimension\" className=\"dimension\" style={{width: this.state.width + \"px\", height: this.state.height + \"px\"}}>\n                            <div id=\"zoomable\"> \n                                {wireframe && items && items.map(item => (\n                                    <WireframeItem items={items} item={item} key={item.id} isCurrSelection={this.state.isCurrSelection} \n                                    deleteItem = {this.deleteItem} duplicateItem={this.duplicateItem} zoomIn={this.zoomIn} zoomOut={this.zoomOut} \n                                    width={this.state.width} height={this.state.height} setSave={this.setSave} setCurrSelection={this.setCurrSelection}\n                                    // Refs for property elements\n                                    textFieldInputRef={this.textFieldInputRef} fontSizeTextfieldRef={this.fontSizeTextfieldRef} textColorFieldRef={this.textColorFieldRef}\n                                    backgroundFieldRef={this.backgroundFieldRef} borderColorFieldRef={this.borderColorFieldRef} borderThicknessFieldRef={this.borderThicknessFieldRef}\n                                    borderRadiusFieldRef={this.borderRadiusFieldRef} scale={this.state.scale}\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"right_screen\">\n                            <div className=\"labels_list\"> \n                            { this.state.isCurrSelection[0] ? \n                                // Case where item is selected\n                                <div className='right_screen_item_selected'>\n                                    <div className=\"properties_example\">\n                                        <p id=\"properties_label\" >Properties</p>\n                                        <input type=\"input\" id=\"textfield_input\" onChange={(e) => this.handleChange_text(e)}/>\n                                    </div>\n                                    <div id=\"font_size_label\"> Font Size: \n                                        <input type=\"input\" id=\"font_size_textfield\" onChange={(e) => this.handleChange_font_size(e)}/>\n                                    </div>\n                                    <div id=\"text_color_label\"> Text Color: \n                                        <input type=\"color\" id=\"text_color_field\" onChange = {(e) => this.handleChange_textColor(e)} />\n                                    </div>\n                                    <div id=\"background_label\"> Background: \n                                        <input type=\"color\" id=\"background_field\" onChange={(e) => this.handleChange_backgroundColor(e)}/>\n                                    </div>\n                                    <div id=\"border_color_label\"> Border Color: \n                                        <input type=\"color\" id=\"border_color_field\" onChange = {(e) => this.handleChange_borderColor(e)} />\n                                    </div>\n                                    <div id=\"border_thickness_label\"> Border Thickness:\n                                        <input type=\"input\" id=\"border_thickness_field\" onChange = {(e) => this.handleChange_border_thickness(e)} />\n                                    </div>\n                                    <div id= \"border_radius_label\"> Border Radius:\n                                        <input type=\"input\" id=\"border_radius_field\" onChange = {(e) => this.handleChange_border_radius(e)} />\n                                    </div> \n                                    <div id= \"zIndexItem\">\n                                        <input type=\"button\" id=\"bring_to_front\" value=\"Bring to Front\" onClick={() => this.bringItemToFront()}/>\n                                        <input type=\"button\" id=\"send_to_back\" value=\"Send to Back\" onClick={() => this.sendItemToBack()}/>\n                                    </div> \n                                    <div id= \"name_of_wireframe\" className=\"name_of_wireframe\"> Name:\n                                        <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                                    </div>\n                                </div>\n                                : \n                                // Case where item isn't selected\n                                <>\n                                    <div className='right_screen_no_item'> No item is selected </div>\n                                    <div id= \"name_of_wireframe\" className=\"name_of_wireframe_no_item\"> Name:\n                                        <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                                    </div>\n                                </>\n                                }\n                            </div>\n                    </div> \n                    <div id=\"my_modal\" className=\"modal\">\n                        <div className=\"modal-content \">\n                            <h4>Save Wireframe?</h4>\n                            <br />\n                            <p> Would you like to save your progress? </p>\n                        </div>\n                        <button id=\"yes\" onClick={this.saveWork} className=\"modal-close waves-effect waves-white btn-flat\">Yes</button>\n                        <button id=\"no\" onClick={this.closeWork} className=\"modal-close waves-effect waves-white btn-flat\">No</button>\n                        <div id=\"last_line\"> Without saving, all progress will be lost.</div>\n                    </div>\n                    <div id=\"wireframe_dimensions\">\n                        <div id=\"wireframe_dimension_left\" className=\"font_dimension\"> \n                            <button id=\"dimension_width_button\" disabled={this.state.isWidthEnabled} onClick={this.handleChange_diagram_width} >Update Width </button>\n                            <input type=\"input\" id=\"dimension_width\" name=\"width\" onChange ={(e) => this.checkWidth_diagram(e)}/>\n                        </div>\n                        <div id=\"wireframe_dimension_right\" className=\"font_dimension\"> \n                            <button id=\"dimension_height_button\" disabled={this.state.isHeightEnabled} onClick = {this.handleChange_diagram_height}>Update Height </button>\n                            <input type=\"input\" id=\"dimension_height\" name=\"height\" onChange ={(e) => this.checkHeight_diagram(e)}/>\n                        </div>\n                    </div> \n                </div>\n            );\n        }\n    }\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      accounts : state.firestore.ordered.accounts,\n      wireframes: state.firebase.profile.wireframes\n     }\n  };\n\n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'accounts' },\n    ]),\n  )(WireframeBox);","import React, { Component } from 'react';\nimport ClickOutHandler from 'react-onclickout'; \nimport {Rnd} from 'react-rnd'; // resizable and draggable component for React.\n\nclass WireframeItem extends Component {\n  state = {\n    // State variables initialized to props value as start value\n    // control_x_position : this.props.item.control_x_position,\n    // control_y_position : this.props.item.control_y_position,\n\n    rerender : false,\n    isSelected : false,\n\n    inner1 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    inner2 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    inner3 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    inner4 : Math.floor(Math.random() * 10000) + 100 + \"\",\n    \n    // drag bounds\n    top: 40, \n    left: 40\n\n  }\n  \n  setSelected = (toggleVal) => {\n    this.setState({isSelected: toggleVal});\n    if (toggleVal) this.props.setCurrSelection(toggleVal, this.props.item.id); // send the item to parent\n    else this.props.setCurrSelection(toggleVal, null); // no item to send to parent\n  }\n\ncheckKeyPress = (e) => {\n  e.preventDefault();\n  if (this.state.isSelected) {\n    if (e.keyCode === 8 || e.key === \"Delete\") {\n      document.getElementById(\"font_size_textfield\").value = \"\";\n      document.getElementById(\"textfield_input\").value = \"\";\n      document.getElementById(\"text_color_field\").value = \"#000000\";\n      document.getElementById(\"background_field\").value = \"#000000\";\n      document.getElementById(\"border_color_field\").value = \"#000000\";\n      document.getElementById(\"border_thickness_field\").value = \"\";\n      document.getElementById(\"border_radius_field\").value = \"\";\n      this.deselectItem('delete');\n      this.deleteItem(this.props.item);\n    }\n    else if (e.keyCode === 68 && (e.ctrlKey || e.metaKey)) { // Ctrl + d to duplicate\n      e.preventDefault();\n      this.duplicateSelectedItem();\n      this.deselectItem('duplicate');\n      // this.postDuplicate();\n      // this.saveProps();\n    }\n  }\n}\n\ndeleteItem = (item) => {\n  let index = this.props.items.indexOf(item);\n  this.props.items.splice( index, 1 ); // removed item\n  this.setState({ rerender : true}); // rerender\n}\n\nduplicateSelectedItem = () => {\n  let item = this.props.item;\n  const item_duplicate = {\n      id : Math.floor(100000 + Math.random() * 900000),\n      control : item.control,\n      control_width : item.control_width,\n      control_height: item.control_height,\n      control_text: item.control_text,\n      control_font_size : item.control_font_size,\n      control_background : item.control_background,\n      control_border_color : item.control_border_color,\n      control_text_color : item.control_text_color,\n      control_border_thickness : item.control_border_thickness,\n      control_border_radius : item.control_border_radius,\n      control_x_position : item.control_x_position,\n      control_y_position : item.control_y_position,\n      is_duplicate : true\n  }\n  this.props.items.push( item_duplicate ); // add duplicated item \n  return item_duplicate;\n}\n\ncheckDraggable = () => {\n  if (this.state.isSelected) { return false; }\n  else { return true; }\n}\n\ncheckResizable = () => {\n\nif (!this.state.isSelected) {\n  const returnable = {\n    bottom: false,\n    bottomLeft: false,\n    bottomRight: false,\n    left: false,\n    right: false,\n    top: false,\n    topLeft: false,\n    topRight: false\n    } \n  return returnable;\n  }\nelse {\n    const returnable2 = {\n      bottom: false,\n      bottomLeft: true,\n      bottomRight: true,\n      left: false,\n      right: false,\n      top: false,\n      topLeft: true,\n      topRight: true\n      } \n  return returnable2;\n  }\n}\n\ndeselectItem = (e) => {\n  console.log(\"EVENT: \", e)\n  if (this.state.isSelected && this.props.isCurrSelection[0] \n    && (e === 'delete' || e === 'duplicate' || e.target.classList.contains('dimension') // can only deselect when clicking within dimension \n    || e.target.classList.contains('control_move'))) // check if it's another item\n  {\n    // console.log(\"WireframeItem.deselectItem - Event object: \", e);\n    console.log(\"WireframeItem.deselectItem - Deselecting Item With ID: \", this.props.item.id);\n\n    // Reset corner boxes CSS\n    document.getElementById(this.state.inner1).classList.remove(\"rectangle_topleft\");\n    document.getElementById(this.state.inner2).classList.remove(\"rectangle_topright\");\n    document.getElementById(this.state.inner3).classList.remove(\"rectangle_bottomleft\");\n    document.getElementById(this.state.inner4).classList.remove(\"rectangle_bottomright\");\n\n    // selected another item\n    if (e.target && e.target.classList.contains('control_move')) {\n      \n    }\n\n    // Reset inputs on the right hand side\n    document.getElementById(\"font_size_textfield\").value = \"\";\n    document.getElementById(\"textfield_input\").value = \"\";\n    document.getElementById(\"text_color_field\").value = \"#000000\";\n    document.getElementById(\"background_field\").value = \"#000000\";\n    document.getElementById(\"border_color_field\").value = \"#000000\";\n    document.getElementById(\"border_thickness_field\").value = \"\";\n    document.getElementById(\"border_radius_field\").value = \"\";\n\n    // Reset item selection CSS design\n    document.getElementById(this.props.item.id).classList.remove(\"select_border\");\n    this.setSelected(false);\n  }\n}\n\nselectItem = (itemId, topLeft, topRight, bottomLeft, bottomRight) => {\n    // Case 1: Item is not currently selected\n    if (this.state.isSelected === false && !this.props.isCurrSelection[0]) \n    {\n      console.log(\"WireframeItem.selectItem - Selecting Item With ID: \", itemId);\n      document.getElementById(itemId).classList.add(\"select_border\");\n      // debugger;\n      // Select (add borders)\n      document.getElementById(topLeft).classList.add(\"rectangle_topleft\");\n      document.getElementById(topRight).classList.add(\"rectangle_topright\");\n      document.getElementById(bottomLeft).classList.add(\"rectangle_bottomleft\");\n      document.getElementById(bottomRight).classList.add(\"rectangle_bottomright\");\n\n      this.setSelected(true);\n\n      // Add properties\n      // document.getElementById(\"font_size_textfield\").value = this.props.item.control_font_size;\n      // document.getElementById(\"textfield_input\").value = this.props.item.control_text;\n      // document.getElementById(\"text_color_field\").value = this.props.item.control_text_color;\n      // document.getElementById(\"background_field\").value = this.props.item.control_background; // background color\n      // document.getElementById(\"border_color_field\").value = this.props.item.control_border_color; // background color\n      // document.getElementById(\"border_thickness_field\").value = this.props.item.control_border_thickness;\n      // document.getElementById(\"border_radius_field\").value = this.props.item.control_border_radius;\n      // console.log('this.props: ', this.props);\n  }\n}\n\nchangeButton = (e) => {\n  this.setState({ control_text : e.target.value});\n}\n\ncheckControl = () => {\n  // Check control, make it container_box (container), prompt_text (label), buttom_submit (button), textfield_input (textfield)\n\n  let name = this.props.item.control;\n  let key = this.props.item.id;\n  \n    return (\n      <ClickOutHandler onClickOut={(e) => this.deselectItem(e)}>\n        <div className=\"position movable\" tabIndex=\"0\" onKeyDown={(e) => this.checkKeyPress(e)} style={{zIndex: this.props.item.z_index, position: 'relative'}}>  \n          <Rnd enableResizing={this.checkResizable()} disableDragging={this.checkDraggable()} size={{width: this.props.item.control_width, height:this.props.item.control_height}} \n          onDragStop={(e,d) => {this.props.item.control_x_position = d.x; this.props.item.control_y_position = d.y}}\n          onResize={(e, ignore1, ref, ignore2, ignore3) => {this.props.item.control_width = ref.offsetWidth; this.props.item.control_height = ref.offsetHeight; this.setState({rerender : true})}}\n          default={{x: parseInt(this.props.item.control_x_position, 10), y: parseInt(this.props.item.control_y_position, 10)}}> \n            { name === 'button' ? \n              // Case 1: Button\n              <button className={\"button_submit2 control_move\"} style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", transform: \"scale(\" + this.props.scale + \")\",\n              fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color,\n              color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n              id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > \n                {this.props.item.control_text} \n                <span id={this.state.inner1} />\n                <span id={this.state.inner2} />\n                <span id={this.state.inner3} />\n                <span id={this.state.inner4} />\n              </button> : \n              // Case 2: Container\n              name === 'container' ? \n                <div className={\"container_box2 control_move\"} style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", transform: \"scale(\" + this.props.scale + \")\",\n                  fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color,\n                  color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                  id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)}> {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> :\n              // Case 3: Textfield\n              name === 'textfield' ? \n                <div>\n                  <input type=\"input\" id={key} className={\"textfield_input2 control_move\"} placeholder=\"Input\" \n                  style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", \n                  fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, transform: \"scale(\" + this.props.scale + \")\",\n                  borderColor: this.props.item.control_border_color, color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\",\n                  borderRadius: this.props.item.control_border_radius + \"px\"}} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} defaultValue={this.props.item.control_text} /> \n                  <div>\n                    <span id={this.state.inner1} />\n                    <span id={this.state.inner2} />\n                    <span id={this.state.inner3} />\n                    <span id={this.state.inner4} />\n                  </div>\n                </div> :\n              // Case 4: Label\n              name === 'label' ? \n                <div className={\"prompt_text2 control_move\"} style={{width: this.props.item.control_width + \"px\", height: this.props.item.control_height + \"px\", transform: \"scale(\" + this.props.scale + \")\",\n                fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color,\n                color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> : null\n            }\n          </Rnd>\n      </div>  \n      </ClickOutHandler>\n    )\n  }\n\nrender() {\n  // console.log('this.props: ', this.props)\n  // console.log('width', this.props.item.control_width);\n  return (\n    <div id=\"control_spawn\">\n      <div id=\"resize_element\"> \n        {this.checkControl()} \n      </div>\n    </div>\n        );\n    }\n}\n\nexport default WireframeItem;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\n// (ADDED)\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyCZcHpbnk8IbCdYQExAkweaPvusji6qaIM\",\n//     authDomain: \"project316-7097b.firebaseapp.com\",\n//     databaseURL: \"https://project316-7097b.firebaseio.com\",\n//     projectId: \"project316-7097b\",\n//     storageBucket: \"project316-7097b.appspot.com\",\n//     messagingSenderId: \"37182883154\",\n//     appId: \"1:37182883154:web:9e6c0d8fe39031392fa68b\",\n//     measurementId: \"G-SGKG7GR5XT\"\n// };\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBvf3l8mJ6YxMZ12mkiRJOnc9yJ7Htw4_U\",\n    authDomain: \"hamam-48642.firebaseapp.com\",\n    projectId: \"hamam-48642\",\n    storageBucket: \"hamam-48642.appspot.com\",\n    messagingSenderId: \"161099268923\",\n    appId: \"1:161099268923:web:5c92edce48f02fe8586d1e\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_STARTED = 'REGISTER_STARTED';\nexport const REGISTER_SUCCEEDED = 'REGISTER_SUCCEEDED';\nexport const REGISTER_ERRORED = 'REGISTER_ERRORED';\nexport const LOGIN_SUCCEEDED = 'LOGIN_SUCCESS';\nexport const LOGIN_ERRORED = 'LOGIN_ERROR';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\n/*********************************************************************\n* PURPOSE: When called, returns object with required information\n* WHERE IS IT USED?: Used in userActions functions / mapDispatchtoProps\n************************************************************************/\n\nexport const registerStarted = () => {\n    return { \n        type: REGISTER_STARTED\n    }\n};\n\nexport const registerSucceeded = (newUser) => {\n    return { \n        type: REGISTER_SUCCEEDED,\n        user: newUser\n    }\n};\nexport function registerErrored(error) { \n    console.log(\"Registering register errored function, attaching error: \", error);\n    return { \n        type: REGISTER_ERRORED, \n        error : error\n    }\n};\nexport function loginSucceeded() {\n    return { \n        type: LOGIN_SUCCEEDED \n    }\n};\nexport function loginErrored(error) {\n    return { \n        type: LOGIN_ERRORED, \n        error : error\n    }\n};\nexport function logoutSucceeded() {\n    return { type: LOGIN_SUCCEEDED }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS WIREFRAME UPDATES\nexport function createWireFrame(wireframe) {\n    return {\n        type: 'CREATE_WIREFRAME',\n        wireframe\n    }\n}\nexport function createWireFrameError(error) {\n    return {\n        type: 'CREATE_WIREFRAME_ERROR',\n        error\n    }\n}","import * as actionCreators from '../../actions/actionCreators.js'\n\nexport const loginHandler = async ( credentials, firebase, loginSucceeded, loginErrored ) => {\n  console.log(\"userActions.loginHandler: Beginning loginHandler with user: \", credentials);\n  firebase.auth().signInWithEmailAndPassword(\n    credentials.email,\n    credentials.password,\n  ).catch((error) => {\n    console.log(\"authReducerHelpers.loginHandler error: \", error.message);\n    loginErrored(error.message);\n  });\n    console.log(\"LOGIN_SUCCESS\");\n    loginSucceeded(); // dispatch call\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSucceeded);\n    });\n};\n\nexport const registerHandler = async (newUser, firebase, firestore, startedDispatchCall, \n                                      succeededDispatchCall, erroredDispatchCall) => {\n  console.log(\"authReducerHelpers.registerHandler: Beginning registerHandler with user: \", newUser);\n  startedDispatchCall();\n  const credentials = {\n    'email' : newUser.email,\n    'password' : newUser.password\n  }\n  const userResp = await firebase.auth().createUserWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n  ).catch((error) => {\n    console.log('authReducerHelpers.registerHandler error code when adding user: ', error.message);\n    erroredDispatchCall(error.message);\n    return;\n  })\n  if (userResp != null) {\n    firestore.collection('accounts').doc(userResp.user.uid).set({\n      name: newUser.firstName + \" \" + newUser.lastName,\n      created_time: new Date(),\n      account_key: Math.floor(Math.random() * 1000) + 100,\n      administrator: false,\n      wireframes: []\n    }).catch((error) => {\n      console.log('authReducerHelpers.registerHandler: Error when adding new user-associated account: ', error);\n    });\n    succeededDispatchCall(userResp);\n    // FIREBASE DOCS: If the new account was created, the user is signed in automatically!\n  }\n};","import * as actionCreators from '../../actions/actionCreators'\nimport { registerHandler } from './authReducerHelpers'\nimport { getFirestore } from 'redux-firestore';\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\n\n// Setting initial state for a reducer is typically done using default parameters as in the simple addition function below\n// function add(a = 0, b = 0) { return a + b }\nconst initState = {\n  creating : false,\n  authError: ''\n};\n\n// Using ...state spread operator in the sense of \"if you can't change it, replace it\"\n\n// MANPULATES REDUX STATE\nconst authReducer = (state = initState, action) => {\n  console.log(\"authReducer: Beginning mapping of type \" + action.type + \" to corresponding handler\");\n  switch (action.type) {\n    case actionCreators.LOGIN_ERRORED:\n      return {\n        ...state,\n        authError: action.error\n      };\n    case actionCreators.LOGIN_SUCCEEDED:\n      return {\n        ...state,\n        authError: '',\n      };\n    case actionCreators.REGISTER_STARTED:\n      return {\n        ...state\n      }\n    case actionCreators.REGISTER_SUCCEEDED:\n      return {\n        ...state,\n        // user : action.user, // commented out - user object is available via firebase.auth\n        authError: ''   \n      };\n    case actionCreators.REGISTER_ERRORED:\n      // console.log(\"Mapped to Register Errored with message: \", action.error)\n      return {\n        ...state,\n        authError: action.error     \n      };\n    default:\n      return {\n      ...state,\n      authError: '',\n      }\n  }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // pre-made reducer that handles syncing firestore data to our STORE state\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer/authReducer';\nimport accountReducer from './accountReducer/accountReducer';\n\n// Dispatches (built from actionCreators) get routed to here\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  account: accountReducer,\n  firestore: firestoreReducer, // reducer will know about our firebase proj online becasue we passed in firebase config in ReactReduxFirebaseApp.js\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>\n          <span id=\"navbar_links\">Log Out </span> </NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LoggedOutLinks extends React.Component {\n  render() {\n\n\n    return (\n      <ul className = \"right\" >\n        <li >\n          <NavLink to=\"/register\">\n            <span id=\"navbar_links\">Register </span>\n          </NavLink>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"banner\">\n            {links}\n        <div className=\"wireframer_text\" >\n          Wireframer!\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler} from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { registerStarted, registerSucceeded, registerErrored } from '../../redux/actions/actionCreators';\nimport { getFirestore } from 'redux-firestore';\nimport constants from '../../config/constants';\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    failedMsg: ''\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.firstName !== '' && this.state.lastName !== '' && \n    this.state.email !== '' && this.state.password !== '') {\n\n      if (this.state.password.length < 6) {\n        this.setState({failedMsg : constants.passwordValidationErrMsg});\n        return;\n      }\n\n      const credentials = {\n        firstName : this.state.firstName,\n        lastName : this.state.lastName,\n        email : this.state.email,\n        password: this.state.password\n      }\n      registerHandler(credentials, this.props.firebase, getFirestore(), this.props.registerStarted, this.props.registerSucceeded, this.props.registerErrored); // create the user with firebase\n    }\n    else {\n      this.setState({failedMsg : constants.registrationFailedErrMsg});\n    }\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n\n      <div className=\"register_box\">\n        <div className=\"register-content\">\n            <form id=\"register_form\" className=\"form-format\" onSubmit={this.handleSubmit}>\n              <h5 id=\"register_text\">Register</h5>\n              <br/>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <br/>\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text center\"><p>{authError ? authError : this.state.failedMsg}</p></div>\n              </div>\n            </form>\n            <div className=\"register-wireframer-text-box\">\n              <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\n// mapDispatchToProps = Component to Redux (calling an action, writing to the store)\n// Will map a function, \"register\", to a dispatcher\nconst mapDispatchToProps = dispatch => ({\n  // registerUser: (user, firebase) => dispatch(registerHandler(user, firebase, getFirestore))\n  registerStarted: () => dispatch(registerStarted()),\n  registerSucceeded: (user) => dispatch(registerSucceeded(user)),\n  registerErrored: (error) => dispatch(registerErrored(error))\n});\n\nexport default compose(\n  firebaseConnect(), // (Higher Order Component) props.firebase set on RegisterScreen component as firebase object with helpers\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { loginHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { loginErrored, loginSucceeded } from '../../redux/actions/actionCreators';\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebase.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n    loginHandler(credentials, firebase, props.loginSucceeded, props.loginErrored);\n  }\n\n  render() {\n\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"login_box\">\n        <div className=\"login-content\">\n          {/* Flexbox Starts */}\n          <div className=\"form_format\"> \n            <form onSubmit={this.handleSubmit} id=\"login-form\">\n              <h5 id=\"login_text\">Login</h5>\n              < br /> \n              <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n              </div>\n            </form>\n          </div>\n          <div className=\"wireframer_text_box\">\n            <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n            </div>\n          </div>\n          {/* Flexbox Ends */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // login: authData => loginHandler(authData)(dispatch),\n  loginSucceeded : () => dispatch(loginSucceeded()),\n  loginErrored : (error) => dispatch(loginErrored(error))\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { getFirestore } from 'redux-firestore';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nclass WireFrameCards extends React.Component {\n\n\ndeleteWireframe = (wireframeKey) => {\n\n    const fireStore = getFirestore();\n    let index = this.props.wireframes.map(function (wireframe) {return wireframe.key;}).indexOf(wireframeKey);\n    this.props.wireframes.splice(index, 1);\n    fireStore.collection(\"accounts\").doc(this.props.userId).update({ wireframes: this.props.wireframes});\n}\n    render() {\n\n        // if (account.id !== this.props.id) {\n        //     return null;\n        // }\n        // else {\n        //     const wireframes = account.wireframes;\n        return (\n            <div>\n                <div className=\"card-content black-text text-darken-3\">\n                    <span className=\"card-title\"> \n                        {this.props.wireframes && this.props.wireframes.map(wireframe => (\n                            <div className=\"wireframe_card\" key={wireframe.key}>\n                                <div id=\"delete_icon\" className=\"material-icons small\" onClick={ () => {this.deleteWireframe(wireframe.key)}} > delete</div>\n                                <Link to={'/wireframe/' + wireframe.key} on >\n                                    <div id = \"wireframe_name\">\n                                        {wireframe.name}\n                                    </div>\n                                </Link>\n                            </div>\n                        ))}\n                     </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accounts: state.firestore.data.accounts,\n        userId : state.firebase.auth.uid // same as account id \n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n//   firestoreConnect([\n//       { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n//     ])\n)(WireFrameCards);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase'; // use this as a higher order component to connect cmp with firestore data\nimport { getFirestore } from 'redux-firestore';\nimport WireFrameCards from './WireFrameCards';\n\nclass HomeScreen extends Component {\n\n  state = {\n    isNewWireframe : false,\n    wireframeKey : null,\n    list_index : 0,\n    adminRedirect: false,\n    goAdmin : false,\n  }\n\nhandleNewWireframe = () => {\n  const fireStore = getFirestore();\n  let answer = Math.floor(Math.random() * 1000) + 100;\n  fireStore.collection('accounts').doc(this.props.auth.uid).update({\n      'wireframes': fireStore.FieldValue.arrayUnion({\n        name: \"Unknown\",\n        created_time: new Date(), // to later sort, the ones in json dont need a date. that order doesnt matter. \n        width : 490, // default\n        height : 480, // default\n        items: [],\n        key : answer\n      })\n    }).then(() => {\n      this.setState({wireframeKey : answer});\n      this.setState({isNewWireframe : true});\n    }).catch((error) => {\n      console.log(error);\n  });  \n}\n\ncomponentDidMount() {\n  // Check if user is an administrator\n  // this.checkAdministrator()\n}\n\n    render() {\n    \n      if (!this.props.auth.uid) {\n        return <Redirect to=\"/login\" />;\n      }\n      if (this.state.adminRedirect) {\n        return <Redirect to=\"/databaseTester\" />;\n      }\n\n      if (this.state.isNewWireframe) {\n        return <Redirect to={'/wireframe/' + this.state.wireframeKey} />;\n     }\n\n        return (\n          \n          <div className=\"home_wrapper\">\n            {/* Flexbox Starts */}\n            <div className=\"home-content\">\n              <div className=\"form_format\"> \n                <form onSubmit={this.handleSubmit} className=\"\">\n                  <h5 id=\"login_text\">Recent Work</h5>\n                  <div onClick={this.updateList} >\n                    <div className=\"wireframes section\">\n                        <WireFrameCards wireframes={this.props.wireframes}/>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"wireframer_text_box\">\n                <div id=\"wireframe_text_box_text\"> \n                  Wireframer™\n                </div>\n                {/* Display admin button only if user is an administrator */}\n                {this.props.isAdministrator === true ? \n                <div id=\"is_administrator\"> \n                  <button id=\"admin_button\" onClick={() => this.setState({adminRedirect: true})}> Go to Admin Page 🔐</button>\n                </div> : ''}\n              </div>\n            </div>\n            {/* Flexbox Ends */}\n            <div id=\"create_wireframe\">\n              <button id=\"create_wireframe_button\" onClick={this.handleNewWireframe}>\n              Create New Wireframe\n              </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"HomeScreen.js State: \", state);\n    return {\n        isAdministrator : state.firebase.profile.administrator,\n        auth: state.firebase.auth,\n        wireframes : state.firebase.profile.wireframes\n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n  firestoreConnect([\n      { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n    ])\n)(HomeScreen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport WireframeBox from './WireframeBox';\n\nclass EditScreen extends Component {\n  render() {\n    return (\n      <div className=\"edit_box\">\n        {this.props.wireframes && this.props.auth ? \n        (\n          <WireframeBox accounts={this.props.accounts} wireframe={this.props.wireframes ? this.props.wireframes[this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))] : null}\n          wireframe_key={Number(this.props.match.params.key)} accountId={this.props.auth.uid}\n          wireframeIndex = {this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))} />\n        ) \n        : null\n        }\n      </div>\n      );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => { // arg of state is the entire redux store \n  // console.log(\"editscreen, state: \", state);\n  // debugger;\n  return {\n    auth: state.firebase.auth,\n    accounts : state.firestore.ordered.accounts,\n    wireframes: state.firebase.profile.wireframes\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'accounts' },\n  ]),\n)(EditScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport accountJson from './TestWireframesData.json'\nimport { getFirestore } from 'redux-firestore';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n// import { registerHandler } from '../redux/reducers/authReducer/authReducerHelpers';\nimport { Redirect } from 'react-router-dom';\n\nclass DatabaseTester extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        goHome : false,\n        administator : false\n      }\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    \n    goHome = () => {\n        this.setState({goHome : true});\n      }\n\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('accounts').get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let reference = fireStore.collection('accounts').doc(doc.id).get();\n                reference.then(\n                    doc => {\n                      let info = doc.data();\n                      if (info.administrator !== true) {\n                        fireStore.collection('accounts').doc(doc.id).delete();\n                      }\n            })\n        });\n    })\n}\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n\n        accountJson.accounts.forEach(accountJson => {\n        fireStore.collection('accounts').doc(accountJson.account_id).set({\n            created_time: new Date(),\n            name: accountJson.name,\n            email: accountJson.email,\n            account_key: accountJson.account_key,\n            administrator: accountJson.administrator,\n            wireframes: accountJson.wireframes,\n            })\n        });\n    }\n\n    checkAdministrator = () => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('accounts').doc(this.props.auth.uid).get();\n      \n        reference.then(\n        doc => {\n          let info = doc.data();\n          if (info.administrator === true) {\n            this.setState({ administrator : true});\n            // this.setState({administrator : true});\n          }\n          else {\n            this.setState({ administrator : false});\n          }\n          }\n        )\n      }\n\n    render() {\n\n        if (this.state.goHome) {\n            return <Redirect to=\"/\" />;\n          }\n\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        this.checkAdministrator()\n        if (this.state.administrator === false) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return ( \n            <div id=\"admin_wrapper\">\n                <div id=\"admin_options\">\n                  <button id=\"return_home\" className=\"handle_button\" onClick={this.goHome}> Return Home </button>\n                  <button id=\"clear_database\" className=\"handle_button\" onClick={this.handleClear}>Clear Database</button>\n                  <button id=\"reset_database\" className=\"handle_button\" onClick={this.handleReset}>Reset Database</button>\n                </div>\n                <div id=\"admin_notes\"> \n                    THIS PAGE IS FOR ADMINISTRATORS ONLY!\n                    <br/>\n                    <br/>\n                    Please be cautious when clearing the database. It will wipe the data of NON-ADMINS as dictated in the firestore. \n                    <br/>\n                    <br/>\n                    As for the Reset button, default users will be loaded into the database for testing purposes. \n                    <br/>\n                    <br/>\n                    For any questions, please contact danielhamam@outlook.com. Enjoy the\n                    use of your controls as an administrative designer!\n                </div>\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  });\n\nconst mapDispatchToProps = dispatch => ({\n    // register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n  });\n  \n\n  export default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n  )(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport EditScreen from './components/edit_screen/EditScreen.js';\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/wireframe/:key\" component={EditScreen} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\n\n// Configs out Firebase/Firestore credentials with React/Redux\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'accounts',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase, // config\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/project_layout.css'\nimport './css/project_style.css'\n\nimport ReactReduxFirebaseApp from './redux/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}