{"version":3,"sources":["config/constants.js","components/edit_screen/WireframeBox.js","components/edit_screen/WireframeItem.js","config/firebaseConfig.js","redux/actions/actionCreators.js","redux/reducers/authReducer/authReducer.js","redux/reducers/rootReducer.js","redux/reducers/authReducer/authReducerHelpers.js","components/navbar/LoggedInLinks.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/WireFrameCards.js","components/home_screen/HomeScreen.js","components/edit_screen/EditScreen.js","test/DatabaseTester.js","App.js","redux/ReactReduxFirebaseApp.js","index.js"],"names":["constants","passwordValidationErrMsg","registrationFailedErrMsg","SCALE_FACTOR_SIZE","SCALE_FACTOR_FONT","MIN_FONT_SIZE_ZOOM","MIN_ITEM_WIDTH_ZOOM","MIN_ITEM_HEIGHT_ZOOM","MAX_ITEM_WIDTH_ZOOM","MAX_ITEM_HEIGHT_ZOOM","control","control_width","control_height","control_text","control_font_size","control_background","control_border_color","control_text_color","control_border_thickness","control_border_radius","control_x_position","control_y_position","WireframeBox","props","state","goHome","scale","wireframe","staging_changes_items","global","structuredClone","items","name","height","width","isCurrSelection","isWidthEnabled","isHeightEnabled","pending_width","pending_height","prompt_save","z_index_high","bringToFrontVal","z_index_low","sendToBackVal","isModalOpen","setSave","setState","setCurrSelection","toggleVal","itemId","getSelectedItem","find","item","id","zoomIn","e","forEach","console","log","parseInt","toString","MAX_FONT_SIZE_ZOOM","zoomOut","saveWork","wireframes","length","temp","wireframeIndex","getFirestore","collection","doc","accountId","update","closeWork","handleChange_textColor","handleChange_itemProperty","target","value","handleChange_borderColor","handleChange_backgroundColor","handleChange_text","handleChange_font_size","handleChange_border_thickness","handleChange_border_radius","propertyId","propertyName","newValue","document","getElementById","handleChange_name","handleChange_diagram_width","handleChange_diagram_height","checkWidth_diagram","checkHeight_diagram","closeWork_check","toggleModal","myModal","modalOverlay","style","display","animation","visibility","deleteItem","index","indexOf","splice","rerender","sendItemToBack","selectedItem","z_index","prevState","bringItemToFront","updatePropertyLabels","componentDidUpdate","setAttribute","removeAttribute","itemType","new_item","Math","floor","random","newItemProps","this","push","to","className","onClick","addNewItem","type","placeholder","parseFloat","toFixed","map","key","duplicateItem","textFieldInputRef","fontSizeTextfieldRef","textColorFieldRef","backgroundFieldRef","borderColorFieldRef","borderThicknessFieldRef","borderRadiusFieldRef","onChange","prevent","defaultValue","marginRight","disabled","Component","compose","connect","auth","firebase","accounts","firestore","ordered","profile","firestoreConnect","WireframeItem","setSelected","isSelected","checkKeyPress","preventDefault","keyCode","deselectItem","ctrlKey","metaKey","duplicateSelectedItem","item_duplicate","is_duplicate","checkDraggable","checkResizable","bottom","bottomLeft","bottomRight","left","right","top","topLeft","topRight","classList","contains","inner1","remove","inner2","inner3","inner4","selectItem","add","changeButton","checkControl","onClickOut","onKeyDown","enableResizing","tabIndex","size","zIndex","position","onDragStart","data","onDragStop","d","x","y","onResize","ignore1","ref","ignore2","ignore3","offsetWidth","offsetHeight","default","fontSize","backgroundColor","borderColor","color","borderWidth","borderRadius","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","showLinkOnNavbar","link","loggedOutLink","logoutSucceeded","initState","creating","authError","authReducer","action","error","rootReducer","combineReducers","account","accountReducer","firestoreReducer","firebaseReducer","loginHandler","credentials","loginSucceeded","loginErrored","a","signInWithEmailAndPassword","email","password","catch","message","registerHandler","newUser","startedDispatchCall","succeededDispatchCall","erroredDispatchCall","createUserWithEmailAndPassword","userResp","user","uid","set","firstName","lastName","created_time","Date","account_key","administrator","LoggedInLinks","handleLogout","signOut","React","firebaseConnect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","RegisterScreen","failedMsg","handleChange","handleSubmit","registerStarted","registerSucceeded","registerErrored","componentDidMount","resetAuthError","onSubmit","htmlFor","LoginScreen","WireFrameCards","deleteWireframe","wireframeKey","fireStore","userId","on","HomeScreen","isNewWireframe","list_index","adminRedirect","goAdmin","handleNewWireframe","answer","FieldValue","arrayUnion","updateList","isAdministrator","EditScreen","wireframer","Number","match","params","wireframe_key","DatabaseTester","administator","handleClear","get","querySnapshot","delete","handleReset","accountJson","account_id","checkAdministrator","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.6b3e0f40.chunk.js","sourcesContent":["/* \n    Purpose: ADD ALL CONSTANTS HERE FOR EASY CONFIGURATION\n    Date: September 7 2022\n*/\n\nconst constants = {\n\n    // Register Screen\n    passwordValidationErrMsg : 'Your password must be at least 6 characters long',\n    registrationFailedErrMsg : 'Registration failed. Please check the field(s) again!',\n\n    // Zoom out/in \n    SCALE_FACTOR_SIZE : 5, // for width/height\n    SCALE_FACTOR_FONT : 1, // for font size\n    MIN_FONT_SIZE_ZOOM: 4,\n    MIN_ITEM_WIDTH_ZOOM: 10,\n    MIN_ITEM_HEIGHT_ZOOM: 10,\n    MAX_ITEM_WIDTH_ZOOM: 450,\n    MAX_ITEM_HEIGHT_ZOOM: 450,\n    MIN_FONT_SIZE_ZOOM: 4,\n    MAX_FONT_SIZE_ZOOM: 50,\n\n    // New Item Properties\n    newItemProps : {\n        'textfield' : {\n            control : \"textfield\",\n            control_width : \"200\",\n            control_height: \"25\",\n            control_text : \"\",\n            control_font_size : \"12\",\n            control_background : \"#ffffff\",\n            control_border_color : \"#000000\",\n            control_text_color : \"\",\n            control_border_thickness : \"0.5\",\n            control_border_radius : \"2\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'label' : {\n            control : \"label\",\n            control_width : \"200\",\n            control_height: \"\",\n            control_text : \"Label\",\n            control_font_size : \"12\",\n            control_background : \"\",\n            control_border_color : \"\",\n            control_text_color : \"\",\n            control_border_thickness : \"0\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'button' : {\n            control : \"button\",\n            control_width : \"180\",\n            control_height: \"32\",\n            control_text : \"Button\",\n            control_font_size : \"16\",\n            control_background : \"#DCDCDC\",\n            control_border_color : \"#000000\",\n            control_text_color : \"#000000\",\n            control_border_thickness : \"0.5\",\n            control_border_radius : \"4\",\n            control_x_position : 0,\n            control_y_position : 0\n        },\n        'container' : {\n            control : \"container\",\n            control_width : \"140\",\n            control_height: \"80\",\n            control_text : \"\",\n            control_font_size : \"N/A\",\n            control_background : \"#FFFFFF\",\n            control_border_color : \"#000000\",\n            control_text_color : \"N/A\",\n            control_border_thickness : \"1\",\n            control_border_radius : \"0\",\n            control_x_position : 0,\n            control_y_position : 0\n        }\n    }\n}\n\nexport default constants;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport WireframeItem from './WireframeItem';\nimport constants from '../../config/constants';\nclass WireframeBox extends Component {\n    constructor(props) {\n        super(props);\n        // this.textFieldInputRef = React.createRef();\n        // this.fontSizeTextfieldRef = React.createRef();\n        // this.textColorFieldRef = React.createRef();\n        // this.backgroundFieldRef = React.createRef();\n        // this.borderColorFieldRef = React.createRef();\n        // this.borderThicknessFieldRef = React.createRef();\n        // this.borderRadiusFieldRef = React.createRef();\n    }\n    state = {\n        goHome : false,\n        scale: this.props.wireframe ? this.props.wireframe.scale : 1, \n        staging_changes_items: this.props.wireframe ? global.structuredClone(this.props.wireframe.items) : [], // DEEP COPY - keeping track of original, unupdated items in case of 'Close Work'\n        name: this.props.wireframe ? this.props.wireframe.name : '',\n        height : this.props.wireframe ? this.props.wireframe.height : 460,\n        width : this.props.wireframe ? this.props.wireframe.width : 500,\n        isCurrSelection : [false,null], // returns true if an item is currently selected\n        isWidthEnabled : true,\n        isHeightEnabled : true,\n        pending_width : 0,\n        pending_height : 0,\n        prompt_save : false, // modal save pop-up\n        z_index_high : this.props.wireframe.bringToFrontVal ? this.props.wireframe.bringToFrontVal : 1073741823,\n        z_index_low : this.props.wireframe.sendToBackVal ? this.props.wireframe.sendToBackVal : 1073741823,\n        isModalOpen : false\n    }\n\n    setSave = () => {this.setState({prompt_save : true})} // If prompt_save is true, will prompt user if he/she would like to save when closing work.\n    setCurrSelection = (toggleVal, itemId) => {\n        this.setState({isCurrSelection : [toggleVal, itemId]})\n    }\n\n    getSelectedItem = () => {\n        if (this.state.isCurrSelection[1] != null)\n            return this.state.staging_changes_items.find((item) => item.id === this.state.isCurrSelection[1]);\n    }\n\n    zoomIn = (e) => {\n        // let calculatedScale = this.state.scale * 1.5;\n        this.state.staging_changes_items.forEach((item) => {\n            console.log(\"before item: \", item);\n            item.control_width = (parseInt(item.control_width) + constants.SCALE_FACTOR_SIZE).toString() < constants.MAX_ITEM_WIDTH_ZOOM ? (parseInt(item.control_width) + constants.SCALE_FACTOR_SIZE).toString() : \"0\";\n            item.control_height = (parseInt(item.control_height) + constants.SCALE_FACTOR_SIZE).toString() < constants.MAX_ITEM_HEIGHT_ZOOM ? (parseInt(item.control_height) + constants.SCALE_FACTOR_SIZE).toString() : \"0\";\n            item.control_font_size = (parseInt(item.control_font_size) + constants.SCALE_FACTOR_FONT).toString() < constants.MAX_FONT_SIZE_ZOOM ? (parseInt(item.control_font_size) + constants.SCALE_FACTOR_FONT).toString() : \"0\";\n            // console.log(\"after item: \", item);\n        });\n        // this.setState({ scale : calculatedScale});\n        this.setSave();\n    }\n        \n    zoomOut = (e) => {\n        // console.log(\"before item: \", item);\n        this.state.staging_changes_items.forEach((item) => {\n            console.log(\"before item: \", item);\n            // item.control_width = (parseInt(item.control_width) - constants.SCALE_FACTOR_SIZE).toString() > constants.MIN_ITEM_WIDTH_ZOOM ? (parseInt(item.control_width) - constants.SCALE_FACTOR_SIZE).toString() : \"0\";\n            // item.control_height = (parseInt(item.control_height) - constants.SCALE_FACTOR_SIZE).toString() > constants.MIN_ITEM_HEIGHT_ZOOM  ? (parseInt(item.control_height) - constants.SCALE_FACTOR_SIZE).toString() : \"0\";\n            // item.control_font_size = (parseInt(item.control_font_size) - constants.SCALE_FACTOR_FONT).toString() > constants.MIN_FONT_SIZE_ZOOM ? (parseInt(item.control_font_size) - constants.SCALE_FACTOR_FONT).toString() : \"0\";\n            item.control_width = (parseInt(item.control_width) - constants.SCALE_FACTOR_SIZE).toString() > 0 ? (parseInt(item.control_width) - constants.SCALE_FACTOR_SIZE).toString() : item.control_width;\n            item.control_height = (parseInt(item.control_height) - constants.SCALE_FACTOR_SIZE).toString() > 0  ? (parseInt(item.control_height) - constants.SCALE_FACTOR_SIZE).toString() : item.control_height;\n            item.control_font_size = (parseInt(item.control_font_size) - constants.SCALE_FACTOR_FONT).toString() > 0 ? (parseInt(item.control_font_size) - constants.SCALE_FACTOR_FONT).toString() : item.control_font_size;\n            console.log(\"after item: \", item);\n        });\n        // console.log(\"after item: \", item);\n        this.setSave();\n    }\n        \n    saveWork = () => {\n\n        console.log('stage: ', this.state.staging_changes_items);\n        // Set wireframes' items data\n        this.props.wireframe.items = this.state.staging_changes_items; // set to staging wireframe\n\n        // Set wireframes' data\n        this.props.wireframe.name = this.state.name;\n        this.props.wireframe.width = this.state.width;\n        this.props.wireframe.height = this.state.height;\n        this.props.wireframe.scale = this.state.scale;\n        this.props.wireframe.bringToFrontVal = this.state.z_index_high;\n        this.props.wireframe.sendToBackVal = this.state.z_index_low;\n        // this.props.wireframe.created_time = new Date(); // so it can be on top\n\n        // Move it to be first on the list \n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframe;\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n        }\n\n        console.log('this.props.wireframes: ', this.props.wireframes);\n\n        // Update wireframe\n        getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes});\n\n        // Go back to home screen\n        this.setState({goHome : true});\n    }\n    closeWork = () => {\n        \n        console.log('saving.....')\n        console.log('this.props.wireframe: ', this.props.wireframe);\n        \n        // console.log('BEFORE this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n        // console.log('AFTER this.state.staging_changes_wireframe: ', this.state.staging_changes_items);\n\n        // Move it to top of list if there are multiple\n        if (this.props.wireframes.length > 1) {\n            let temp = this.props.wireframes[0];\n            this.props.wireframes[0] = this.props.wireframes[this.props.wireframeIndex];\n            this.props.wireframes[this.props.wireframeIndex] = temp;\n            getFirestore().collection(\"accounts\").doc(this.props.accountId).update({ wireframes : this.props.wireframes}); \n        }\n        // Reset items staging changes to original wireframe\n        this.setState({staging_changes_items : this.props.wireframe.items});\n        this.setState({goHome : true});\n    }\n\n    addNewItem(itemType) {\n\n        if (itemType !== 'container' && itemType !== 'button' && itemType !== 'label' && itemType !== 'textfield') {\n            console.log(\"WireframeBox.addNewItem: cannot add new item as it is incorrect type...\");\n            return;\n        }\n\n        const new_item = {\n            id : Math.floor(100000 + Math.random() * 900000),\n            control : itemType,\n            z_index : 1073741823,\n            control_width : constants.newItemProps[itemType]['control_width'],\n            control_height: constants.newItemProps[itemType]['control_height'],\n            control_text : constants.newItemProps[itemType]['control_text'],\n            control_font_size : constants.newItemProps[itemType]['control_font_size'],\n            control_background : constants.newItemProps[itemType]['control_background'],\n            control_border_color : constants.newItemProps[itemType]['control_border_color'],\n            control_text_color :constants.newItemProps[itemType]['control_text_color'],\n            control_border_thickness : constants.newItemProps[itemType]['control_border_thickness'],\n            control_border_radius : constants.newItemProps[itemType]['control_border_radius'],\n            control_x_position : constants.newItemProps[itemType]['control_x_position'],\n            control_y_position : constants.newItemProps[itemType]['control_y_position']\n        }\n        this.state.staging_changes_items.push(new_item);\n        this.setState({prompt_save : true});\n    }\n\n    handleChange_textColor = (e) => { this.handleChange_itemProperty('text_color_field', 'control_text_color', e.target.value) }\n    handleChange_borderColor = (e) => { this.handleChange_itemProperty('border_color_field', 'control_border_color' ,e.target.value) }\n    handleChange_backgroundColor = (e) => { this.handleChange_itemProperty('background_field', 'control_background' ,e.target.value) }\n    handleChange_text = (e) => { this.handleChange_itemProperty('textfield_input', 'control_text', e.target.value) }\n    handleChange_font_size = (e) => { this.handleChange_itemProperty('font_size_textfield', 'control_font_size', e.target.value)}\n    handleChange_border_thickness = (e) => { this.handleChange_itemProperty('border_thickness_field', 'control_border_thickness' ,e.target.value) }\n    handleChange_border_radius = (e) => { this.handleChange_itemProperty('border_radius_field', 'control_border_radius' ,e.target.value) }\n    handleChange_itemProperty = (propertyId, propertyName, newValue) => {\n        if (this.state.isCurrSelection[1] !== null) \n        {\n            let selectedItem = this.state.staging_changes_items.find((item => item.id === this.state.isCurrSelection[1])); // should return the reference since type is object\n            selectedItem[propertyName] = newValue;\n            document.getElementById(propertyId).value = newValue;\n            this.setState({staging_changes_items : this.state.staging_changes_items}); // force a rerender since this state var changed\n            this.setSave();\n        }\n    }\n\n    handleChange_name = (e) => { this.setState({ name: e.target.value}); this.setSave(); }\n    handleChange_diagram_width = (e) => { this.setState({ width: this.state.pending_width}); this.setSave(); }\n    handleChange_diagram_height = (e) => { this.setState({ height: this.state.pending_height}); this.setSave(); }\n    checkWidth_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({isWidthEnabled : false});\n            this.setState({pending_width : e.target.value})\n        }\n        else {\n            this.setState({isWidthEnabled : true});\n        }\n    }\n\n    checkHeight_diagram = (e) => {\n        if (e.target.value <= 5000 && e.target.value >= 1) {\n            this.setState({isHeightEnabled : false});\n            this.setState({pending_height : e.target.value})\n        }\n        else {\n            this.setState({isHeightEnabled : true});\n        }\n    }\n\n    closeWork_check = () => {\n\n        if (this.state.prompt_save) {\n            this.toggleModal();\n        }\n        else {\n            this.closeWork();\n        }\n    }\n\n    toggleModal = () => {\n        let myModal = document.getElementById(\"my_modal\");\n        let modalOverlay = document.getElementById(\"modal_screen_overlay\");\n        if (myModal.style.display === \"block\") {\n            myModal.style.animation = \"fadeout .6s\";\n            myModal.style.visibility = \"hidden\";\n            modalOverlay.style.display = \"hidden\";\n            this.setState({isModalOpen : false});\n        } else {\n            myModal.style.visibility = \"visible\";\n            myModal.style.animation = \"fadein .6s\";\n            myModal.style.display = \"block\";\n            modalOverlay.style.display = \"block\";\n            this.setState({isModalOpen : true});\n        }\n    }\n\n    deleteItem = (item) => {\n        let index = this.state.staging_changes_items.indexOf(item);\n        this.state.staging_changes_items.splice( index, 1 ); // removed item\n        this.setState({ rerender : true}); // rerender\n        // console.log('deleted item');\n      }\n\n    sendItemToBack = () => {\n        // Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            let selectedItem = this.getSelectedItem();\n            if (selectedItem != null) {\n                console.log(\"Moving z index of \", selectedItem, \" back to \", this.state.z_index_low - 1);\n                selectedItem.z_index = this.state.z_index_low - 1;\n                this.setState((prevState) => ({z_index_low : prevState.z_index_low - 1}));\n                this.setSave();\n            }\n        }\n    }\n    bringItemToFront = () => {\n        let selectedItem = this.getSelectedItem();\n        // Check if selected item exists\n        if (selectedItem != null && this.state.isCurrSelection[0] && this.state.isCurrSelection[1] != null) {\n            selectedItem.z_index = this.state.z_index_high + 1;\n            this.setState((prevState) => ({z_index_high : prevState.z_index_high + 1})); // call back function\n            console.log(\"Moving z index of \", selectedItem, \" in front to \", this.state.z_index_high + 1);\n            this.setSave();\n        }\n    }\n    updatePropertyLabels = () => {\n        // Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null) {\n            let item = this.state.isCurrSelection[1];\n            // debugger;\n            document.getElementById(\"font_size_textfield\").value = item.control_font_size;\n            document.getElementById(\"textfield_input\").value = item.control_text;\n            document.getElementById(\"text_color_field\").value = item.control_text_color;\n            document.getElementById(\"background_field\").value = item.control_background; // background color\n            document.getElementById(\"border_color_field\").value = item.control_border_color; // background color\n            document.getElementById(\"border_thickness_field\").value = item.control_border_thickness;\n            document.getElementById(\"border_radius_field\").value = item.control_border_radius ;\n        }\n    }\n\n    componentDidUpdate = () => {\n        // Here, we are going to update the properties panel on the right side with the props of the item.\n\n        // 1. Check if selected item exists\n        if (this.state.isCurrSelection[0] === true && this.state.isCurrSelection[1] != null && !this.state.goHome) {\n            let item = this.getSelectedItem();\n            // console.log(\"Item: \", item);\n            // if item is container\n            if (item != null) {\n                if (item.control === 'container') {\n                    document.getElementById(\"font_size_textfield\").setAttribute('disabled', '');\n                    document.getElementById(\"textfield_input\").setAttribute('disabled', '');\n                    document.getElementById(\"text_color_field\").setAttribute('disabled', '');\n                    document.getElementById(\"font_size_textfield\").value = \"N/A\";\n                    document.getElementById(\"textfield_input\").value =  \"N/A\";\n                    document.getElementById(\"text_color_field\").value =  \"N/A\";\n                    // document.getElementById(\"font_size_textfield\").style.backgroundColor = 'lightgray';\n                    // document.getElementById(\"textfield_input\").style.backgroundColor = 'lightgray';\n                    // document.getElementById(\"text_color_field\").style.backgroundColor = 'lightgray';\n                }\n                // not a container\n                else {\n                    document.getElementById(\"font_size_textfield\").removeAttribute('disabled');\n                    document.getElementById(\"textfield_input\").removeAttribute('disabled');\n                    document.getElementById(\"text_color_field\").removeAttribute('disabled');\n                    document.getElementById(\"font_size_textfield\").value = item.control_font_size;\n                    document.getElementById(\"textfield_input\").value = item.control_text;\n                    document.getElementById(\"text_color_field\").value = item.control_text_color;\n                }\n                // do for all items\n                    document.getElementById(\"background_field\").value = item.control_background; // background color\n                    document.getElementById(\"border_color_field\").value = item.control_border_color; // background color\n                    document.getElementById(\"border_thickness_field\").value = item.control_border_thickness;\n                    document.getElementById(\"border_radius_field\").value = item.control_border_radius ;\n                }\n            }\n        }\n \n    render() {\n\n        if (this.state.goHome === true) {\n            return <Redirect to={\"/\"} />\n        }\n\n        const wireframe = this.props.wireframe;\n        const items = this.state.staging_changes_items;\n\n        return (\n                <div className = \"inner_edit_box\">\n                    <div className = \"left_screen\">\n                        <div className = \"top_left\">\n                            <div id=\"zoom_buttons\" > \n                                <i className=\"material-icons medium\" onClick={this.zoomIn}> zoom_in</i>\n                                <i className=\"material-icons medium\" onClick={this.zoomOut}> zoom_out</i>\n                            </div>\n                            <div id=\"save_work\" onClick={this.saveWork}> Save </div>\n                            <div id=\"close_work\" onClick={this.closeWork_check}> Close </div>\n                        </div>\n                        <div id=\"bottom_left\"> \n                            <div className='left_screen_title'> <b> Please click an item to add: </b> </div>\n                            <div className=\"container_example example_item\">\n                                <div className=\"container_box example_item_select\" onClick={() => this.addNewItem('container')} > \n                                    <div id=\"container_text\"> Container </div>\n                                </div>\n                            </div>\n                            <div id=\"prompt_for_input\" className='example_item'>\n                                <div className=\"prompt_text example_item_select\" onClick={() => this.addNewItem('label')} > \n                                    <div id=\"label_text\"> Label </div>\n                                </div>\n                            </div>\n                            <div className=\"button_example example_item\">\n                                <button className=\"button_submit example_item_select\" onClick={() => this.addNewItem('button')}> \n                                    <div id=\"button_text\"> Button </div>\n                                </button>\n                            </div>\n                            <div className=\"textfield_example example_item\">\n                                <input type=\"input\" className=\"textfield_input example_item_select\" placeholder=\"Textfield\" onClick={() => this.addNewItem('textfield')} />\n                                {/* <p id=\"textfield_label\" className='example_item'>Textfield</p> */}\n                            </div>\n                        </div>\n                    </div> \n                    <div id=\"middle_screen\" className=\"middle_screen\"> \n                        <div id=\"dimension\" className=\"dimension\" style={{width: this.state.width + \"px\", height: this.state.height + \"px\", scale: parseFloat(this.state.scale).toFixed(1)}}>\n                            {wireframe && items && items.map(item => (\n                                <WireframeItem items={items} item={item} key={item.id} isCurrSelection={this.state.isCurrSelection} \n                                deleteItem = {this.deleteItem} duplicateItem={this.duplicateItem} zoomIn={this.zoomIn} zoomOut={this.zoomOut} \n                                width={this.state.width} height={this.state.height} setSave={this.setSave} setCurrSelection={this.setCurrSelection}\n                                // Refs for property elements\n                                textFieldInputRef={this.textFieldInputRef} fontSizeTextfieldRef={this.fontSizeTextfieldRef} textColorFieldRef={this.textColorFieldRef}\n                                backgroundFieldRef={this.backgroundFieldRef} borderColorFieldRef={this.borderColorFieldRef} borderThicknessFieldRef={this.borderThicknessFieldRef}\n                                borderRadiusFieldRef={this.borderRadiusFieldRef} scale={this.state.scale}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                    <div className = \"right_screen\">\n                            <div className=\"labels_list\"> \n                            { this.state.isCurrSelection[0] ? \n                                // Case where item is selected\n                                <div className='right_screen_item_selected'>\n                                    <div className=\"properties_example\">\n                                        <p id=\"properties_label\" >Properties</p>\n                                        <input type=\"input\" id=\"textfield_input\" onChange={(e) => this.handleChange_text(e)}/>\n                                    </div>\n                                    <div id=\"font_size_label\"> Font Size: \n                                        <input type=\"input\" id=\"font_size_textfield\" onChange={(e) => this.handleChange_font_size(e)}/>\n                                    </div>\n                                    <div id=\"text_color_label\"> Text Color: \n                                        <input type=\"color\" id=\"text_color_field\" onChange = {(e) => this.handleChange_textColor(e)} />\n                                    </div>\n                                    <div id=\"background_label\"> Background: \n                                        <input type=\"color\" id=\"background_field\" onChange={(e) => this.handleChange_backgroundColor(e)}/>\n                                    </div>\n                                    <div id=\"border_color_label\"> Border Color: \n                                        <input type=\"color\" id=\"border_color_field\" onChange = {(e) => this.handleChange_borderColor(e)} />\n                                    </div>\n                                    <div id=\"border_thickness_label\"> Border Thickness:\n                                        <input type=\"input\" id=\"border_thickness_field\" onChange = {(e) => this.handleChange_border_thickness(e)} />\n                                    </div>\n                                    <div id= \"border_radius_label\"> Border Radius:\n                                        <input type=\"input\" id=\"border_radius_field\" onChange = {(e) => this.handleChange_border_radius(e)} />\n                                    </div> \n                                    <div id= \"zIndexItem\">\n                                        <input type=\"button\" id=\"bring_to_front\" value=\"Bring to Front\" onClick={() => this.bringItemToFront()}/>\n                                        <input type=\"button\" id=\"send_to_back\" value=\"Send to Back\" onClick={() => this.sendItemToBack()}/>\n                                    </div> \n                                    <div id= \"name_of_wireframe\" className=\"name_of_wireframe\"> Name:\n                                        <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                                    </div>\n                                </div>\n                                : \n                                // Case where item isn't selected\n                                <>\n                                    <div className='right_screen_no_item'> No item is selected </div>\n                                    <div id= \"name_of_wireframe\" className=\"name_of_wireframe_no_item\"> Name:\n                                        <input type=\"input\" id=\"name_wireframe_field\" onClick={this.prevent} defaultValue={this.state.name} onChange = {(e) => this.handleChange_name(e)} />\n                                    </div>\n                                </>\n                                }\n                            </div>\n                    </div> \n                    <div id=\"modal_screen_overlay\"> </div>\n                    <div id=\"my_modal\" className=\"modal\">\n                        <div className=\"modal-content \">\n                            <h4>Save Wireframe?</h4>\n                            <span> Would you like to save your progress? </span>\n                        </div>\n                        <button id=\"yes\" onClick={this.saveWork} className=\"modal-close\" style={{marginRight: '12px'}}>Yes</button>\n                        <button id=\"no\" onClick={this.closeWork} className=\"modal-close\">No</button>\n                        <div id=\"last_line\"> Without saving, all progress will be lost.</div>\n                    </div>\n                    <div id=\"wireframe_dimensions\">\n                        <div id=\"wireframe_dimension_left\" className=\"font_dimension\"> \n                            <button id=\"dimension_width_button\" disabled={this.state.isWidthEnabled} onClick={this.handleChange_diagram_width} >Update Width </button>\n                            <input type=\"input\" id=\"dimension_width\" name=\"width\" onChange ={(e) => this.checkWidth_diagram(e)}/>\n                        </div>\n                        <div id=\"wireframe_dimension_right\" className=\"font_dimension\"> \n                            <button id=\"dimension_height_button\" disabled={this.state.isHeightEnabled} onClick = {this.handleChange_diagram_height}>Update Height </button>\n                            <input type=\"input\" id=\"dimension_height\" name=\"height\" onChange ={(e) => this.checkHeight_diagram(e)}/>\n                        </div>\n                    </div> \n                </div>\n            );\n        }\n    }\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.firebase.auth,\n      accounts : state.firestore.ordered.accounts,\n      wireframes: state.firebase.profile.wireframes\n     }\n  };\n\n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'accounts' },\n    ]),\n  )(WireframeBox);","import React, { Component } from 'react';\nimport ClickOutHandler from 'react-onclickout'; \nimport {Rnd} from 'react-rnd'; // resizable and draggable component for React.\n\nclass WireframeItem extends Component {\n  constructor() {\n    super();\n    // this.rndRef = React.createRef();\n    this.state = {\n      // State variables initialized to props value as start value\n      // control_x_position : this.props.item.control_x_position,\n      // control_y_position : this.props.item.control_y_position,\n  \n      rerender : false,\n      isSelected : false,\n  \n      inner1 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      inner2 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      inner3 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      inner4 : Math.floor(Math.random() * 10000) + 100 + \"\",\n      \n      // drag bounds\n      // top: 40, \n      // left: 40\n  \n    }\n  }\n  \n  setSelected = (toggleVal) => {\n    this.setState({isSelected: toggleVal});\n    if (toggleVal) this.props.setCurrSelection(toggleVal, this.props.item.id); // send the item to parent\n    else this.props.setCurrSelection(toggleVal, null); // no item to send to parent\n  }\n\ncheckKeyPress = (e) => {\n  e.preventDefault();\n  console.log('WireframeItem.checkKeyPress: deleting item...')\n  if (this.state.isSelected) {\n    if (e.keyCode === 8 || e.key === \"Delete\") {\n      document.getElementById(\"font_size_textfield\").value = \"\";\n      document.getElementById(\"textfield_input\").value = \"\";\n      document.getElementById(\"text_color_field\").value = \"#000000\";\n      document.getElementById(\"background_field\").value = \"#000000\";\n      document.getElementById(\"border_color_field\").value = \"#000000\";\n      document.getElementById(\"border_thickness_field\").value = \"\";\n      document.getElementById(\"border_radius_field\").value = \"\";\n      this.deselectItem('delete');\n      this.props.deleteItem(this.props.item);\n    }\n    else if (e.keyCode === 68 && (e.ctrlKey || e.metaKey)) { // Ctrl + d to duplicate\n      console.log('WireframeItem.checkKeyPress: duplicating item...')\n      e.preventDefault();\n      this.duplicateSelectedItem();\n      this.deselectItem('duplicate');\n      // this.postDuplicate();\n      // this.saveProps();\n    }\n  }\n}\n\n// deleteItem = (item) => {\n//   let index = this.props.items.indexOf(item);\n//   this.props.items.splice( index, 1 ); // removed item\n//   this.setState({ rerender : true}); // rerender\n//   console.log('deleted item');\n// }\n\nduplicateSelectedItem = () => {\n  let item = this.props.item;\n  const item_duplicate = {\n      id : Math.floor(100000 + Math.random() * 900000),\n      control : item.control,\n      control_width : item.control_width,\n      control_height: item.control_height,\n      control_text: item.control_text,\n      control_font_size : item.control_font_size,\n      control_background : item.control_background,\n      control_border_color : item.control_border_color,\n      control_text_color : item.control_text_color,\n      control_border_thickness : item.control_border_thickness,\n      control_border_radius : item.control_border_radius,\n      control_x_position : item.control_x_position,\n      control_y_position : item.control_y_position,\n      is_duplicate : true\n  }\n  this.props.items.push( item_duplicate ); // add duplicated item \n  return item_duplicate;\n}\n\ncheckDraggable = () => {\n  // return true;\n  // if (this.state.isSelected) { return false; }\n  // else { return true; }\n}\n\ncheckResizable = () => {\n\nif (!this.state.isSelected) {\n  const returnable = {\n    bottom: false,\n    bottomLeft: false,\n    bottomRight: false,\n    left: false,\n    right: false,\n    top: false,\n    topLeft: false,\n    topRight: false\n    } \n  return returnable;\n  }\nelse {\n    const returnable2 = {\n      bottom: false,\n      bottomLeft: true,\n      bottomRight: true,\n      left: false,\n      right: false,\n      top: false,\n      topLeft: true,\n      topRight: true\n      } \n  return returnable2;\n  }\n}\n\ndeselectItem = (e) => {\n  console.log(\"EVENT: \", e)\n  if (this.state.isSelected && this.props.isCurrSelection[0] \n    && (e === 'delete' || e === 'duplicate' || e.target && (e.target.classList.contains('dimension') || // can only deselect when clicking within dimension \n    e.target.classList.contains('control_move')))) // check if it's another item\n  {\n    // console.log(\"WireframeItem.deselectItem - Event object: \", e);\n    console.log(\"WireframeItem.deselectItem - Deselecting Item With ID: \", this.props.item.id);\n\n    // Reset corner boxes CSS\n    document.getElementById(this.state.inner1).classList.remove(\"rectangle_topleft\");\n    document.getElementById(this.state.inner2).classList.remove(\"rectangle_topright\");\n    document.getElementById(this.state.inner3).classList.remove(\"rectangle_bottomleft\");\n    document.getElementById(this.state.inner4).classList.remove(\"rectangle_bottomright\");\n    document.getElementById(this.props.item.id).classList.remove(\"select_border\");\n\n    if (e.target && !e.target.classList.contains('control_move')) {\n      console.log('Selection was not another item - proceeding...');\n      // Reset inputs on the right hand side\n      document.getElementById(\"font_size_textfield\").value = \"\";\n      document.getElementById(\"textfield_input\").value = \"\";\n      document.getElementById(\"text_color_field\").value = \"#000000\";\n      document.getElementById(\"background_field\").value = \"#000000\";\n      document.getElementById(\"border_color_field\").value = \"#000000\";\n      document.getElementById(\"border_thickness_field\").value = \"\";\n      document.getElementById(\"border_radius_field\").value = \"\";\n      // Reset item selection CSS design\n      this.setSelected(false);\n    }\n    else {\n      this.setState({isSelected : false}); // tell itself that it isn't selected\n    } // In this use case, we are selecting another item\n  }\n}\n\nselectItem = (itemId, topLeft, topRight, bottomLeft, bottomRight) => {\n    // Case 1: Item is not currently selected\n    // if (this.state.isSelected === false && !this.props.isCurrSelection[0]) \n    // {\n      // this.props.setSave();\n      if (!this.state.isSelected) {\n        console.log(\"WireframeItem.selectItem - Selecting Item With ID: \", itemId);\n        document.getElementById(itemId).classList.add(\"select_border\");\n        // debugger;\n        // Select (add borders)\n        document.getElementById(topLeft).classList.add(\"rectangle_topleft\");\n        document.getElementById(topRight).classList.add(\"rectangle_topright\");\n        document.getElementById(bottomLeft).classList.add(\"rectangle_bottomleft\");\n        document.getElementById(bottomRight).classList.add(\"rectangle_bottomright\");\n  \n        this.setSelected(true);\n      }\n  // }\n}\n\nchangeButton = (e) => {\n  this.setState({ control_text : e.target.value});\n}\n\n// componentDidUpdate = () => {\n//   // Here, we are going to update the scale property of an item's RND container.\n//   let itemRnd = document.getElementById(\"item-rnd-\"+this.props.item.id);\n//   // 1. Check if selected item exists\n//   if (itemRnd != null && this.props.scale != null) {\n//     let currTransformStyle = itemRnd.style.transform;\n//     if (currTransformStyle != null) \n//     {\n//       // Case 1: Translate/Scale already exists, modify the scale (remove then re-add)\n//       if (currTransformStyle.indexOf(\"scale\") !== -1) {\n//         itemRnd.style.transform = currTransformStyle.replace(/scale.*$/i, \"scale(\" + this.props.scale + \")\");\n//       }\n//       // Case 2: Translate exists but Scale doesn't exist, add scale to it\n//       else if (currTransformStyle.indexOf(\"scale\") === -1) {\n//         itemRnd.style.transform  = currTransformStyle + \"scale(\" + this.props.scale + \")\";\n//       }\n//     }\n//   }\n// }\n\n\ncheckControl = () => {\n  // Check control, make it container_box (container), prompt_text (label), buttom_submit (button), textfield_input (textfield)\n\n  let name = this.props.item.control;\n  let key = this.props.item.id;\n  // let numScale =  parseFloat(this.props.scale).toFixed(1);\n\n  // console.log(\"x: \", this.props.item.control_x_position);\n  // let adjustedX = this.props.item.control_x_position/numScale;\n  // let adjustedY = this.props.item.control_y_position/numScale;\n  // console.log(\"x/numscale: \", this.props.item.control_x_position/numScale);\n  \n    return (\n      <ClickOutHandler onClickOut={(e) => this.deselectItem(e)}>\n        {/* <div id=\"rnd_canvas\" style={{scale: \"scale(\" + this.props.scale + \")\"}}> */}\n          <Rnd id={\"item-rnd-\"+key} onKeyDown={(e) => this.checkKeyPress(e)} enableResizing={this.checkResizable()} tabIndex=\"0\"\n            size={{width: this.props.item.control_width, height: this.props.item.control_height}}\n            // style={{transform: \"scale(\" + this.props.scale + \")\" + \"translate(\"+parseInt(this.props.item.control_x_position, 10)+\"px,\"+parseInt(this.props.item.control_y_position, 10)+\"px) !important;\"}}\n            style={{zIndex: this.props.item.z_index, position: 'absolute'}} \n            onDragStart={(e,data) => {this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)}}\n            onDragStop={(e,d) => { this.props.item.control_x_position = (d.x); this.props.item.control_y_position = (d.y); this.props.setSave()}}\n            onResize={(e, ignore1, ref, ignore2, ignore3) => {this.props.item.control_width = ref.offsetWidth; this.props.item.control_height = ref.offsetHeight; this.props.item.control_x_position = this.props.item.control_x_position; this.setState({rerender : true});}}\n            default={{x: (this.props.item.control_x_position), y: (this.props.item.control_y_position)}}> \n            { name === 'button' ? \n              // Case 1: Button\n              <button className={\"button_submit2 control_move\"}\n              style={{width: \"100%\", height: \"100%\",fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, //transform: \"scale(\" + this.props.scale + \")\",\n              color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n              id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > \n                {this.props.item.control_text} \n                <span id={this.state.inner1} />\n                <span id={this.state.inner2} />\n                <span id={this.state.inner3} />\n                <span id={this.state.inner4} />\n              </button> : \n              // Case 2: Container\n              name === 'container' ? \n                <div className={\"container_box2 control_move\"}\n                  style={{width: \"100%\", height: \"100%\", fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, //transform: \"scale(\" + this.props.scale + \")\",\n                  color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                  id={key} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)}> {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> :\n              // Case 3: Textfield\n              name === 'textfield' ? \n                <div>\n                  <input type=\"input\" id={key} className={\"textfield_input2 control_move\"} placeholder=\"Input\" \n                  style={{width: \"100%\", height: \"100%\", fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, //transform: \"scale(\" + this.props.scale + \")\",\n                  borderColor: this.props.item.control_border_color, color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\",\n                  borderRadius: this.props.item.control_border_radius + \"px\"}} onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} defaultValue={this.props.item.control_text} /> \n                  <div>\n                    <span id={this.state.inner1} />\n                    <span id={this.state.inner2} />\n                    <span id={this.state.inner3} />\n                    <span id={this.state.inner4} />\n                  </div>\n                </div> :\n              // Case 4: Label\n              name === 'label' ? \n                <div id={key} className={\"prompt_text2 control_move\"} \n                style={{width: \"100%\", height: \"100%\", fontSize: this.props.item.control_font_size + 'pt', backgroundColor: this.props.item.control_background, borderColor: this.props.item.control_border_color, //transform: \"scale(\" + this.props.scale + \")\",\n                color: this.props.item.control_text_color, borderWidth: this.props.item.control_border_thickness + \"px\", borderRadius: this.props.item.control_border_radius + \"px\"}} \n                onClick = {() => this.selectItem(key, this.state.inner1, this.state.inner2, this.state.inner3, this.state.inner4)} > {this.props.item.control_text} \n                  <span id={this.state.inner1} />\n                  <span id={this.state.inner2} />\n                  <span id={this.state.inner3} />\n                  <span id={this.state.inner4} />\n                </div> : null\n            }\n          </Rnd>\n        {/* </div>  */}\n      </ClickOutHandler>\n    )\n  }\n\nrender() {\n  // console.log('this.props: ', this.props)\n  // console.log('width', this.props.item.control_width);\n  return (\n    // <div id=\"resize_element\"> \n    <>\n      {this.checkControl()}\n    </> \n    // </div>\n        );\n    }\n}\n\nexport default WireframeItem;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\n// (ADDED)\n// var firebaseConfig = {\n//     apiKey: \"AIzaSyCZcHpbnk8IbCdYQExAkweaPvusji6qaIM\",\n//     authDomain: \"project316-7097b.firebaseapp.com\",\n//     databaseURL: \"https://project316-7097b.firebaseio.com\",\n//     projectId: \"project316-7097b\",\n//     storageBucket: \"project316-7097b.appspot.com\",\n//     messagingSenderId: \"37182883154\",\n//     appId: \"1:37182883154:web:9e6c0d8fe39031392fa68b\",\n//     measurementId: \"G-SGKG7GR5XT\"\n// };\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBvf3l8mJ6YxMZ12mkiRJOnc9yJ7Htw4_U\",\n    authDomain: \"hamam-48642.firebaseapp.com\",\n    projectId: \"hamam-48642\",\n    storageBucket: \"hamam-48642.appspot.com\",\n    messagingSenderId: \"161099268923\",\n    appId: \"1:161099268923:web:5c92edce48f02fe8586d1e\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_STARTED = 'REGISTER_STARTED';\nexport const REGISTER_SUCCEEDED = 'REGISTER_SUCCEEDED';\nexport const REGISTER_ERRORED = 'REGISTER_ERRORED';\nexport const LOGIN_SUCCEEDED = 'LOGIN_SUCCESS';\nexport const LOGIN_ERRORED = 'LOGIN_ERROR';\nexport const LOGGED_OUT_LINK_CHANGED = 'LOGGED_OUT_LINK_CHANGED';\nexport const RESET_AUTH_ERROR = 'RESET_AUTH_ERROR';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\n/*********************************************************************\n* PURPOSE: When called, returns object with required information\n* WHERE IS IT USED?: Used in userActions functions / mapDispatchtoProps\n************************************************************************/\n\nexport const showLinkOnNavbar = (link) => {\n    console.log(\"HERE with\", link);\n    return { \n        type: LOGGED_OUT_LINK_CHANGED,\n        loggedOutLink : link\n    }\n};\n\nexport const resetAuthError = () => {\n    return { \n        type: RESET_AUTH_ERROR,\n        error: ''\n    }\n};\n\nexport const registerStarted = () => {\n    return { \n        type: REGISTER_STARTED\n    }\n};\n\nexport const registerSucceeded = (newUser) => {\n    return { \n        type: REGISTER_SUCCEEDED,\n        user: newUser\n    }\n};\nexport function registerErrored(error) { \n    console.log(\"Registering register errored function, attaching error: \", error);\n    return { \n        type: REGISTER_ERRORED, \n        error : error\n    }\n};\nexport function loginSucceeded() {\n    return { \n        type: LOGIN_SUCCEEDED \n    }\n};\nexport function loginErrored(error) {\n    return { \n        type: LOGIN_ERRORED, \n        error : error\n    }\n};\nexport function logoutSucceeded() {\n    return { type: LOGIN_SUCCEEDED }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS WIREFRAME UPDATES\nexport function createWireFrame(wireframe) {\n    return {\n        type: 'CREATE_WIREFRAME',\n        wireframe\n    }\n}\nexport function createWireFrameError(error) {\n    return {\n        type: 'CREATE_WIREFRAME_ERROR',\n        error\n    }\n}","import * as actionCreators from '../../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\n\n// Setting initial state for a reducer is typically done using default parameters as in the simple addition function below\n// function add(a = 0, b = 0) { return a + b }\nconst initState = {\n  creating : false,\n  authError: '',\n  loggedOutLink : ''\n};\n\n// Using ...state spread operator in the sense of \"if you can't change it, replace it\"\n\n// MANPULATES REDUX STATE\nconst authReducer = (state = initState, action) => {\n  // console.log(\"authReducer: Beginning mapping of type \" + action.type + \" to corresponding handler\");\n  switch (action.type) {\n    case actionCreators.RESET_AUTH_ERROR:\n      return {\n        ...state,\n        authError: ''\n      };\n    case actionCreators.LOGGED_OUT_LINK_CHANGED:\n      console.log('changing loggedOutLink to: ', action.loggedOutLink);\n      return {\n        ...state,\n        loggedOutLink: action.loggedOutLink\n      };\n    case actionCreators.LOGIN_ERRORED:\n      return {\n        ...state,\n        authError: action.error\n      };\n    case actionCreators.LOGIN_SUCCEEDED:\n      return {\n        ...state,\n        authError: '',\n      };\n    case actionCreators.REGISTER_STARTED:\n      return {\n        ...state\n      }\n    case actionCreators.REGISTER_SUCCEEDED:\n      return {\n        ...state,\n        // user : action.user, // commented out - user object is available via firebase.auth\n        authError: ''   \n      };\n    case actionCreators.REGISTER_ERRORED:\n      // console.log(\"Mapped to Register Errored with message: \", action.error)\n      return {\n        ...state,\n        authError: action.error     \n      };\n    default:\n      return {\n      ...state,\n      authError: '',\n      }\n  }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // pre-made reducer that handles syncing firestore data to our STORE state\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer/authReducer';\nimport accountReducer from './accountReducer/accountReducer';\n\n// Dispatches (built from actionCreators) get routed to here\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  account: accountReducer,\n  firestore: firestoreReducer, // reducer will know about our firebase proj online becasue we passed in firebase config in ReactReduxFirebaseApp.js\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import * as actionCreators from '../../actions/actionCreators.js'\n\nexport const loginHandler = async ( credentials, firebase, loginSucceeded, loginErrored ) => {\n  console.log(\"userActions.loginHandler: Beginning loginHandler with user: \", credentials);\n  firebase.auth().signInWithEmailAndPassword(\n    credentials.email,\n    credentials.password,\n  ).catch((error) => {\n    console.log(\"authReducerHelpers.loginHandler error: \", error.message);\n    loginErrored(error.message);\n  });\n    console.log(\"LOGIN_SUCCESS\");\n    loginSucceeded(); // dispatch call\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSucceeded);\n    });\n};\n\nexport const registerHandler = async (newUser, firebase, firestore, startedDispatchCall, \n                                      succeededDispatchCall, erroredDispatchCall) => {\n  console.log(\"authReducerHelpers.registerHandler: Beginning registerHandler with user: \", newUser);\n  startedDispatchCall();\n  const credentials = {\n    'email' : newUser.email,\n    'password' : newUser.password\n  }\n  const userResp = await firebase.auth().createUserWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n  ).catch((error) => {\n    console.log('authReducerHelpers.registerHandler error code when adding user: ', error.message);\n    erroredDispatchCall(error.message);\n    return;\n  })\n  if (userResp != null) {\n    firestore.collection('accounts').doc(userResp.user.uid).set({\n      name: newUser.firstName + \" \" + newUser.lastName,\n      created_time: new Date(),\n      account_key: Math.floor(Math.random() * 1000) + 100,\n      administrator: false,\n      wireframes: []\n    }).catch((error) => {\n      console.log('authReducerHelpers.registerHandler: Error when adding new user-associated account: ', error);\n    });\n    succeededDispatchCall(userResp);\n    // FIREBASE DOCS: If the new account was created, the user is signed in automatically!\n  }\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>\n          <span id=\"navbar_links\">Log Out </span> </NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nclass LoggedOutLinks extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // loggedOutLink : '/login', // when rerenders, extracts from url\n    }\n  }\n\n  render() {\n\n    // console.log(\"LOGGED OUT LINK: \", this.props.loggedOutLink);\n\n    return (\n      <ul className = \"right\" >\n        <li >\n          {this.props.loggedOutLink === '/register' ? \n          <NavLink to=\"/register\">\n            <span id=\"navbar_links\">Register</span>\n          </NavLink>\n          :\n          <NavLink to=\"/login\">\n            <span id=\"navbar_links\">Login</span>\n          </NavLink>\n        }\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(\"STATE: \", state);\n  return {\n    authError: state.auth.authError,\n    loggedOutLink: state.auth.loggedOutLink,\n  }\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(LoggedOutLinks);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"banner\">\n            {links}\n        <div className=\"wireframer_text\" >\n          Wireframer!\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler} from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { registerStarted, registerSucceeded, registerErrored, showLinkOnNavbar, resetAuthError } from '../../redux/actions/actionCreators';\nimport { getFirestore } from 'redux-firestore';\nimport constants from '../../config/constants';\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    failedMsg: ''\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.firstName !== '' && this.state.lastName !== '' && \n    this.state.email !== '' && this.state.password !== '') {\n\n      if (this.state.password.length < 6) {\n        this.setState({failedMsg : constants.passwordValidationErrMsg});\n        return;\n      }\n\n      const credentials = {\n        firstName : this.state.firstName,\n        lastName : this.state.lastName,\n        email : this.state.email,\n        password: this.state.password\n      }\n      registerHandler(credentials, this.props.firebase, getFirestore(), this.props.registerStarted, this.props.registerSucceeded, this.props.registerErrored); // create the user with firebase\n    }\n    else {\n      this.setState({failedMsg : constants.registrationFailedErrMsg});\n    }\n  }\n\n  componentDidMount = () => {\n    if (this.props.loggedOutLink !== '/login') {\n      this.props.showLinkOnNavbar('/login');\n    }\n    this.props.resetAuthError();\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n\n      <div className=\"register_box\">\n        <div className=\"register-content\">\n            <form id=\"register_form\" className=\"form-format\" onSubmit={this.handleSubmit}>\n              <h5 id=\"register_text\">Register</h5>\n              <br/>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"register-input-field\">\n                <br/>\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                <div className=\"red-text center\"><p>{authError ? authError : this.state.failedMsg}</p></div>\n              </div>\n            </form>\n            <div className=\"register-wireframer-text-box\">\n              <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n              </div>\n            </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n  loggedOutLink : state.auth.loggedOutLink\n});\n\n// mapDispatchToProps = Component to Redux (calling an action, writing to the store)\n// Will map a function, \"register\", to a dispatcher\nconst mapDispatchToProps = dispatch => ({\n  // registerUser: (user, firebase) => dispatch(registerHandler(user, firebase, getFirestore))\n  registerStarted: () => dispatch(registerStarted()),\n  registerSucceeded: (user) => dispatch(registerSucceeded(user)),\n  registerErrored: (error) => dispatch(registerErrored(error)),\n  showLinkOnNavbar: (link) => dispatch(showLinkOnNavbar(link)),\n  resetAuthError: () => dispatch(resetAuthError())\n});\n\nexport default compose(\n  firebaseConnect(), // (Higher Order Component) props.firebase set on RegisterScreen component as firebase object with helpers\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { loginHandler } from '../../redux/reducers/authReducer/authReducerHelpers'\nimport { loginErrored, loginSucceeded, showLinkOnNavbar, resetAuthError } from '../../redux/actions/actionCreators';\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebase.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n    loginHandler(credentials, firebase, props.loginSucceeded, props.loginErrored);\n  }\n\n  componentDidMount = () => {\n    if (this.props.loggedOutLink !== '/register') {\n      this.props.showLinkOnNavbar('/register');\n    }\n    this.props.resetAuthError();\n  }\n\n  render() {\n\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"login_box\">\n        <div className=\"login-content\">\n          {/* Flexbox Starts */}\n          <div className=\"form_format\"> \n            <form onSubmit={this.handleSubmit} id=\"login-form\">\n              <h5 id=\"login_text\">Login</h5>\n              < br /> \n              <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n              </div>\n            </form>\n          </div>\n          <div className=\"wireframer_text_box\">\n            <div id=\"wireframe_text_box_text\"> \n              Wireframer™\n            </div>\n          </div>\n          {/* Flexbox Ends */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n  loggedOutLink : state.auth.loggedOutLink\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // login: authData => loginHandler(authData)(dispatch),\n  loginSucceeded : () => dispatch(loginSucceeded()),\n  loginErrored : (error) => dispatch(loginErrored(error)),\n  showLinkOnNavbar: (link) => dispatch(showLinkOnNavbar(link)),\n  resetAuthError: () => dispatch(resetAuthError())\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { getFirestore } from 'redux-firestore';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nclass WireFrameCards extends React.Component {\n\n\ndeleteWireframe = (wireframeKey) => {\n\n    const fireStore = getFirestore();\n    let index = this.props.wireframes.map(function (wireframe) {return wireframe.key;}).indexOf(wireframeKey);\n    this.props.wireframes.splice(index, 1);\n    fireStore.collection(\"accounts\").doc(this.props.userId).update({ wireframes: this.props.wireframes});\n}\n    render() {\n\n        // if (account.id !== this.props.id) {\n        //     return null;\n        // }\n        // else {\n        //     const wireframes = account.wireframes;\n        return (\n            <div>\n                <div className=\"card-content black-text text-darken-3\">\n                    <span className=\"card-title\"> \n                        {this.props.wireframes && this.props.wireframes.map(wireframe => (\n                            <div className=\"wireframe_card\" key={wireframe.key}>\n                                <div id=\"delete_icon\" className=\"material-icons small\" onClick={ () => {this.deleteWireframe(wireframe.key)}} > delete</div>\n                                <Link to={'/wireframe/' + wireframe.key} on >\n                                    <div id = \"wireframe_name\">\n                                        {wireframe.name}\n                                    </div>\n                                </Link>\n                            </div>\n                        ))}\n                     </span>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        accounts: state.firestore.data.accounts,\n        userId : state.firebase.auth.uid // same as account id \n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n//   firestoreConnect([\n//       { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n//     ])\n)(WireFrameCards);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase'; // use this as a higher order component to connect cmp with firestore data\nimport { getFirestore } from 'redux-firestore';\nimport WireFrameCards from './WireFrameCards';\n\nclass HomeScreen extends Component {\n\n  state = {\n    isNewWireframe : false,\n    wireframeKey : null,\n    list_index : 0,\n    adminRedirect: false,\n    goAdmin : false,\n  }\n\nhandleNewWireframe = () => {\n  const fireStore = getFirestore();\n  let answer = Math.floor(Math.random() * 1000) + 100;\n  fireStore.collection('accounts').doc(this.props.auth.uid).update({\n      'wireframes': fireStore.FieldValue.arrayUnion({\n        name: \"Unknown\",\n        created_time: new Date(), // to later sort, the ones in json dont need a date. that order doesnt matter. \n        width : 490, // default\n        height : 480, // default\n        items: [],\n        scale : 1,\n        key : answer,\n        bringToFrontVal : 1073741823,\n        sendToBackVal : 1073741823\n      })\n    }).then(() => {\n      this.setState({wireframeKey : answer});\n      this.setState({isNewWireframe : true});\n    }).catch((error) => {\n      console.log(error);\n  }); \n}\n\ncomponentDidMount() {\n  // Check if user is an administrator\n  // this.checkAdministrator()\n}\n\n    render() {\n    \n      if (!this.props.auth.uid) {\n        return <Redirect to=\"/login\" />;\n      }\n      if (this.state.adminRedirect) {\n        return <Redirect to=\"/databaseTester\" />;\n      }\n\n      if (this.state.isNewWireframe) {\n        return <Redirect to={'/wireframe/' + this.state.wireframeKey} />;\n     }\n\n        return (\n          \n          <div className=\"home_wrapper\">\n            {/* Flexbox Starts */}\n            <div className=\"home-content\">\n              <div className=\"form_format\"> \n                <form onSubmit={this.handleSubmit} className=\"\">\n                  <h5 id=\"login_text\">Recent Work</h5>\n                  <div onClick={this.updateList} >\n                    <div className=\"wireframes section\">\n                        <WireFrameCards wireframes={this.props.wireframes}/>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"wireframer_text_box\">\n                <div id=\"wireframe_text_box_text\"> \n                  Wireframer™\n                </div>\n                {/* Display admin button only if user is an administrator */}\n                {this.props.isAdministrator === true ? \n                <div id=\"is_administrator\"> \n                  <button id=\"admin_button\" onClick={() => this.setState({adminRedirect: true})}> Go to Admin Page 🔐</button>\n                </div> : ''}\n              </div>\n            </div>\n            {/* Flexbox Ends */}\n            <div id=\"create_wireframe\">\n              <button id=\"create_wireframe_button\" onClick={this.handleNewWireframe}>\n              Create New Wireframe\n              </button>\n            </div>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"HomeScreen.js State: \", state);\n    return {\n        isAdministrator : state.firebase.profile.administrator,\n        auth: state.firebase.auth,\n        wireframes : state.firebase.profile.wireframes\n    }\n};\n\nexport default compose( // compose is a redux function\n  connect(mapStateToProps),\n  firestoreConnect([\n      { collection: 'accounts' } // When component is active, I want to connect to accounts collection\n    ])\n)(HomeScreen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport WireframeBox from './WireframeBox';\n\nclass EditScreen extends Component {\n  render() {\n    return (\n      <div className=\"edit_box\">\n        {this.props.wireframes && this.props.auth ? \n        (\n          <WireframeBox accounts={this.props.accounts} wireframe={this.props.wireframes ? this.props.wireframes[this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))] : null}\n          wireframe_key={Number(this.props.match.params.key)} accountId={this.props.auth.uid}\n          wireframeIndex = {this.props.wireframes.map((wireframer) => wireframer.key).indexOf(Number(this.props.match.params.key))} />\n        ) \n        : null\n        }\n      </div>\n      );\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = (state) => { // arg of state is the entire redux store \n  // console.log(\"editscreen, state: \", state);\n  // debugger;\n  return {\n    auth: state.firebase.auth,\n    accounts : state.firestore.ordered.accounts,\n    wireframes: state.firebase.profile.wireframes\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'accounts' },\n  ]),\n)(EditScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport accountJson from './TestWireframesData.json'\nimport { getFirestore } from 'redux-firestore';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n// import { registerHandler } from '../redux/reducers/authReducer/authReducerHelpers';\nimport { Redirect } from 'react-router-dom';\n\nclass DatabaseTester extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        goHome : false,\n        administator : false\n      }\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    \n    goHome = () => {\n        this.setState({goHome : true});\n      }\n\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('accounts').get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                let reference = fireStore.collection('accounts').doc(doc.id).get();\n                reference.then(\n                    doc => {\n                      let info = doc.data();\n                      if (info.administrator !== true) {\n                        fireStore.collection('accounts').doc(doc.id).delete();\n                      }\n            })\n        });\n    })\n}\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n\n        accountJson.accounts.forEach(accountJson => {\n        fireStore.collection('accounts').doc(accountJson.account_id).set({\n            created_time: new Date(),\n            name: accountJson.name,\n            email: accountJson.email,\n            account_key: accountJson.account_key,\n            administrator: accountJson.administrator,\n            wireframes: accountJson.wireframes,\n            })\n        });\n    }\n\n    checkAdministrator = () => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('accounts').doc(this.props.auth.uid).get();\n      \n        reference.then(\n        doc => {\n          let info = doc.data();\n          if (info.administrator === true) {\n            this.setState({ administrator : true});\n            // this.setState({administrator : true});\n          }\n          else {\n            this.setState({ administrator : false});\n          }\n          }\n        )\n      }\n\n    render() {\n\n        if (this.state.goHome) {\n            return <Redirect to=\"/\" />;\n          }\n\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n\n        this.checkAdministrator()\n        if (this.state.administrator === false) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return ( \n            <div id=\"admin_wrapper\">\n                <div id=\"admin_options\">\n                  <button id=\"return_home\" className=\"handle_button\" onClick={this.goHome}> Return Home </button>\n                  <button id=\"clear_database\" className=\"handle_button\" onClick={this.handleClear}>Clear Database</button>\n                  <button id=\"reset_database\" className=\"handle_button\" onClick={this.handleReset}>Reset Database</button>\n                </div>\n                <div id=\"admin_notes\"> \n                    THIS PAGE IS FOR ADMINISTRATORS ONLY!\n                    <br/>\n                    <br/>\n                    Please be cautious when clearing the database. It will wipe the data of NON-ADMINS as dictated in the firestore. \n                    <br/>\n                    <br/>\n                    As for the Reset button, default users will be loaded into the database for testing purposes. \n                    <br/>\n                    <br/>\n                    For any questions, please contact danielhamam@outlook.com. Enjoy the\n                    use of your controls as an administrative designer!\n                </div>\n            </div>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  });\n\nconst mapDispatchToProps = dispatch => ({\n    // register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n  });\n  \n\n  export default compose(\n    firebaseConnect(),\n    connect(mapStateToProps, mapDispatchToProps),\n  )(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport EditScreen from './components/edit_screen/EditScreen.js';\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/wireframe/:key\" component={EditScreen} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\n// mapStateToProps = Redux to Component (reading from the store)\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\n\n// Configs out Firebase/Firestore credentials with React/Redux\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'accounts',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase, // config\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/project_layout.css'\nimport './css/project_style.css'\n\nimport ReactReduxFirebaseApp from './redux/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}